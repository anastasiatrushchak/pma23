import sys

class Node:
    def __init__(self, data=None):
        self.data = data
        self.next_node = None
        self.prev_node = None

class NodeNotFoundError(Exception):
    pass

class LinkedList:
    def __init__(self):
        self.head = None
        self.tail = None

    def is_empty(self):
        return self.head is None

    def append(self, data):
        new_node = Node(data)
        if self.is_empty():
            self.head = new_node
            self.tail = new_node
        elif data < self.head.data:
            new_node.next_node = self.head
            self.head.prev_node = new_node
            self.head = new_node
        else:
            current_node = self.head
            while current_node.next_node and data > current_node.next_node.data:
                current_node = current_node.next_node

            if current_node.next_node:
                new_node.next_node = current_node.next_node
                current_node.next_node.prev_node = new_node
            else:
                self.tail = new_node

            new_node.prev_node = current_node
            current_node.next_node = new_node

    def prepend(self, data):
        new_node = Node(data)
        if self.is_empty():
            self.head = new_node
            self.tail = new_node
        else:
            new_node.next_node = self.head
            self.head.prev_node = new_node
            self.head = new_node

    def insert_at_end(self, data):
        new_node = Node(data)
        if self.is_empty():
            self.head = new_node
            self.tail = new_node
        else:
            new_node.prev_node = self.tail
            self.tail.next_node = new_node
            self.tail = new_node

    def delete(self, data):
        current_node = self.head
        while current_node:
            if current_node.data == data:
                if current_node.prev_node:
                    current_node.prev_node.next_node = current_node.next_node
                else:
                    self.head = current_node.next_node

                if current_node.next_node:
                    current_node.next_node.prev_node = current_node.prev_node
                else:
                    self.tail = current_node.prev_node

                return True

            current_node = current_node.next_node

        print(f"Помилка: Елемент {data} не знайдено у списку")
        sys.exit(1)

    def display(self):
        elements = []
        current_node = self.head
        while current_node:
            elements.append(current_node.data)
            current_node = current_node.next_node
        print(elements)


linked_list = LinkedList()


linked_list.append(0)
linked_list.append(1)
linked_list.append(4)
linked_list.append(2)
linked_list.append(3)
linked_list.append(4)
linked_list.delete(7)

linked_list.display()
