Index: Oleh Kaliuzhnyi/VectorProject/VectorOne.txt
===================================================================
diff --git a/Oleh Kaliuzhnyi/VectorProject/VectorOne.txt b/Oleh Kaliuzhnyi/VectorProject/VectorOne.txt
deleted file mode 100644
--- a/Oleh Kaliuzhnyi/VectorProject/VectorOne.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 3 4
\ No newline at end of file
Index: MaksymPetukhov/matrixTask5/output.txt
===================================================================
diff --git a/MaksymPetukhov/matrixTask5/output.txt b/MaksymPetukhov/matrixTask5/output.txt
deleted file mode 100644
--- a/MaksymPetukhov/matrixTask5/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-Addition:
-[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]
-Subtraction:
-[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]
-Multiplication:
-[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
-Division:
-0
Index: FlysYurii/Task(Matrix and vectors)/result_matrix.txt
===================================================================
diff --git a/FlysYurii/Task(Matrix and vectors)/result_matrix.txt b/FlysYurii/Task(Matrix and vectors)/result_matrix.txt
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and vectors)/result_matrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-6 3
-1 2
Index: nastia_vasylyk/pythonMatrixVectors/vect.output.txt
===================================================================
diff --git a/nastia_vasylyk/pythonMatrixVectors/vect.output.txt b/nastia_vasylyk/pythonMatrixVectors/vect.output.txt
deleted file mode 100644
--- a/nastia_vasylyk/pythonMatrixVectors/vect.output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-Suma: []
Index: anastasiia_trushchak/Homework/Homework_02/VectorClass/inputVector3.txt
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_02/VectorClass/inputVector3.txt b/anastasiia_trushchak/Homework/Homework_02/VectorClass/inputVector3.txt
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_02/VectorClass/inputVector3.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-3 5 8
\ No newline at end of file
Index: yuliamalynovska/homework/matrix/const_matrix.py
===================================================================
diff --git a/yuliamalynovska/homework/matrix/const_matrix.py b/yuliamalynovska/homework/matrix/const_matrix.py
deleted file mode 100644
--- a/yuliamalynovska/homework/matrix/const_matrix.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-INPUT = 'inputMatrix.txt'
-OUTPUT = 'outputMatrix.txt'
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/first_vector.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/first_vector.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/first_vector.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/first_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 3 4 т
\ No newline at end of file
Index: ZlatomyraSeverylova/task1_fibonachi/out.txt
===================================================================
diff --git a/ZlatomyraSeverylova/task1_fibonachi/out.txt b/ZlatomyraSeverylova/task1_fibonachi/out.txt
deleted file mode 100644
--- a/ZlatomyraSeverylova/task1_fibonachi/out.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[2.0, 5.0, 7.0, 12.0, 19.0, 31.0, 50.0, 81.0, 131.0, 212.0]
\ No newline at end of file
Index: AnastasiaPelyno/Matrix_Plus_Minus/matrix_1.txt
===================================================================
diff --git a/AnastasiaPelyno/Matrix_Plus_Minus/matrix_1.txt b/AnastasiaPelyno/Matrix_Plus_Minus/matrix_1.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Matrix_Plus_Minus/matrix_1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-4 5 6
-7 8 9
\ No newline at end of file
Index: yuliamalynovska/homework/task1 fibonacci/input.txt
===================================================================
diff --git a/yuliamalynovska/homework/task1 fibonacci/input.txt b/yuliamalynovska/homework/task1 fibonacci/input.txt
deleted file mode 100644
--- a/yuliamalynovska/homework/task1 fibonacci/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-5 7
\ No newline at end of file
Index: ZlatomyraSeverylova/classMatrix/input_matrix_b.txt
===================================================================
diff --git a/ZlatomyraSeverylova/classMatrix/input_matrix_b.txt b/ZlatomyraSeverylova/classMatrix/input_matrix_b.txt
deleted file mode 100644
--- a/ZlatomyraSeverylova/classMatrix/input_matrix_b.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-3 7 5
-2 8 7
-5 3 4
Index: LevPredko/MatrixVectorWithClass_3/matrix_vector.py
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_3/matrix_vector.py b/LevPredko/MatrixVectorWithClass_3/matrix_vector.py
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_3/matrix_vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,273 +0,0 @@
-import Constants
-
-class Matrix:
-    def __init__(self, file_path1, file_path2):
-        self.matrix1 = self.read_matrix_from_file(file_path1)
-        self.matrix2 = self.read_matrix_from_file(file_path2)
-
-    @staticmethod
-    def read_matrix_from_file(file_path):
-        matrix = []
-        try:
-            with open(file_path, 'r') as readFile:
-                for line in readFile:
-                    line = line.strip()
-                    row = [int(i) for i in line.split(Constants.SEPARATOR)]
-                    matrix.append(row)
-            return matrix
-        except FileNotFoundError as e:
-            print("Error: File not found",e)
-            return None
-        except Exception as e:
-            print("An unexpected error occurred",e)
-            return None
-
-    def __add__(self, other):
-        if len(self.matrix1) != len(other.matrix2) or len(self.matrix1[0]) != len(other.matrix2[0]):
-            print("Error: Matrices must have the same dimensions for addition")
-            return None
-
-        addition = []
-        for i in range(len(self.matrix1)):
-            row = []
-            for j in range(len(self.matrix1[0])):
-                row.append(self.matrix1[i][j] + other.matrix2[i][j])
-            addition.append(row)
-        return addition
-
-    def __sub__(self, other):
-        if len(self.matrix1) != len(other.matrix2) or len(self.matrix1[0]) != len(other.matrix2[0]):
-            print("Error: Matrices must have the same dimensions for subtraction")
-            return None
-
-        subtraction = []
-        for i in range(len(self.matrix1)):
-            row = []
-            for j in range(len(self.matrix1[0])):
-                row.append(self.matrix1[i][j] - other.matrix2[i][j])
-            subtraction.append(row)
-        return subtraction
-
-    def __mul__(self, other):
-        if len(self.matrix1[0]) != len(other.matrix2):
-            print("Error: Number of columns in the first matrix must be equal to the number of rows in the second matrix")
-            return None
-
-        multiplication = []
-        for i in range(len(self.matrix1)):
-            row = []
-            for j in range(len(other.matrix2[0])):
-                product = 0
-                for k in range(len(other.matrix2)):
-                    product += self.matrix1[i][k] * other.matrix2[k][j]
-                row.append(product)
-            multiplication.append(row)
-        return multiplication
-
-    def __truediv__(self, other):
-        try:
-            det = self.determinant(other.matrix2)
-
-            if det == 0:
-                raise ValueError("The determinant of the second matrix is zero, division is not possible")
-
-            transposed = []
-            for i in range(len(self.matrix1)):
-                transposed.append([])
-                for j in range(len(self.matrix1[0])):
-                    transposed[i].append(self.cofactor(other.matrix2, i, j))
-            transposed = self.transpose(transposed)
-
-            inverse = []
-            for i in range(len(transposed)):
-                inverse.append([])
-                for j in range(len(transposed[0])):
-                    value = float(transposed[i][j]) / det
-                    inverse[i].append(round(value, 2))
-
-            result = self.multiplication_for_divide(self.matrix1, inverse)
-
-            for i in range(len(result)):
-                for j in range(len(result[0])):
-                    result[i][j] = round(result[i][j], 2)
-            return result
-        except ZeroDivisionError as e:
-            print("Error: Different sizes are specified in the file", e)
-
-    @staticmethod
-    def determinant(matrix):
-        det = 0
-        for i in range(len(matrix)):
-            add = 1
-            sub = 1
-            for j in range(len(matrix)):
-                add *= matrix[j][(i + j) % len(matrix)]
-                sub *= matrix[j][(i - j) % len(matrix)]
-            det += (add - sub)
-        if det == 0:
-            raise ValueError("The determinant cannot be equal to 0")
-        return det
-
-    @staticmethod
-    def transpose(matrix):
-        rows = len(matrix)
-        cols = len(matrix[0])
-        result = [[None] * rows for _ in range(cols)]
-        for i in range(rows):
-            for j in range(cols):
-                result[j][i] = matrix[i][j]
-        return result
-
-    def cofactor(self, matrix, row, col):
-        addition = []
-        for i in range(len(matrix)):
-            for j in range(len(matrix[0])):
-                if i != row and j != col:
-                    addition.append(matrix[i][j])
-        result = ((-1) ** (row + col)) * (addition[0] * addition[3] - addition[2] * addition[1])
-        return result
-
-    def multiplication_for_divide(self, matrix1, matrix2):
-        multiplication = []
-        for i in range(len(matrix1)):
-            row = []
-            for j in range(len(matrix2[0])):
-                product = 0
-                for k in range(len(matrix2)):
-                    product += matrix1[i][k] * matrix2[k][j]
-                row.append(product)
-            multiplication.append(row)
-        return multiplication
-
-
-class Vector:
-    def __init__(self, file_path1, file_path2):
-        self.vector1 = self.read_vector_from_file(file_path1)
-        self.vector2 = self.read_vector_from_file(file_path2)
-    @staticmethod
-    def read_vector_from_file(file_path):
-        vector = []
-        try:
-            with open(file_path, 'r') as readFile:
-                for line in readFile:
-                    line = line.strip()
-                    row = [int(i) for i in line.split(Constants.SEPARATOR)]
-                    vector.append(row)
-            return vector
-        except FileNotFoundError as e:
-            print(f"Error: File not found - {e}")
-            return None
-        except Exception as e:
-            print(f"An unexpected error occurred - {e}")
-            return None
-
-    def __add__(self, other):
-        if len(self.vector1) != len(other.vector2):
-            print("Error: Vectors must have the same length for addition")
-            return None
-
-        add_vector = []
-        for i in range(len(self.vector1)):
-            result_row = []
-            for j in range(len(self.vector1[i])):
-                result_row.append(self.vector1[i][j] + other.vector2[i][j])
-            add_vector.append(result_row)
-        return add_vector
-
-    def __sub__(self, other):
-        if len(self.vector1) != len(other.vector2):
-            print("Error: Vectors must have the same length for subtraction")
-            return None
-
-        sub_vector = []
-        for i in range(len(self.vector1)):
-            result_row = []
-            for j in range(len(self.vector1[i])):
-                result_row.append(self.vector1[i][j] - other.vector2[i][j])
-            sub_vector.append(result_row)
-        return sub_vector
-
-    def __mul__(self, other):
-        if len(self.vector1) != len(other.vector2):
-            print("Error: Vectors must have the same length for element-wise multiplication")
-            return None
-
-        mul_vector = []
-        for i in range(len(self.vector1)):
-            result_row = []
-            for j in range(len(self.vector1[i])):
-                result_row.append(self.vector1[i][j] * other.vector2[i][j])
-            mul_vector.append(result_row)
-        return mul_vector
-
-    def __truediv__(self, other):
-        try:
-            if len(self.vector1) != len(other.vector2):
-                print("Error: Vectors must have the same length for element-wise division")
-                return None
-
-            div_vector = []
-            for i in range(len(self.vector1)):
-                result_row = []
-                for j in range(len(self.vector1[i])):
-                    if other.vector2[i][j] == 0:
-                        print("Error: Division by zero is not allowed")
-                        return None
-                    result_row.append(self.vector1[i][j] / other.vector2[i][j])
-                div_vector.append(result_row)
-            return div_vector
-        except ZeroDivisionError as e:
-            print("Error: Division by zero is not allowed", e)
-
-
-try:
-    matrix = Matrix(Constants.Input_Matrix_1, Constants.Input_Matrix_2)
-    vector = Vector(Constants.Input_Vector_1, Constants.Input_Vector_2)
-
-    with open("output2.txt", "w") as file:
-        choice = input("Matrix or Vector? (M or V): ")
-        operation = input("Enter the operation (+, -, *, /): ")
-
-        if choice == "M":
-            if operation == "+":
-                result = matrix + matrix
-            elif operation == "-":
-                result = matrix - matrix
-            elif operation == "*":
-                result = matrix * matrix
-            elif operation == "/":
-                result = matrix / matrix
-            else:
-                print("Error: There is no such operator for matrices")
-
-            if result:
-                for row in result:
-                    file.write(' '.join(map(str, row)) + '\n')
-
-        elif choice == "V":
-            if operation == "+":
-                result = vector + vector
-            elif operation == "-":
-                result = vector - vector
-            elif operation == "*":
-                result = vector * vector
-            elif operation == "/":
-                result = vector / vector
-            else:
-                print("Error: There is no such operator for vectors")
-
-            if result:
-                for item in result:
-                    file.write(str(item) + '\n')
-        else:
-            print("Error: Invalid choice.")
-except ValueError as e:
-    print("Error: Different sizes are specified in the file", e)
-except EOFError as e:
-    print("Error: Empty file", e)
-except FileNotFoundError as e:
-    print("Error: One or more files not found.", e)
-except (IOError) as e:
-    print("Error: Incorrect input/output during file operations", e)
-except Exception as e:
-    print("An unexpected error occurred", e)
Index: nastia_vasylyk/pythonMatrixVectors/task3.py
===================================================================
diff --git a/nastia_vasylyk/pythonMatrixVectors/task3.py b/nastia_vasylyk/pythonMatrixVectors/task3.py
deleted file mode 100644
--- a/nastia_vasylyk/pythonMatrixVectors/task3.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,51 +0,0 @@
-import numpy as np
-try:
-    with open("vect.input.txt", 'r') as f:
-        vector = f.readline().split()
-        vector2 = f.readline().split()
-except FileNotFoundError:
-    print("Error no file")
-    exit(-1)
-vector = [float(i) for i in vector if i.isdigit()]
-vector2 = [float(i) for i in vector2 if i.isdigit()]
-print("Addition of two vectors:")
-suma = []
-for i in range(len(vector)):
-    suma.append(vector[i] + vector2[i])
-print(suma)
-
-print("Multiplication of two vectors:")
-# mult = np.cross(vector, vector2)
-# print(mult)
-
-result = []
-for i in range(0, len(vector)):
-    result.append(vector[i] * vector2[i])
-    print(result)
-
-    print("Subtraction of two vectors:")
-    sub = [vector[i] - vector2[i] for i in range(len(vector))]
-print(sub)
-
-# sub = np.subtract(vector, vector2)
-# print(sub)
-
-print("Division of two vectors")
-# div = np.divide(vector, vector2)
-# print(div)
-division = []
-for i in range(len(vector)):
-    try:
-        division.append(vector[i]/vector2[i])
-    except ZeroDivisionError:
-        print("Zero division")
-        exit(-1)
-print(division)
-
-
-
-with open("vect.output.txt", 'w') as file:
-    file.write("Suma: "+str(suma)+"\n")
-    file.write("Division: "+str(division)+"\n")
-    file.write("Multiply: "+str(result)+"\n")
-    file.write("Subtraction: "+str(sub)+"\n")
\ No newline at end of file
Index: AnastasiaPelyno/Fibonacchi/output.txt
===================================================================
diff --git a/AnastasiaPelyno/Fibonacchi/output.txt b/AnastasiaPelyno/Fibonacchi/output.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Fibonacchi/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[7.0, 12.0, 19.0, 31.0, 50.0]
\ No newline at end of file
Index: LevPredko/fibonacciWithFinalNumber/Constants.py
===================================================================
diff --git a/LevPredko/fibonacciWithFinalNumber/Constants.py b/LevPredko/fibonacciWithFinalNumber/Constants.py
deleted file mode 100644
--- a/LevPredko/fibonacciWithFinalNumber/Constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,4 +0,0 @@
-Fibonacci = 'fibonacci_numbers.txt'
-Final_Fibonacci = 'final_fibonacci'
-output = 'output.txt'
-space = " "
\ No newline at end of file
Index: LevPredko/MatrixVectorWithClass_3/Vector2read.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_3/Vector2read.txt b/LevPredko/MatrixVectorWithClass_3/Vector2read.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_3/Vector2read.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-2 4 6
\ No newline at end of file
Index: FlysYurii/Task(Matrix and Vectors classes)/other_vector.txt
===================================================================
diff --git a/FlysYurii/Task(Matrix and Vectors classes)/other_vector.txt b/FlysYurii/Task(Matrix and Vectors classes)/other_vector.txt
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and Vectors classes)/other_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-0,0,0,0
\ No newline at end of file
Index: yuliamalynovska/homework/classVector/const.py
===================================================================
diff --git a/yuliamalynovska/homework/classVector/const.py b/yuliamalynovska/homework/classVector/const.py
deleted file mode 100644
--- a/yuliamalynovska/homework/classVector/const.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,5 +0,0 @@
-ZERO_DIVISION = 'division by zero'
-FILE_NOT_FOUND = 'file not found'
-INPUT_FILE1 = 'input1.txt'
-INPUT_FILE2 = 'input2.txt'
-OUTPUT_FILE = 'output.txt'
Index: anastasiia_trushchak/Homework/Homework_01/Matrix/output.txt
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_01/Matrix/output.txt b/anastasiia_trushchak/Homework/Homework_01/Matrix/output.txt
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_01/Matrix/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,9 +0,0 @@
-Sum Result:
-1 6 11
-6 8 12
-6 12 17
-
-Subtraction Result:
-1 0 -3
-4 4 2
-0 -4 -1
Index: FlysYurii/Task(Matrix and Vectors classes)/matrix_B.txt
===================================================================
diff --git a/FlysYurii/Task(Matrix and Vectors classes)/matrix_B.txt b/FlysYurii/Task(Matrix and Vectors classes)/matrix_B.txt
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and Vectors classes)/matrix_B.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-1 0
-0 1
\ No newline at end of file
Index: Oles Prokopiv/homework/matrix(add, subtract)/main.py
===================================================================
diff --git a/Oles Prokopiv/homework/matrix(add, subtract)/main.py b/Oles Prokopiv/homework/matrix(add, subtract)/main.py
deleted file mode 100644
--- a/Oles Prokopiv/homework/matrix(add, subtract)/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,59 +0,0 @@
-MATRIX_FIRST_INPUT = 'input.txt'
-MATRIX_SECOND_INPUT = 'inputSecond.txt'
-MATRIX_RESULT = 'output.txt'
-
-matrix1 = []
-matrix2 = []
-
-
-try:
-    with open(MATRIX_FIRST_INPUT, "r") as lines:
-        lines = lines.readlines()
-
-        for line in lines:
-            row = [float(x) for x in line.split()]
-            matrix1.append(row)
-except FileNotFoundError:
-    print("File " + MATRIX_FIRST_INPUT + " not found")
-    exit(-1)
-
-try:
-    with open(MATRIX_SECOND_INPUT, "r") as lines:
-        lines = lines.readlines()
-
-        for line in lines:
-            row = [float(x) for x in line.split()]
-            matrix2.append(row)
-except FileNotFoundError:
-    print("File " + MATRIX_SECOND_INPUT + " not found")
-    exit(-1)
-
-try:
-    matrix_sum = []
-    for i in range(max(len(matrix2), len(matrix1))):
-        row_matrix_rez = []
-        for j in range(max(len(matrix2[0]), len(matrix1[0]))):
-            row_matrix_rez.append(float(matrix1[i][j]) + float(matrix2[i][j]))
-        matrix_sum.append(row_matrix_rez)
-
-    matrix_difference = []
-    for i in range(len(matrix2)):
-        row_matrix_rez = []
-        for j in range(len(matrix2[0])):
-            row_matrix_rez.append(int(matrix1[i][j])-int(matrix2[i][j]))
-        matrix_difference.append(row_matrix_rez)
-
-    with open(MATRIX_RESULT, 'w') as file:
-        file.write("addition:\n")
-        for i in matrix_sum:
-            file.write(str(i)+'\n')
-
-        file.write("subtraction:\n")
-        for i in matrix_difference:
-            file.write(str(i)+'\n')
-
-except IndexError:
-    print(" cannot add and subtract")
-
-
-
Index: yuliamalynovska/homework/classVector/output.txt
===================================================================
diff --git a/yuliamalynovska/homework/classVector/output.txt b/yuliamalynovska/homework/classVector/output.txt
deleted file mode 100644
--- a/yuliamalynovska/homework/classVector/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-Addition:
-[3.0, 5.0, 5.0]
-Subtraction:
-[-1.0, -1.0, 3.0]
-Multiplication:
-[2.0, 6.0, 4.0]
-Division:
-[0.5, 0.6666666666666666, 4.0]
Index: FlysYurii/Task(Matrix and vectors)/matrix(without numpy).py
===================================================================
diff --git a/FlysYurii/Task(Matrix and vectors)/matrix(without numpy).py b/FlysYurii/Task(Matrix and vectors)/matrix(without numpy).py
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and vectors)/matrix(without numpy).py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,185 +0,0 @@
-import sys
-
-
-def read_matrix_from_file(file_path):
-    matrix = []
-    try:
-        with open(file_path, 'r') as file:
-            for line in file:
-                row = [int(x) for x in line.strip().split()]
-                matrix.append(row)
-    except FileNotFoundError:
-        print("Error reading file", file_path)
-        sys.exit(0)
-    return matrix
-
-
-def matrix_to_file(matrix, filename):
-    try:
-        with open(filename, 'w') as f:
-            for row in matrix:
-                f.write(' '.join(['{:0.5g}'.format(x) for x in row]) + '\n')
-    except Exception as e:
-        return f"Error writing matrix to '{filename}': {e}"
-
-
-def det2(A):
-    return A[0][0] * A[1][1] - A[0][1] * A[1][0]
-
-
-def inv2(A):
-    d = det2(A)
-    return [[A[1][1] / d, -A[0][1] / d], [-A[1][0] / d, A[0][0] / d]]
-
-
-def det3(B):
-    ret = 0
-    for i in range(3):
-        pos = 1
-        neg = 1
-        for j in range(3):
-            pos *= B[j][(i + j) % 3]
-            neg *= B[j][(i - j) % 3]
-        ret += (pos - neg)
-
-    return ret
-
-
-def inv3(B):
-    ret = [3 * [None] for _i in range(3)]
-    det = det3(B)
-    for i in range(3):
-        for j in range(3):
-            adj = [[n for ii, n in enumerate(row) if ii != i]
-                   for jj, row in enumerate(B) if jj != j]
-            d = det2(adj)
-            sgn = (-1) ** (i + j)
-            ret[i][j] = sgn * d / det
-    return ret
-
-
-def add_matrices(matrix_a, matrix_b):
-    if len(matrix_a) != len(matrix_b) or len(matrix_a[0]) != len(matrix_b[0]):
-        raise ValueError("Matrix dimensions do not match")
-
-    result = [[0] * len(matrix_a[0]) for _ in range(len(matrix_a))]
-    for i in range(len(matrix_a)):
-        for j in range(len(matrix_a[0])):
-            result[i][j] = matrix_a[i][j] + matrix_b[i][j]
-    return result
-
-
-def subtract_matrices(matrix_a, matrix_b):
-    if len(matrix_a) != len(matrix_b) or len(matrix_a[0]) != len(matrix_b[0]):
-        raise ValueError("Matrix dimensions do not match")
-
-    result = []
-    for i in range(len(matrix_a)):
-        row = []
-        for j in range(len(matrix_a[0])):
-            row.append(matrix_a[i][j] - matrix_b[i][j])
-        result.append(row)
-    return result
-
-
-
-def multiply_matrices(matrix_a, matrix_b):
-    if len(matrix_a[0]) != len(matrix_b):
-        raise ValueError("Invalid matrix dimensions for multiplication")
-
-    result = []  # Ініціалізуємо порожній список для результату
-    for i in range(len(matrix_a)):
-        row = []  # Ініціалізуємо порожній рядок для кожного рядка результату
-        for j in range(len(matrix_b[0])):
-            sum_product = 0
-            for k in range(len(matrix_a[0])):
-                sum_product += matrix_a[i][k] * matrix_b[k][j]
-            row.append(sum_product)  # Додаємо суму до рядка
-        result.append(row)  # Додаємо рядок до результату
-    return result
-
-
-
-def inverse(matrix_a, matrix_b):
-    if len(matrix_a) != len(matrix_a[0]) or len(matrix_b) != len(matrix_b[0]):
-        raise ValueError("Invalid matrix dimensions for inversion")
-
-    if len(matrix_a) == 2 and len(matrix_b) == 2:
-        det = det2(matrix_b)
-        if det == 0:
-            raise ValueError("matrix_b is singular; cannot be inverted")
-        inv = inv2(matrix_b)
-        return inv
-
-    elif len(matrix_a) == 3 and len(matrix_b) == 3:
-        det = det3(matrix_b)
-        if det == 0:
-            raise ValueError("matrix_b is singular; cannot be inverted")
-        inv = inv3(matrix_b)
-        return inv
-    else:
-        raise ValueError("Unsupported matrix dimensions")
-
-
-def divide_matrices(matrix_a, matrix_b):
-    result = None
-    try:
-        # Check if matrix_b is a square matrix
-        if len(matrix_b) != len(matrix_b[0]):
-            raise ValueError("matrix_b must be a square matrix for inversion")
-
-        # Check if the dimensions of matrix_a and matrix_b are compatible for multiplication
-        if len(matrix_a[0]) != len(matrix_b):
-            raise ValueError("Invalid matrix dimensions for division")
-
-        # Compute the inverse of matrix_b
-        if len(matrix_b) == 2:
-            det = det2(matrix_b)
-            if det == 0:
-                raise ValueError("matrix_b is singular; cannot be inverted")
-            inv = inv2(matrix_b)
-        elif len(matrix_b) == 3:
-            det = det3(matrix_b)
-            if det == 0:
-                raise ValueError("matrix_b is singular; cannot be inverted")
-            inv = inv3(matrix_b)
-        else:
-            raise ValueError("Unsupported matrix dimensions")
-
-        # Multiply matrix_a by the inverse of matrix_b
-        result = multiply_matrices(matrix_a, inv)
-    except Exception as e:
-        print(f"Error performing division: {e}")
-    return result
-
-
-MatrixA = read_matrix_from_file('matrix_A.txt')
-MatrixB = read_matrix_from_file('matrix_B.txt')
-
-result = None
-
-operation = input("Enter operation (add, subtract, multiply, divide): ")
-try:
-    if operation == 'add':
-        result = add_matrices(MatrixA, MatrixB)
-    elif operation == 'subtract':
-        result = subtract_matrices(MatrixA, MatrixB)
-    elif operation == 'multiply':
-        result = multiply_matrices(MatrixA, MatrixB)
-    elif operation == 'divide':
-        result = divide_matrices(MatrixA, MatrixB)
-    else:
-        raise ValueError("Invalid operation")
-except ValueError as e:
-    print(f"Error performing operation: {e}")
-
-try:
-    if result is not None:
-        print("Result:")
-        for row in result:
-            print(' '.join(['{:0.5g}'.format(x) for x in row]))
-        matrix_to_file(result, 'result_4matrix.txt')
-except Exception as e:
-    print(f"Error writing matrix to file: {e}")
-
-
Index: DarynaKovalchuk/Matrix/Matrix_mul.py
===================================================================
diff --git a/DarynaKovalchuk/Matrix/Matrix_mul.py b/DarynaKovalchuk/Matrix/Matrix_mul.py
deleted file mode 100644
--- a/DarynaKovalchuk/Matrix/Matrix_mul.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,89 +0,0 @@
-class DetIsZero(Exception):
-
-    def init(self, message="Determinant is zero!"):
-        self.message = message
-        super().init(self.message)
-
-def read_matrix(filename):
-    with open(filename, 'r') as file:
-        lines = file.readlines()
-    matrix = []
-    for line in lines:
-        rows = [int(x) for x in line.split()]
-        matrix.append(rows)
-    return matrix
-
-def write_matrix(matrix, filename):
-    with open(filename, 'a') as file:
-        file.write("matrix result:\n")
-        for rows in range(len(matrix)):
-            file.write(' '.join(map(str, matrix[rows])) + '\n')
-
-try:
-    first_matrix = read_matrix('first_matrix.txt')
-    second_matrix = read_matrix('second_matrix.txt')
-except FileNotFoundError:
-    print("One or both files do not exist.")
-    exit()
-
-# Перевірка чи файли пусті
-if not first_matrix or not second_matrix:
-    print("One or both files are empty.")
-    exit()
-
-if len(first_matrix) != len(second_matrix) or len(first_matrix[0]) != len(second_matrix[0]):
-    print("The sizes don't match.")
-else:
-    result_multiply = []
-    result_devide = []
-
-    # Множення матриць
-    def multiply_matrices(first_matrix, second_matrix):
-        result = []
-        for i in range(len(first_matrix)):
-            row = []
-            for j in range(len(second_matrix[0])):
-                sum_element = 0
-                for k in range(len(second_matrix)):
-                    sum_element += first_matrix[i][k] * second_matrix[k][j]
-                row.append(sum_element)
-            result.append(row)
-        return result
-
-    # Ділення матриць
-    def pow_matrix(first_matrix, second_matrix):
-        try:
-            transposed = [
-                [second_matrix[1][1], -second_matrix[1][0]],
-                [-second_matrix[0][1], second_matrix[0][0]]
-            ]
-            det = second_matrix[0][0] * second_matrix[1][1] - second_matrix[0][1] * second_matrix[1][0]
-
-            if det == 0:
-                raise DetIsZero
-
-            inverse = []
-            for i in range(len(transposed)):
-                inverse.append([])
-                for j in range(len(transposed[0])):
-                    inverse[i].append(transposed[j][i] / det)
-            result = multiply_matrices(first_matrix, inverse)
-            return result
-
-        except DetIsZero as e:
-            print("Det can't be zero!")
-            return []
-
-    result_multiply = multiply_matrices(first_matrix, second_matrix)
-    result_devide = pow_matrix(first_matrix, second_matrix)
-
-    write_matrix(result_multiply, 'result_multiply.txt')
-    write_matrix(result_devide, 'result_divide.txt')
-
-    print("Result multiply:")
-    for rows in result_multiply:
-        print(rows)
-
-    print("Result divide:")
-    for rows in result_devide:
-        print(rows)
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/VectorOutput.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/VectorOutput.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/VectorOutput.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/VectorOutput.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-Vector Summ:
-[5 8 9 8 5]
-Vector Subtract:
-[-4 -2  0  2  4]
-Vector Multiplication:
-[5 8 9 8 5]
-Vector Division:
-[0.2 0.5 1.  2.  5. ]
\ No newline at end of file
Index: DarynaKovalchuk/Vector/Vector.py
===================================================================
diff --git a/DarynaKovalchuk/Vector/Vector.py b/DarynaKovalchuk/Vector/Vector.py
deleted file mode 100644
--- a/DarynaKovalchuk/Vector/Vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,37 +0,0 @@
-def read_vectors_from_file(filename):
-    with open(filename, 'r') as file:
-        lines = file.readlines()
-        first_vector = [float(x) for x in lines[0].split()]
-        second_vector = [float(x) for x in lines[1].split()]
-    return first_vector, second_vector
-
-#додавання
-def add_vectors(first_vector, second_vector):
-    return [x + y for x, y in zip(first_vector, second_vector)]
-
-#віднімання
-def subtract_vectors(first_vector, second_vector):
-    return [x - y for x, y in zip(first_vector, second_vector)]
-
-#множення
-def multiply_vectors(first_vector, second_vector):
-    return [x * y for x, y in zip(first_vector, second_vector)]
-
-#ділення
-def divide_vectors(first_vector, second_vector):
-    return [x / y for x, y in zip(first_vector, second_vector)]
-
-input_filename = 'input.txt'
-output_filename = 'output.txt'
-first_vector, second_vector = read_vectors_from_file(input_filename)
-
-result_add = add_vectors(first_vector, second_vector)
-result_subtract = subtract_vectors(first_vector, second_vector)
-result_multiply = multiply_vectors(first_vector, second_vector)
-result_divide = divide_vectors(first_vector, second_vector)
-
-with open(output_filename, 'w') as file:
-    file.write("add: {}\n".format(result_add))
-    file.write("subtract: {}\n".format(result_subtract))
-    file.write("multiply: {}\n".format(result_multiply))
-    file.write("divide: {}\n".format(result_divide))
Index: FlysYurii/Task(Structure)/Structure.py
===================================================================
diff --git a/FlysYurii/Task(Structure)/Structure.py b/FlysYurii/Task(Structure)/Structure.py
deleted file mode 100644
--- a/FlysYurii/Task(Structure)/Structure.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,31 +0,0 @@
-class Student:
-    def __init__(self, first_name, last_name, birth_date, grades):
-        self.first_name = first_name
-        self.last_name = last_name
-        self.birth_date = birth_date
-        self.grades = grades
-
-    def has_failed(self):
-        return any(grade < 3 for grade in self.grades)
-
-def read_students_from_file(file_path):
-    students = []
-    with open(file_path, 'r') as file:
-        lines = file.readlines()
-        for line in lines:
-            data = line.strip().split(' ')
-            first_name = data[0]
-            last_name = data[1]
-            birth_date = data[2]
-            grades = list(map(int, data[3].split(',')))
-            student = Student(first_name, last_name, birth_date, grades)
-            students.append(student)
-    return students
-
-def print_students_who_failed(students):
-    for student in students:
-        if student.has_failed():
-            print(f"Студент {student.first_name} {student.last_name} не склав сесію.")
-
-students = read_students_from_file('students.txt')
-print_students_who_failed(students)
Index: BoikoStepan/Matrix/Matrix(add).py
===================================================================
diff --git a/BoikoStepan/Matrix/Matrix(add).py b/BoikoStepan/Matrix/Matrix(add).py
deleted file mode 100644
--- a/BoikoStepan/Matrix/Matrix(add).py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,55 +0,0 @@
-try:
-    f_Matrix = []
-    s_Matrix = []
-
-    with open('FMatrix.txt', 'r') as firstFileMatrix:
-        for line in firstFileMatrix:
-            row = [int(x) for x in line.split()]
-            f_Matrix.append(row)
-
-    with open('SMatrix.txt', 'r') as secondFileMatrix:
-        for line in secondFileMatrix:
-            row = [int(x) for x in line.split()]
-            s_Matrix.append(row)
-except Exception as e:
-    print("error",e)
-
-
-
-
-
-
-for row in range(len(f_Matrix)):
-    print((str(f_Matrix[row]) ))
-print()
-for row in range(len(s_Matrix)):
-    print((str(s_Matrix[row])))
-print()
-matrix_Sum = []
-for i in range(len(f_Matrix)):
-        row = []
-        for j in range(len(f_Matrix[0])):
-            row.append(f_Matrix[i][j] + s_Matrix[i][j])
-        matrix_Sum.append(row)
-
-matrix_Sub = []
-for i in range(len(f_Matrix)):
-        row = []
-        for j in range(len(f_Matrix[0])):
-            row.append(f_Matrix[i][j] - s_Matrix[i][j])
-        matrix_Sub.append(row)
-
-print(matrix_Sum)
-print(matrix_Sub)
-
-
-with open('OutputMatrix.txt', 'w') as file:
-    file.write("Matrix Sum:\n")
-
-    for row in range(len(matrix_Sum)):
-        file.write(str(matrix_Sum[row]) + '\n')
-
-    file.write("Matrix Subtract:\n")
-    for row in range(len(matrix_Sub)):
-        file.write(str(matrix_Sub[row]) + '\n')
-
Index: BohdanFariyon/3.Marix/matrix1.txt
===================================================================
diff --git a/BohdanFariyon/3.Marix/matrix1.txt b/BohdanFariyon/3.Marix/matrix1.txt
deleted file mode 100644
--- a/BohdanFariyon/3.Marix/matrix1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-1 0
-0 1
\ No newline at end of file
Index: BoikoStepan/Fibonachi/input.txt
===================================================================
diff --git a/BoikoStepan/Fibonachi/input.txt b/BoikoStepan/Fibonachi/input.txt
deleted file mode 100644
--- a/BoikoStepan/Fibonachi/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1,2
\ No newline at end of file
Index: BoikoStepan/Vector_Classes/Classes_vector.py
===================================================================
diff --git a/BoikoStepan/Vector_Classes/Classes_vector.py b/BoikoStepan/Vector_Classes/Classes_vector.py
deleted file mode 100644
--- a/BoikoStepan/Vector_Classes/Classes_vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,81 +0,0 @@
-class Vector:
-    def __init__(self, filename):
-        self.vector = []
-        self.filename = filename
-
-    def load_vector(self):
-        try:
-            with open(self.filename, 'r') as vector_file:
-                for line in vector_file:
-                    values = [int(x) for x in line.split()]
-                    self.vector.extend(values)
-        except Exception as e:
-            print("Error:", e)
-
-    def __len__(self):
-        return len(self.vector)
-    try:
-        def __add__(self, other):
-            result = []
-            for i in range(len(self)):
-                result.append(self.vector[i] + other.vector[i])
-            return result
-
-        def __sub__(self, other):
-            result = []
-            for i in range(len(self)):
-                result.append(self.vector[i] - other.vector[i])
-            return result
-
-
-        def __mul__(self, other):
-            result = []
-            for i in range(len(self)):
-                result.append(self.vector[i] * other.vector[i])
-            return result
-
-        def __truediv__(self, other):
-            try:
-                result = []
-                for i in range(len(self)):
-                    result.append(self.vector[i] / other.vector[i])
-                return result
-            except ZeroDivisionError:
-                print("error zero division")
-                exit()
-    except Exception:
-        print("")
-    def save_result(self, output_filename, other_vector):
-        vector_sum = self + other_vector
-        vector_sub = self - other_vector
-        vector_dot = self * other_vector
-        vector_div = self / other_vector
-
-
-        with open(output_filename, 'w') as file:
-
-            file.write("Vector Sum:\n")
-            file.write(str(vector_sum) + '\n')
-
-            file.write("Vector Subtract:\n")
-            file.write(str(vector_sub) + '\n')
-
-            file.write("Vector Mult:\n")
-            file.write(str(vector_dot) + '\n')
-
-            file.write("Vector Division :\n")
-            file.write(str(vector_div) + '\n')
-
-
-
-
-
-filename1 = 'Fvector.txt'
-filename2 = 'Svector.txt'
-output_filename = '../../Home1/OutputVector.txt'
-
-vector_ops1 = Vector(filename1)
-vector_ops1.load_vector()
-vector_ops2 = Vector(filename2)
-vector_ops2.load_vector()
-vector_ops1.save_result(output_filename, vector_ops2)
Index: BohdanFariyon/4.ClassVector/ClassVector.py
===================================================================
diff --git a/BohdanFariyon/4.ClassVector/ClassVector.py b/BohdanFariyon/4.ClassVector/ClassVector.py
deleted file mode 100644
--- a/BohdanFariyon/4.ClassVector/ClassVector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,71 +0,0 @@
-VECTOR_FIRST_FILE = 'VectorFirst.txt'
-VECTOR_SECOND_FILE = 'VectorSecond.txt'
-VECTOR_FILE_RESULT = 'VectorResult.txt'
-mode = 'r'
-separate = ','
-
-class Vector:
-    def __init__(self, vector=[]):
-        self.__vector = vector
-    def read(self,VECTOR_FILE):
-        try:
-            with open(VECTOR_FILE, mode) as file:
-                vector_first = file.readline().split(separate)
-                self.vector = [float(i) for i in vector_first]
-
-
-        except FileNotFoundError:
-            print("File " + VECTOR_FILE + " no found.")
-            exit(-1)
-    def __add__(self, other):
-        try:
-            sum = []
-            for i in range(max(len(self.vector), len(other.vector))):
-                sum.append(self.vector[i] + other.vector[i])
-            return sum
-        except IndexError:
-            print("Dimension vectors cannot be added " + str(len(self.vector)) + " and " + str(len(other.vector)))
-            exit(-1)
-    def __sub__(self, other):
-        try:
-            difference = []
-            for i in range(max(len(self.vector), len(other.vector))):
-                difference.append(self.vector[i] - other.vector[i])
-            return difference
-        except IndexError:
-            print("Dimension vectors cannot be subtracted " + str(len(self.vector)) + " and " + str(len(other.vector)))
-            exit(-1)
-    def __mul__(self, other):
-        try:
-            multipliation = []
-            for i in range(max(len(self.vector), len(other.vector))):
-                multipliation.append(self.vector[i] * other.vector[i])
-            return multipliation
-        except IndexError:
-            print("Dimension vectors cannot be multiplied " + str(len(self.vector)) + " and " + str(len(other.vector)))
-            exit(-1)
-    def __truediv__(self, other):
-        try:
-            divide = []
-            for i in range(max(len(self.vector), len(other.vector))):
-                divide.append(self.vector[i] / other.vector[i])
-            return divide
-        except IndexError:
-            print("Dimension vectors cannot be divided " + str(len(self.vector)) + " and " + str(len(other.vector)))
-            exit(-1)
-        except ZeroDivisionError:
-            print("It is not possible to divide by zero")
-            exit(-1)
-FirstVector = Vector()
-SecondVector = Vector()
-FirstVector.read(VECTOR_FIRST_FILE)
-SecondVector.read(VECTOR_SECOND_FILE)
-sum = FirstVector + SecondVector
-difference = FirstVector - SecondVector
-multipliation = FirstVector * SecondVector
-divide = FirstVector / SecondVector
-with open(VECTOR_FILE_RESULT, 'w') as file:
-    file.write("Addition:\n" + str(sum)+'\n')
-    file.write("Subtraction:\n" + str(difference)+'\n')
-    file.write("Multiplication:\n" + str(multipliation) + '\n')
-    file.write("Division:\n" + str(divide) + '\n')
\ No newline at end of file
Index: anastasiia_trushchak/Homework/Homework_01/Matrix/main.py
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_01/Matrix/main.py b/anastasiia_trushchak/Homework/Homework_01/Matrix/main.py
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_01/Matrix/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,17 +0,0 @@
-import numpy as np
-data1 = np.loadtxt("inputMatrix1.txt", dtype="i", delimiter=' ')
-data2 = np.loadtxt("inputMatrix2.txt", dtype="i", delimiter=' ')
-def sum_matrix(data1, data2):
-    return [[k + n for k, n in zip(i, j)] for i, j in zip(data1, data2)]
-def substruct_matrix(data1, data2):
-    return [[k - n for k, n in zip(i, j)] for i, j in zip(data1, data2)]
-sum_result = sum_matrix(data1, data2)
-substruct_result = substruct_matrix(data1, data2)
-with open("output.txt", "w") as f:
-    f.write("Sum Result:\n")
-    for row in sum_result:
-        f.write(" ".join(map(str, row)) + "\n")
-
-    f.write("\nSubtraction Result:\n")
-    for row in substruct_result:
-        f.write(" ".join(map(str, row)) + "\n")
\ No newline at end of file
Index: anastasiia_trushchak/Homework/Homework_01/Vector/vector1.txt
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_01/Vector/vector1.txt b/anastasiia_trushchak/Homework/Homework_01/Vector/vector1.txt
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_01/Vector/vector1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 3
\ No newline at end of file
Index: MaksymPetukhov/fibonacciNumbers/write.txt
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers/write.txt b/MaksymPetukhov/fibonacciNumbers/write.txt
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers/write.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233]
\ No newline at end of file
Index: MaksymPetukhov/matrixTask3/main.py
===================================================================
diff --git a/MaksymPetukhov/matrixTask3/main.py b/MaksymPetukhov/matrixTask3/main.py
deleted file mode 100644
--- a/MaksymPetukhov/matrixTask3/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,150 +0,0 @@
-import constants
-import os
-
-matrix_a = []
-matrix_b = []
-
-
-class FileIsEmpty(Exception):
-
-    def __init__(self, message="File is empty!"):
-        self.message = message
-        super().__init__(self.message)
-
-
-class DetIsZero(Exception):
-
-    def __init__(self, message="Can't transpose matrix if determinant is zero!"):
-        self.message = message
-        super().__init__(self.message)
-
-
-try:
-    with open(constants.INPUT_FILE, 'r') as file:
-        if os.path.getsize(constants.INPUT_FILE) == 0:
-            raise FileIsEmpty
-        new_matrix = False
-        lines = file.readlines()
-        for line in lines:
-            if line == '\n':
-                new_matrix = True
-                continue
-            if new_matrix:
-                elements = line.strip().split(constants.SEPARATOR)
-                row = [float(element) for element in elements]
-                matrix_b.append(row)
-            else:
-                elements = line.strip().split(constants.SEPARATOR)
-                row = [float(element) for element in elements]
-                matrix_a.append(row)
-except FileNotFoundError as e:
-    print(e)
-
-
-def add(matrix_a, matrix_b):
-    result = []
-    for i in range(len(matrix_a)):
-        result.append([])
-        for j in range(len(matrix_a[0])):
-            result[i].append(matrix_a[i][j] + matrix_b[i][j])
-    with open(constants.OUTPUT_FILE, 'w') as file:
-        file.write(str(result))
-    return result
-
-
-def subtract(matrix_a, matrix_b):
-    result = []
-    for i in range(len(matrix_a)):
-        result.append([])
-        for j in range(len(matrix_a[0])):
-            result[i].append(matrix_a[i][j] - matrix_b[i][j])
-    with open(constants.OUTPUT_FILE, 'w') as file:
-        file.write(str(result))
-    return result
-
-
-def multiply(matrix_a, matrix_b):
-    result = []
-
-    for i in range(len(matrix_a)):
-        result.append([])
-        for j in range(len(matrix_a[0])):
-            result[i].append(0)
-            for k in range(len(matrix_b)):
-                result[i][j] += matrix_a[i][k] * matrix_b[k][j]
-
-    with open(constants.OUTPUT_FILE, 'w') as file:
-        file.write(str(result))
-
-    return result
-
-
-def divide(matrix_a, matrix_b):
-    det = determinant(matrix_b)
-
-    if det == 0:
-        raise DetIsZero
-
-    transposed = []
-    for i in range(len(matrix_a)):
-        transposed.append([])
-        for j in range(len(matrix_a[0])):
-            transposed[i].append(cofactor(matrix_b, i, j))
-    print(transposed)
-    transposed = transpose(transposed)
-    print(transposed)
-
-    inverse = []
-    for i in range(len(transposed)):
-        inverse.append([])
-        for j in range(len(transposed[0])):
-            inverse[i].append(float(transposed[i][j]) / det)
-
-    result = multiply(matrix_a, inverse)
-    return result
-
-
-def determinant(matrix):
-    det = 0
-    for i in range(len(matrix)):
-        add = 1
-        sub = 1
-        for j in range(len(matrix)):
-            add *= matrix[j][(i + j) % len(matrix)]
-            sub *= matrix[j][(i - j) % len(matrix)]
-        det += (add - sub)
-    return det
-
-
-def transpose(matrix):
-    rows = len(matrix)
-    cols = len(matrix[0])
-    result = [[None] * rows for _ in range(cols)]
-    for i in range(rows):
-        for j in range(cols):
-            result[j][i] = matrix[i][j]
-    return result
-
-
-def cofactor(matrix, row, col):
-    addition = []
-    for i in range(len(matrix)):
-        for j in range(len(matrix[0])):
-            if i != row and j != col:
-                addition.append(matrix[i][j])
-    result = ((-1) ** (row + col)) * (addition[0] * addition[3] - addition[2] * addition[1])
-    return result
-
-
-print(matrix_a)
-print(matrix_b)
-
-try:
-    with open(constants.OUTPUT_FILE, 'w') as file:
-        file.write("Addition:\n" + str(add(matrix_a, matrix_b)) + '\n')
-        file.write("Subtraction:\n" + str(subtract(matrix_a, matrix_b)) + '\n')
-        file.write("Multiplication:\n" + str(multiply(matrix_a, matrix_b)) + '\n')
-        file.write("Division:\n" + str(divide(matrix_a, matrix_b)) + '\n')
-
-except FileNotFoundError:
-    raise FileNotFoundError
Index: yuliamalynovska/homework/vector/inputVector.txt
===================================================================
diff --git a/yuliamalynovska/homework/vector/inputVector.txt b/yuliamalynovska/homework/vector/inputVector.txt
deleted file mode 100644
--- a/yuliamalynovska/homework/vector/inputVector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-1 2 4
-2 3 9
Index: RostyslavPasternak/Homework/ArrayList_LinkedList/LinkedList.py
===================================================================
diff --git a/RostyslavPasternak/Homework/ArrayList_LinkedList/LinkedList.py b/RostyslavPasternak/Homework/ArrayList_LinkedList/LinkedList.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/ArrayList_LinkedList/LinkedList.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,93 +0,0 @@
-def from_file(file_name: str, separator=" "):
-    with open(file_name, 'r') as readFile:
-        line = readFile.readline()
-
-    array = line.split(separator)
-    array = [float(i) for i in array if i.isdigit()]
-    for i in range(0, 8):
-        array.append(array[i] + array[i + 1])
-        return array
-
-
-class Node:
-    def __init__(self, data_val=None):
-        self.previous_val = None
-        self.data_val = data_val
-        self.next_val = None
-
-    def __str__(self):
-        return self.data_val.__str__()
-
-
-class LinkedList:
-    def __init__(self):
-        self.size = 0
-
-    def add(self, new_element):
-        if isinstance(new_element, list | set):
-            for element in new_element:
-                self.add(element)
-        else:
-            if self.size == 0:
-                self.first = Node(new_element)
-                self.last = self.first
-            else:
-                new_node = Node(new_element)
-                self.last.next_val = new_node
-                new_node.previous_val = self.last
-                self.last = new_node
-
-            self.size += 1
-
-    def remove_by_index(self, index: int):
-        this_value = self.first
-        element_index = 0
-        while this_value:
-            if element_index == index:
-                previous_value = this_value.previous_val
-                next_value = this_value.next_val
-
-                previous_value.next_val = next_value
-                next_value.previous_val = previous_value
-                self.size -= 1
-            this_value = this_value.next_val
-            element_index += 1
-
-    def add_by_index(self, index, new_element):
-        this_value = self.first
-        element = 0
-        while this_value:
-            if element == index:
-                previous_value = this_value.previous_val
-                new_node = Node(new_element)
-
-                previous_value.next_val = new_node
-                this_value.previous_val = new_node
-
-                new_node.next_val = this_value
-                new_node.previous_val = previous_value
-                self.size += 1
-            this_value = this_value.next_val
-            element += 1
-
-    def __str__(self):
-        result = ""
-        this_value = self.first
-        while this_value:
-            result += this_value.__str__() + " "
-            this_value = this_value.next_val
-        return "[ " + result + " ]"
-
-    def delete(self):
-        self.first = None
-        self.last = None
-        self.size = 0
-
-
-linked_list = LinkedList()
-linked_list.add(from_file("array.txt"))
-linked_list.add([12, 32, 23, 4])
-linked_list.add(12)
-linked_list.remove_by_index(2)
-linked_list.add_by_index(2, 11)
-print(linked_list)
Index: yuliamalynovska/homework/classMatrix/main.py
===================================================================
diff --git a/yuliamalynovska/homework/classMatrix/main.py b/yuliamalynovska/homework/classMatrix/main.py
deleted file mode 100644
--- a/yuliamalynovska/homework/classMatrix/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,6 +0,0 @@
-from Matrix import Matrix
-import const
-
-matrixA = Matrix.read(const.INPUT_FILE1)
-matrixB = Matrix.read(const.INPUT_FILE2)
-Matrix.write(matrixA, matrixB, const.OUTPUT_FILE)
Index: ZlatomyraSeverylova/matrix/input_matrix.txt
===================================================================
diff --git a/ZlatomyraSeverylova/matrix/input_matrix.txt b/ZlatomyraSeverylova/matrix/input_matrix.txt
deleted file mode 100644
--- a/ZlatomyraSeverylova/matrix/input_matrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/second_vector.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/second_vector.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/second_vector.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/second_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-5 4 3 2 1
\ No newline at end of file
Index: MaksymPetukhov/fibonacciNumbers/main.py
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers/main.py b/MaksymPetukhov/fibonacciNumbers/main.py
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,16 +0,0 @@
-# Practical - 01.09.2023
-
-import constants
-
-with open(constants.INPUT_FILE, 'r') as rf:
-    line = rf.readline()
-
-array = line.split(constants.SEPARATOR)
-
-line = [float(i) for i in line if i.isdigit()]
-
-for i in range(0, 10):
-    array.append(array[i] + array[i + 1])
-
-with open(constants.OUTPUT_FILE, 'w') as wf:
-    wf.write(str(array))
\ No newline at end of file
Index: MaksymPetukhov/matrixTask3/output.txt
===================================================================
diff --git a/MaksymPetukhov/matrixTask3/output.txt b/MaksymPetukhov/matrixTask3/output.txt
deleted file mode 100644
--- a/MaksymPetukhov/matrixTask3/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,6 +0,0 @@
-Addition:
-[[2.0, 0.0, 0.0], [0.0, 2.0, 0.0], [0.0, 0.0, 1.0]]
-Subtraction:
-[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 1.0]]
-Multiplication:
-[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 0.0]]
Index: AnastasiaPelyno/Fibonacchi/main.py
===================================================================
diff --git a/AnastasiaPelyno/Fibonacchi/main.py b/AnastasiaPelyno/Fibonacchi/main.py
deleted file mode 100644
--- a/AnastasiaPelyno/Fibonacchi/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,19 +0,0 @@
-INPUT='input.txt'
-OUTPUT='output.txt'
-STEPS='steps.txt'
-try:
-    with open(INPUT, 'r') as file_input:
-        arr = file_input.read().split()
-except FileNotFoundError:
-    print('File Not Found')
-try:
-    with open(STEPS, 'r') as file_steps:
-        steps = int(file_steps.read())
-except FileNotFoundError:
-    print('File Not Found')
-for i in range(2):
-    arr[i]=float(arr[i])
-for i in range(2,steps):
-    arr.append(arr[i-1]+arr[i-2])
-with open(OUTPUT, 'w') as file_output:
-    file_output.write(str(arr))
Index: RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/matrix1.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/matrix1.txt b/RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/matrix1.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/matrix1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-2 5 7
-6 3 4
-5 -2 -3
\ No newline at end of file
Index: MaksymPetukhov/fibonacciNumbers3/parameters.txt
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers3/parameters.txt b/MaksymPetukhov/fibonacciNumbers3/parameters.txt
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers3/parameters.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-722
\ No newline at end of file
Index: FlysYurii/Task(Stream)/Stream.py
===================================================================
diff --git a/FlysYurii/Task(Stream)/Stream.py b/FlysYurii/Task(Stream)/Stream.py
deleted file mode 100644
--- a/FlysYurii/Task(Stream)/Stream.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,25 +0,0 @@
-from pyxtension.streams import stream
-class MyClass:
-    def __init__(self, value):
-        self.value = value
-
-    def set_value(self, value):
-        self.value = value
-
-    def get_value(self):
-        return self.value
-
-my_list = (MyClass(1), MyClass(2), MyClass(3), MyClass(4), MyClass(5))
-print("Original list:")
-
-for item in my_list:
-    print(item.get_value())
-
-my_stream = (stream(my_list)
-             .map(lambda x: x.get_value() * 2)
-             .filter(lambda x: x>=5)
-             .toList())
-print("Filtered list:")
-
-for item in my_stream:
-    print(item)
Index: MariaKravchuk/Fibonacci/main.py
===================================================================
diff --git a/MariaKravchuk/Fibonacci/main.py b/MariaKravchuk/Fibonacci/main.py
deleted file mode 100644
--- a/MariaKravchuk/Fibonacci/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,11 +0,0 @@
-INPUT_CODE="input.txt"
-OUTPUT_CODE="output.txt"
-with open(INPUT_CODE, "r") as read_code:
-
- array_fibonacci = read_code.read().split("\n")
-array_fibonacci = [float(i) for i in array_fibonacci if i.isdigit()]
-for i in range(2, 10):
-    array_fibonacci.append((array_fibonacci[i - 2]) + array_fibonacci[i - 1])
-
-with open(OUTPUT_CODE, "w") as output_file:
-    output_file.write(str(array_fibonacci))
Index: BrynarskiyAndriy/Homework/4vector.py
===================================================================
diff --git a/BrynarskiyAndriy/Homework/4vector.py b/BrynarskiyAndriy/Homework/4vector.py
deleted file mode 100644
--- a/BrynarskiyAndriy/Homework/4vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,79 +0,0 @@
-class Vector:
-    def __init__(self, elements):
-        self.elements = elements
-
-    def __add__(self, other):
-        if len(self.elements) != len(other.elements):
-            raise ValueError("Розмірність векторів не співпадає")
-        result_elements = [a + b for a, b in zip(self.elements, other.elements)]
-        return Vector(result_elements)
-
-    def __sub__(self, other):
-        if len(self.elements) != len(other.elements):
-            raise ValueError("Розмірність векторів не співпадає")
-        result_elements = [a - b for a, b in zip(self.elements, other.elements)]
-        return Vector(result_elements)
-
-    def __mul__(self, scalar):
-        result_elements = [a * scalar for a in self.elements]
-        return Vector(result_elements)
-
-    def __truediv__(self, scalar):
-        if scalar == 0:
-            raise ValueError("Ділення на нуль неможливе")
-        result_elements = [a / scalar for a in self.elements]
-        return Vector(result_elements)
-
-    def __str__(self):
-        return "(" + ", ".join(map(str, self.elements)) + ")"
-
-class VectorCalculator:
-    def __init__(self):
-        self.operations = []
-
-    def add_operation(self, operation):
-        self.operations.append(operation)
-
-    def execute_operations(self):
-        results = []
-        for operation in self.operations:
-            result = operation()
-            results.append(result)
-        return results
-
-    def save_operations_to_file(self, file_name):
-        with open(file_name, 'w') as file:
-            for operation in self.operations:
-                file.write(str(operation) + '\n')
-
-# Функція для зчитування векторів з файлу
-def read_vector_from_file(file_name):
-    with open(file_name, 'r') as file:
-        elements = [float(x) for x in file.readline().split(',')]
-        return Vector(elements)
-
-# Функція для запису вектора в файл
-def write_vector_to_file(vector, file_name):
-    with open(file_name, 'w') as file:
-        file.write(" ".join(map(str, vector.elements)))
-
-# Зчитуємо вектори з файлів
-vector1 = read_vector_from_file('vector1.txt')
-vector2 = read_vector_from_file('vector2.txt')
-
-# Створюємо об'єкт калькулятора
-vector_calculator = VectorCalculator()
-
-# Додаємо операції до калькулятора
-vector_calculator.add_operation(lambda: vector1 + vector2)
-vector_calculator.add_operation(lambda: vector1 - vector2)
-vector_calculator.add_operation(lambda: vector1 * 2)
-vector_calculator.add_operation(lambda: vector2 / 2)
-
-# Виконуємо операції та зберігаємо результати в файл
-results = vector_calculator.execute_operations()
-vector_calculator.save_operations_to_file('vector_operations.txt')
-
-# Виводимо результати
-for i, result in enumerate(results):
-    print(f"Операція {i + 1}: {result}")
Index: BoikoStepan/Matrix_Classes/SMatrix.txt
===================================================================
diff --git a/BoikoStepan/Matrix_Classes/SMatrix.txt b/BoikoStepan/Matrix_Classes/SMatrix.txt
deleted file mode 100644
--- a/BoikoStepan/Matrix_Classes/SMatrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-0 0 0
-0 0 0
-0 0 0
\ No newline at end of file
Index: LevPredko/MatrixVectorWithClass_1/inputVector2.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_1/inputVector2.txt b/LevPredko/MatrixVectorWithClass_1/inputVector2.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_1/inputVector2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-2 1 2
\ No newline at end of file
Index: RostyslavPasternak/Homework/ArrayList_LinkedList/ArrayList.py
===================================================================
diff --git a/RostyslavPasternak/Homework/ArrayList_LinkedList/ArrayList.py b/RostyslavPasternak/Homework/ArrayList_LinkedList/ArrayList.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/ArrayList_LinkedList/ArrayList.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,24 +0,0 @@
-
-class ArrayList:
-    def __init__(self, size=10):
-        self.array = [None] * size
-        self.size = size
-    def add(self,new_element):
-        if isinstance(new_element, list | tuple | set):
-            for element in new_element:
-                self.add(element)
-        else:
-            if new_element != None:
-                ...
-
-    def __increase_size(self):
-        temp = self.array
-        self.size = 1.5 * self.size + 1
-        self.array = [None] * int(self.size)
-        self.add(temp)
-
-
-
-list = list()
-
-print(list.size)
Index: ZlatomyraSeverylova/task1_fibonachi/main.py
===================================================================
diff --git a/ZlatomyraSeverylova/task1_fibonachi/main.py b/ZlatomyraSeverylova/task1_fibonachi/main.py
deleted file mode 100644
--- a/ZlatomyraSeverylova/task1_fibonachi/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,11 +0,0 @@
-INPUT = 'input.txt'
-OUT = 'out.txt'
-with open(INPUT, 'r') as f:
-    array = f .read().split("\n")
-    array = [float(i) for i in array if i.isdigit()]
-
-for i in range(2, 10):
-    array.append(array[i-1] + array[i-2])
-
-with open(OUT, 'w') as f:
-    f .write(str(array))
Index: MaksymPetukhov/matrixTask3/constants.py
===================================================================
diff --git a/MaksymPetukhov/matrixTask3/constants.py b/MaksymPetukhov/matrixTask3/constants.py
deleted file mode 100644
--- a/MaksymPetukhov/matrixTask3/constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-INPUT_FILE = "input.txt"
-OUTPUT_FILE = "output.txt"
-SEPARATOR = ','
Index: BoikoStepan/Fibonachi/output.txt
===================================================================
diff --git a/BoikoStepan/Fibonachi/output.txt b/BoikoStepan/Fibonachi/output.txt
deleted file mode 100644
--- a/BoikoStepan/Fibonachi/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
\ No newline at end of file
Index: nastia_vasylyk/pythonMatrixVectors/matr.output.txt
===================================================================
diff --git a/nastia_vasylyk/pythonMatrixVectors/matr.output.txt b/nastia_vasylyk/pythonMatrixVectors/matr.output.txt
deleted file mode 100644
--- a/nastia_vasylyk/pythonMatrixVectors/matr.output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,4 +0,0 @@
-Multiplication:[[62, 80, 94], [33, 52, 64], [68, 93, 112]]
-Addition:[[5, 12, 5], [13, 10, 10], [10, 10, 14]]
-Subtraction:[[3, 6, -3], [1, -4, -6], [2, 0, 2]]
-Division:[[13.0, 37.5, -58.5], [-3.0, 1.0, 1.0], [-4.0, -9.0, 16.0]]
Index: nastia_vasylyk/University/output.txt
===================================================================
diff --git a/nastia_vasylyk/University/output.txt b/nastia_vasylyk/University/output.txt
deleted file mode 100644
--- a/nastia_vasylyk/University/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[1.0, 2.0, 3.0, 5.0, 8.0, 13.0, 21.0, 34.0, 55.0, 89.0]
\ No newline at end of file
Index: LevPredko/MatrixVectorWithoutClass/Matrix_Vector_WithoutClass.py
===================================================================
diff --git a/LevPredko/MatrixVectorWithoutClass/Matrix_Vector_WithoutClass.py b/LevPredko/MatrixVectorWithoutClass/Matrix_Vector_WithoutClass.py
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithoutClass/Matrix_Vector_WithoutClass.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,261 +0,0 @@
-import Constants
-
-def read_matrix_from_file(file_path):
-    matrix = []
-    try:
-        with open(file_path, 'r') as readFile:
-            for line in readFile:
-                line = line.strip()
-                row = [int(i) for i in line.split(Constants.SEPARATOR)]
-                matrix.append(row)
-        return matrix
-    except FileNotFoundError as e:
-        print("Error: File not found", e)
-        return None
-    except Exception as e:
-        print("An unexpected error occurred", e)
-        return None
-
-def determinant(matrix):
-    det = 0
-    for i in range(len(matrix)):
-        add = 1
-        sub = 1
-        for j in range(len(matrix)):
-            add *= matrix[j][(i + j) % len(matrix)]
-            sub *= matrix[j][(i - j) % len(matrix)]
-        det += (add - sub)
-    if det == 0:
-        raise ValueError("The determinant cannot be equal to 0")
-    return det
-
-def transpose(matrix):
-    rows = len(matrix)
-    cols = len(matrix[0])
-    result = [[None] * rows for _ in range(cols)]
-    for i in range(rows):
-        for j in range(cols):
-            result[j][i] = matrix[i][j]
-    return result
-
-def cofactor(matrix, row, col):
-    addition = []
-    for i in range(len(matrix)):
-        for j in range(len(matrix[0])):
-            if i != row and j != col:
-                addition.append(matrix[i][j])
-    result = ((-1) ** (row + col)) * (addition[0] * addition[3] - addition[2] * addition[1])
-    return result
-
-def multiplication_for_divide(matrix1, matrix2):
-    multiplication = []
-    for i in range(len(matrix1)):
-        row = []
-        for j in range(len(matrix2[0])):
-            product = 0
-            for k in range(len(matrix2)):
-                product += matrix1[i][k] * matrix2[k][j]
-            row.append(product)
-        multiplication.append(row)
-    return multiplication
-
-def read_vector_from_file(file_path):
-    vector = []
-    try:
-        with open(file_path, 'r') as readFile:
-            for line in readFile:
-                line = line.strip()
-                row = [int(i) for i in line.split(Constants.SEPARATOR)]
-                vector.append(row)
-        return vector
-    except FileNotFoundError as e:
-        print(f"Error: File not found - {e}")
-        return None
-    except Exception as e:
-        print(f"An unexpected error occurred - {e}")
-        return None
-
-def matrix_add(matrix1, matrix2):
-    if len(matrix1) != len(matrix2) or len(matrix1[0]) != len(matrix2[0]):
-        print("Error: Matrices must have the same dimensions for addition")
-        return None
-
-    addition = []
-    for i in range(len(matrix1)):
-        row = []
-        for j in range(len(matrix1[0])):
-            row.append(matrix1[i][j] + matrix2[i][j])
-        addition.append(row)
-    return addition
-
-def matrix_sub(matrix1, matrix2):
-    if len(matrix1) != len(matrix2) or len(matrix1[0]) != len(matrix2[0]):
-        print("Error: Matrices must have the same dimensions for subtraction")
-        return None
-
-    subtraction = []
-    for i in range(len(matrix1)):
-        row = []
-        for j in range(len(matrix1[0])):
-            row.append(matrix1[i][j] - matrix2[i][j])
-        subtraction.append(row)
-    return subtraction
-
-def matrix_mul(matrix1, matrix2):
-    if len(matrix1[0]) != len(matrix2):
-        print("Error: Number of columns in the first matrix must be equal to the number of rows in the second matrix")
-        return None
-
-    multiplication = []
-    for i in range(len(matrix1)):
-        row = []
-        for j in range(len(matrix2[0])):
-            product = 0
-            for k in range(len(matrix2)):
-                product += matrix1[i][k] * matrix2[k][j]
-            row.append(product)
-        multiplication.append(row)
-    return multiplication
-
-def matrix_div(matrix1, matrix2):
-    try:
-        det = determinant(matrix2)
-
-        if det == 0:
-            raise ValueError("The determinant of the second matrix is zero, division is not possible")
-
-        transposed = []
-        for i in range(len(matrix1)):
-            transposed.append([])
-            for j in range(len(matrix1[0])):
-                transposed[i].append(cofactor(matrix2, i, j))
-        transposed = transpose(transposed)
-
-        inverse = []
-        for i in range(len(transposed)):
-            inverse.append([])
-            for j in range(len(transposed[0])):
-                value = float(transposed[i][j]) / det
-                inverse[i].append(round(value, 2))
-
-        result = multiplication_for_divide(matrix1, inverse)
-
-        for i in range(len(result)):
-            for j in range(len(result[0])):
-                result[i][j] = round(result[i][j], 2)
-        return result
-    except ZeroDivisionError as e:
-        print("Error: Different sizes are specified in the file", e)
-
-def vector_add(vector1, vector2):
-    if len(vector1) != len(vector2):
-        print("Error: Vectors must have the same length for addition")
-        return None
-
-    add_vector = []
-    for i in range(len(vector1)):
-        result_row = []
-        for j in range(len(vector1[i])):
-            result_row.append(vector1[i][j] + vector2[i][j])
-        add_vector.append(result_row)
-    return add_vector
-
-def vector_sub(vector1, vector2):
-    if len(vector1) != len(vector2):
-        print("Error: Vectors must have the same length for subtraction")
-        return None
-
-    sub_vector = []
-    for i in range(len(vector1)):
-        result_row = []
-        for j in range(len(vector1[i])):
-            result_row.append(vector1[i][j] - vector2[i][j])
-        sub_vector.append(result_row)
-    return sub_vector
-
-def vector_mul(vector1, vector2):
-    if len(vector1) != len(vector2):
-        print("Error: Vectors must have the same length for element-wise multiplication")
-        return None
-
-    mul_vector = []
-    for i in range(len(vector1)):
-        result_row = []
-        for j in range(len(vector1[i])):
-            result_row.append(vector1[i][j] * vector2[i][j])
-        mul_vector.append(result_row)
-    return mul_vector
-
-def vector_div(vector1, vector2):
-    try:
-        if len(vector1) != len(vector2):
-            print("Error: Vectors must have the same length for element-wise division")
-            return None
-
-        div_vector = []
-        for i in range(len(vector1)):
-            result_row = []
-            for j in range(len(vector1[i])):
-                if vector2[i][j] == 0:
-                    print("Error: Division by zero is not allowed")
-                    return None
-                result_row.append(vector1[i][j] / vector2[i][j])
-            div_vector.append(result_row)
-        return div_vector
-    except ZeroDivisionError as e:
-        print("Error: Division by zero is not allowed", e)
-
-try:
-    matrix1 = read_matrix_from_file(Constants.Input_Matrix_1)
-    matrix2 = read_matrix_from_file(Constants.Input_Matrix_2)
-    vector1 = read_vector_from_file(Constants.Input_Vector_1)
-    vector2 = read_vector_from_file(Constants.Input_Vector_2)
-
-    with open("output2.txt", "w") as file:
-        choice = input("Matrix or Vector? (M or V): ")
-        operation = input("Enter the operation (+, -, *, /): ")
-
-        if choice == "M":
-            if operation == "+":
-                result = matrix_add(matrix1, matrix2)
-            elif operation == "-":
-                result = matrix_sub(matrix1, matrix2)
-            elif operation == "*":
-                result = matrix_mul(matrix1, matrix2)
-            elif operation == "/":
-                result = matrix_div(matrix1, matrix2)
-            else:
-                print("Error: There is no such operator for matrices")
-
-            if result:
-                for row in result:
-                    file.write(' '.join(map(str, row)) + '\n')
-
-        elif choice == "V":
-            if operation == "+":
-                result = vector_add(vector1, vector2)
-            elif operation == "-":
-                result = vector_sub(vector1, vector2)
-            elif operation == "*":
-                result = vector_mul(vector1, vector2)
-            elif operation == "/":
-                result = vector_div(vector1, vector2)
-            else:
-                print("Error: There is no such operator for vectors")
-
-            if result:
-                for item in result:
-                    file.write(' '.join(map(str, item)) + '\n')
-        else:
-            print("Error: Invalid choice.")
-except ValueError as e:
-    print("Error: Different sizes are specified in the file", e)
-except EOFError as e:
-    print("Error: Empty file", e)
-except FileNotFoundError as e:
-    print("Error: One or more files not found.", e)
-except (IOError) as e:
-    print("Error: Incorrect input/output during file operations", e)
-except Exception as e:
-    print("An unexpected error occurred", e)
-
Index: RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/main.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/main.py b/RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/main.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,116 +0,0 @@
-from RostyslavPasternak.Homework.Vector_Matrix.Exception import InvalidSize, InvalidMatrixInverse
-def str_matrix(matrix):
-    matrix_str = ""
-    for row in matrix:
-        matrix_str += "\t".join(map(str, row)) + "\n"
-    return matrix_str
-
-def add(first_matrix, second_matrix):
-    first_matrix_row = len(first_matrix)
-    first_matrix_column = len(first_matrix[0])
-    second_matrix_row = len(second_matrix)
-    second_matrix_column = len(second_matrix[0])
-    if first_matrix_row != second_matrix_row | first_matrix_column != second_matrix_column:
-        raise InvalidSize()
-    result = [[0 for _ in range(first_matrix_row)] for _ in range(first_matrix_row)]
-    for i in range(0, first_matrix_column):
-        for j in range(0, first_matrix_row):
-            result[i][j] = first_matrix[i][j] + second_matrix[i][j]
-    return result
-
-
-def sub(first_matrix, second_matrix):
-    first_matrix_row = len(first_matrix)
-    first_matrix_column = len(first_matrix[0])
-    second_matrix_row = len(second_matrix)
-    second_matrix_column = len(second_matrix[0])
-    if first_matrix_row != second_matrix_row | first_matrix_column != second_matrix_column:
-        raise InvalidSize()
-    result = [[0 for _ in range(first_matrix_column)] for _ in range(first_matrix_row)]
-    for i in range(0, first_matrix_column):
-        for j in range(0, first_matrix_row):
-            result[i][j] = first_matrix[i][j] - second_matrix[i][j]
-    return result
-def mul(first_matrix, second_matrix):
-    first_matrix_row = len(first_matrix)
-    first_matrix_column = len(first_matrix[0])
-    second_matrix_row = len(second_matrix)
-    second_matrix_column = len(second_matrix[0])
-    if first_matrix_row != second_matrix_column | first_matrix_column != second_matrix_row:
-        raise InvalidSize()
-    result = [[0 for _ in range(first_matrix_column)] for _ in range(first_matrix_row)]
-    for i in range(first_matrix_column):
-        for j in range(second_matrix_column):
-            result[i][j] = sum(first_matrix[i][k] * second_matrix[k][j] for k in range(first_matrix_column))
-    return result
-def div(first_matrix, second_matrix):
-    return mul(first_matrix, inverse(second_matrix))
-def inverse(matrix):
-    row = len(first_matrix)
-    column = len(first_matrix[0])
-    if row != column:
-         raise InvalidSize()
-
-    identity_matrix = [[0] * column for _ in range(row)]
-    for i in range(row):
-        identity_matrix[i][i] = 1
-
-    matrix_copy = [row[:] for row in matrix]
-
-    for i in range(row):
-        pivot = matrix_copy[i][i]
-        if pivot == 0:
-            raise InvalidMatrixInverse()
-        for j in range(column):
-            matrix_copy[i][j] /= pivot
-            identity_matrix[i][j] /= pivot
-
-        for k in range(row):
-            if k != i:
-                factor = matrix_copy[k][i]
-                for j in range(column):
-                    matrix_copy[k][j] -= factor * matrix_copy[i][j]
-                    identity_matrix[k][j] -= factor * identity_matrix[i][j]
-    return identity_matrix
-def str_to_file(matrix,file_name="result.txt"):
-    with open(file_name, 'w') as writeFile:
-        writeFile.write(str_matrix(matrix))
-
-with open("matrix1.txt", 'r') as file:
-    lines = file.readlines()
-first_matrix = []
-
-for line in lines:
-    matrix_temp = [int(element) for element in line.split(" ")]
-    first_matrix.append(matrix_temp)
-print(str_matrix(first_matrix))
-with open("matrix2.txt", 'r') as file:
-    lines = file.readlines()
-second_matrix = []
-
-for line in lines:
-    matrix_temp = [int(element) for element in line.split(" ")]
-    second_matrix.append(matrix_temp)
-print(str_matrix(second_matrix))
-while True:
-    try:
-        operator = int(input("1. Add\n2. Subtraction\n3. Multiplication\n4. Division\n5. Inverse\n0. Cancel\n"))
-        if operator == 1:
-            result = add(first_matrix, second_matrix)
-        elif operator == 2:
-            result = sub(first_matrix, second_matrix)
-        elif operator == 3:
-            result = mul(first_matrix, second_matrix)
-        elif operator == 4:
-            result = div(first_matrix, second_matrix)
-        elif operator == 5:
-            result = inverse(first_matrix)
-        else:
-            break
-    except InvalidSize as e:
-        print(e)
-    except InvalidMatrixInverse as e:
-        print(e)
-    else:
-        print(str_matrix(result))
-        str_to_file(result)
\ No newline at end of file
Index: LevPredko/MatrixVectorWithClass_1/inputMatrix2.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_1/inputMatrix2.txt b/LevPredko/MatrixVectorWithClass_1/inputMatrix2.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_1/inputMatrix2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-0 1 4
-5 6 0
Index: Vasylyshyn_Dmytro/Lesson_03/__init__.py
===================================================================
diff --git a/Vasylyshyn_Dmytro/Lesson_03/__init__.py b/Vasylyshyn_Dmytro/Lesson_03/__init__.py
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/Lesson_03/__init__.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-class User:
-    def __init__(self,number):
Index: BohdanBubniak/01-Fibonacci/fibonacci.py
===================================================================
diff --git a/BohdanBubniak/01-Fibonacci/fibonacci.py b/BohdanBubniak/01-Fibonacci/fibonacci.py
deleted file mode 100644
--- a/BohdanBubniak/01-Fibonacci/fibonacci.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,16 +0,0 @@
-with open('input.txt', 'r') as file:
-    data = file.readline().split(',')
-    num1 = int(data[0].strip())
-    num2 = int(data[1].strip())
-
-with open('steps.txt', 'r') as file:
-    steps = int(file.readline().strip())
-
-result = [num1, num2]
-
-for _ in range(2, steps):  
-    next_num = result[-1] + result[-2]
-    result.append(next_num)
-
-with open('output.txt', 'w') as file:
-    file.write(','.join(map(str, result)))
Index: MariaKravchuk/Vector/output.txt
===================================================================
diff --git a/MariaKravchuk/Vector/output.txt b/MariaKravchuk/Vector/output.txt
deleted file mode 100644
--- a/MariaKravchuk/Vector/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,15 +0,0 @@
-Vector 1:
-1 4 7
-
-Vector 2:
-0 0 0
-
-Multiplication:
-0 0 0
-
-Addition:
-1 4 7
-
-Subtraction:
-1 4 7
-
Index: MaksymPetukhov/fibonacciNumbers2/parameters.txt
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers2/parameters.txt b/MaksymPetukhov/fibonacciNumbers2/parameters.txt
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers2/parameters.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-722
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/__init__.py
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/__init__.py b/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/__init__.py
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/__init__.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,12 +0,0 @@
-class Vector:
-    def __init__(self, first_vector, second_vector):
-        self.first_vector = first_vector
-        self.second_vector = second_vector
-    def __add__(self,other):
-        return[a + b for a, b in zip(self.first_vector, other.second_vector)]
-    def __sub__(self, other):
-        return [a - b for a, b in zip(self.first_vector, other.second_vector)]
-    def __mul__(self, other):
-        return[a * b for a, b in zip(self.first_vector, other.second_vector)]
-    def __truediv__(self, other):
-        return [a / b for a, b in zip(self.first_vector,other.second_vector)]
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/main.py
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/main.py b/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/main.py
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,39 +0,0 @@
-from Vasylyshyn_Dmytro.HomeWork.Lesson_2_Matrix_Clas.Task_matrix import Matrix
-from typing import Final
-name_of_file_for_first_matrix:Final[str]= 'first_matrix.txt'
-name_of_file_for_second_matrix:Final[str]= 'second_maitrix.txt'
-name_output_file:Final[str]= 'output_matrix.txt'
-def read_data(file_name):
-    try:
-        first_matrix = []
-        with open(file_name, 'r') as firstFileMatrix:
-            for line in firstFileMatrix:
-                row = [int(x) for x in line.split()]
-                first_matrix.append(row)
-        return first_matrix
-    except FileNotFoundError:
-        print(f"Error: File '{file_name}' not found.")
-    except ValueError as e:
-        print(f"Oops, sorry, but you must write a number: {e}")
-
-def wright_data(file_name,numbers):
-    try:
-        with open(file_name, 'a') as file:
-            file.write(str(numbers))
-            file.write('\n')
-
-    except FileNotFoundError:
-        print(f"Error: File '{file_name}' not found.")
-
-
-matrix = Matrix(read_data(name_of_file_for_first_matrix), read_data(name_of_file_for_second_matrix))
-result_add = matrix+matrix
-result_subtract = matrix-matrix
-result_multiply = matrix*matrix
-result_multiply_by_inverse=matrix/matrix
-
-wright_data(name_output_file,result_add)
-wright_data(name_output_file,result_subtract)
-wright_data(name_output_file,result_multiply)
-wright_data(name_output_file,result_multiply_by_inverse)
-
Index: RostyslavPasternak/Homework/Vector_Matrix/class/numpy/vector.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/vector.txt b/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/vector.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-123 2 123 123 2 1
\ No newline at end of file
Index: LevPredko/MatrixVectorWithoutClass/Vector2read.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithoutClass/Vector2read.txt b/LevPredko/MatrixVectorWithoutClass/Vector2read.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithoutClass/Vector2read.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-2 4 6
\ No newline at end of file
Index: Oleh Kaliuzhnyi/VectorClass/main.py
===================================================================
diff --git a/Oleh Kaliuzhnyi/VectorClass/main.py b/Oleh Kaliuzhnyi/VectorClass/main.py
deleted file mode 100644
--- a/Oleh Kaliuzhnyi/VectorClass/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,81 +0,0 @@
-import os
-
-VECTOR_ONE_FILE = "vector_one.txt"
-VECTOR_TWO_WILE = "vector_two.txt"
-RESULT_FILE = "calculating_result.txt"
-NEW_VECTOR = "new_vector.txt"
-
-class FileException(Exception):
-    pass
-
-
-def read_file(filename):
-    try:
-        if not os.path.exists(filename):
-            raise FileException("Error!", filename, " is not found!")
-        with open(filename) as file:
-            line = file.readline().split()
-            line = [float(i) for i in line if i.isdigit]
-            return line
-    except FileException as file_err:
-        print(file_err)
-
-
-def push_to_file(vector):
-    try:
-        if len(vector) == 0:
-            raise Exception("Error! Vector is empty")
-        with open(RESULT_FILE, "w") as file:
-            file.write(str(vector))
-    except Exception as err:
-        print(err)
-
-
-class Vector:
-    def __init__(self, vector=[]):
-        self.vector = vector
-
-    def __add__(self, other):
-        try:
-            if len(self.vector) != len(other.vector):
-                raise Exception("Error! The lengths of vectors are not equal!")
-            vector = [self.vector[i] + other.vector[i] for i in range(len(self.vector))]
-            return vector
-        except Exception as err:
-            print(err)
-
-    def __sub__(self, other):
-        try:
-            if len(self.vector) != len(other.vector):
-                raise Exception("Error! The lengths of vectors are not equal!")
-            vector = [self.vector[i] - other.vector[i] for i in range(len(self.vector))]
-            return vector
-        except Exception as err:
-            print(err)
-
-    def __mul__(self, other):
-        try:
-            if len(self.vector) != len(other.vector):
-                raise Exception("Error! The lengths of vectors are not equal!")
-            vector = [self.vector[i] * other.vector[i] for i in range(len(self.vector))]
-            return vector
-        except Exception as err:
-            print(err)
-
-    def __truediv__(self, other):
-        try:
-            if len(self.vector) != len(other.vector):
-                raise Exception("Error! The lengths of vectors are not equal!")
-            if 0 in other.vector:
-                raise Exception("Error! Dividing by zero!")
-            vector = [self.vector[i] / other.vector[i] for i in range(len(self.vector))]
-            return vector
-        except Exception as err:
-            print(err)
-
-
-a = Vector(read_file(VECTOR_ONE_FILE))
-b = Vector(read_file(VECTOR_TWO_WILE))
-new_vec = Vector(read_file(NEW_VECTOR))
-vector_summing = Vector(a+b)
-push_to_file(vector_summing+new_vec)
\ No newline at end of file
Index: LevPredko/MatrixVectorWithoutClass/Matrix1read.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithoutClass/Matrix1read.txt b/LevPredko/MatrixVectorWithoutClass/Matrix1read.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithoutClass/Matrix1read.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-4 5 6
-7 8 9
\ No newline at end of file
Index: DarynaKovalchuk/Matrix_class/Matrix_class.py
===================================================================
diff --git a/DarynaKovalchuk/Matrix_class/Matrix_class.py b/DarynaKovalchuk/Matrix_class/Matrix_class.py
deleted file mode 100644
--- a/DarynaKovalchuk/Matrix_class/Matrix_class.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,118 +0,0 @@
-import os
-
-class DetIsZero(Exception):
-    def init(self, message="Determinant is zero!"):
-        self.message = message
-        super().init(self.message)
-
-class Matrix:
-    def init(self, filename):
-        self.matrix = self.read_matrix(filename)
-
-    def read_matrix(self, filename):
-        with open(filename, 'r') as file:
-            lines = file.readlines()
-        matrix = []
-        for line in lines:
-            rows = [int(x) for x in line.split()]
-            matrix.append(rows)
-        return matrix
-
-    def write_matrix(self, filename, result_matrix):
-        with open(filename, 'a') as file:
-            file.write("matrix result:\n")
-            for rows in result_matrix:
-                file.write(' '.join(map(str, rows)) + '\n')
-
-    def add(self, other_matrix):
-        result = []
-        for i in range(len(self.matrix)):
-            row = []
-            for j in range(len(self.matrix[0])):
-                row.append(self.matrix[i][j] + other_matrix[i][j])
-            result.append(row)
-        return result
-
-    def sub(self, other_matrix):
-        result = []
-        for i in range(len(self.matrix)):
-            row = []
-            for j in range(len(self.matrix[0])):
-                row.append(self.matrix[i][j] - other_matrix[i][j])
-            result.append(row)
-        return result
-
-    def mul(self, other_matrix):
-        result = []
-        for i in range(len(self.matrix)):
-            row = []
-            for j in range(len(other_matrix[0])):
-                sum_element = 0
-                for k in range(len(other_matrix)):
-                    sum_element += self.matrix[i][k] * other_matrix[k][j]
-                row.append(sum_element)
-            result.append(row)
-        return result
-
-    def truediv(self, other_matrix):
-        try:
-            transposed = [
-                [other_matrix[1][1], -other_matrix[1][0]],
-                [-other_matrix[0][1], other_matrix[0][0]]
-            ]
-            det = other_matrix[0][0] * other_matrix[1][1] - other_matrix[0][1] * other_matrix[1][0]
-
-            if det == 0:
-                raise DetIsZero
-
-            inverse = []
-            for i in range(len(transposed)):
-                inverse.append([])
-                for j in range(len(transposed[0])):
-                    inverse[i].append(transposed[j][i] / det)
-            result = self.mul(inverse)
-            return result
-
-        except DetIsZero as e:
-            print("Det can't be zero!")
-            return []
-
-try:
-    first_matrix = Matrix('first_matrix.txt')
-    second_matrix = Matrix('second_matrix.txt')
-except FileNotFoundError:
-    print("One or both files do not exist.")
-    exit()
-
-if not first_matrix.matrix or not second_matrix.matrix:
-    print("One or both files are empty.")
-    exit()
-
-if len(first_matrix.matrix) != len(second_matrix.matrix) or len(first_matrix.matrix[0]) != len(second_matrix.matrix[0]):
-    print("The sizes don't match.")
-else:
-    result_addition = first_matrix + second_matrix.matrix
-    result_subtraction = first_matrix - second_matrix.matrix
-    result_multiply = first_matrix * second_matrix.matrix
-    result_devide = first_matrix / second_matrix.matrix
-
-    first_matrix.write_matrix('result_addition.txt', result_addition)
-    first_matrix.write_matrix('result_subtraction.txt', result_subtraction)
-    first_matrix.write_matrix('result_multiply.txt', result_multiply)
-    first_matrix.write_matrix('result_divide.txt', result_devide)
-
-    print("Result addition:")
-    for rows in result_addition:
-        print(rows)
-
-    print("Result subtraction:")
-    for rows in result_subtraction:
-        print(rows)
-
-    print("Result multiply:")
-    for rows in result_multiply:
-        print(rows)
-
-    print("Result divide:")
-    for rows in result_devide:
-        print(rows)
Index: anastasiia_trushchak/Homework/Homework_02/VectorClass/output.txt
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_02/VectorClass/output.txt b/anastasiia_trushchak/Homework/Homework_02/VectorClass/output.txt
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_02/VectorClass/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-Sum Result:
-5 13 21
-Subtraction Result:
--3 -9 -11
-Multiplication Result:
-3 60 320
-Division Result:
-0.3333333333333333 0.06666666666666667 0.078125
Index: Oleh Kaliuzhnyi/MatrixProject/MatrixMain.py
===================================================================
diff --git a/Oleh Kaliuzhnyi/MatrixProject/MatrixMain.py b/Oleh Kaliuzhnyi/MatrixProject/MatrixMain.py
deleted file mode 100644
--- a/Oleh Kaliuzhnyi/MatrixProject/MatrixMain.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,101 +0,0 @@
-MATRIX_ONE_FILE = "MatrixOne.txt"
-MATRIX_TWO_FILE = "MatrixTwo.txt"
-
-
-def set_matrix(file_name, matrix):
-    with open(file_name) as file:
-        for i in range(3):
-            line = file.readline()
-            matrix.append(line.split())
-            matrix[i] = [int(j) for j in matrix[i] if j.isdigit]
-
-def add_Matrix_To_File(resultText, matrix):
-    with open(resultText, "w") as file:
-        for i in range(3):
-            file.write(str(matrix[i]))
-            file.write('\n')
-
-
-def sum_matrix(file_name_one, file_name_two):
-    matrix_one = []
-    matrix_two = []
-    matrix_result = []
-    set_matrix(file_name_one, matrix_one)
-    set_matrix(file_name_two, matrix_two)
-    for i in range(3):
-        array = []
-        for j in range(3):
-            array.append(matrix_one[i][j]+matrix_two[i][j])
-        matrix_result.append(array)
-    add_Matrix_To_File("SumResult.txt", matrix_result)
-
-
-def subtract_matrix(file_name_one, file_name_two):
-    matrix_one = []
-    matrix_two = []
-    matrix_result = []
-    set_matrix(file_name_one, matrix_one)
-    set_matrix(file_name_two, matrix_two)
-    for i in range(3):
-        array = []
-        for j in range(3):
-            array.append(matrix_one[i][j] - matrix_two[i][j])
-        matrix_result.append(array)
-    add_Matrix_To_File("SubtractionResult.txt", matrix_result)
-
-
-def multiply_matrix(file_name_one, file_name_two):
-    matrix_one = []
-    matrix_two = []
-    matrix_result = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
-    set_matrix(file_name_one, matrix_one)
-    set_matrix(file_name_two, matrix_two)
-    for i in range(3):
-        for j in range(3):
-            for k in range(3):
-                matrix_result[i][j] += matrix_one[i][k] * matrix_two[k][j]
-    add_Matrix_To_File("MultiplyResult.txt", matrix_result)
-
-
-def get_det(matrix):
-    det = 0
-    size = len(matrix)
-    if size == 2:
-        return matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0]
-    elif size == 3:
-        for i in range(3):
-            det += matrix[0][i] * (matrix[1][(i + 1) % 3] * matrix[2][(i + 2) % 3] - matrix[1][(i + 2) % 3] * matrix[2][(i + 1) % 3])
-        return det
-    elif size > 3:
-        raise Exception("Error! Matrix size is >3")
-
-
-def divide_matrix(file_name_one, file_name_two):
-    matrix_one = []
-    matrix_two = []
-    matrix_result = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
-    set_matrix(file_name_one, matrix_one)
-    set_matrix(file_name_two, matrix_two)
-    try:
-        n = len(matrix_two)
-        det = get_det(matrix_two)
-        if det == 0:
-            raise Exception("Error! Det == 0! Dividing is impossible")
-        adj_matrix = []
-        for j in range(n):
-            adj_row = []
-            for i in range(n):
-                submatrix = [row[:j] + row[j + 1:] for row in (matrix_two[:i] + matrix_two[i + 1:])]
-                cofactor = get_det(submatrix) * (-1) ** (i + j)
-                adj_row.append(cofactor)
-            adj_matrix.append(adj_row)
-        for i in range(3):
-            for j in range(3):
-                for k in range(3):
-                    matrix_result[i][j] += matrix_one[i][k] * adj_matrix[k][j]
-        add_Matrix_To_File("DividingResult.txt", matrix_result)
-    except Exception as err:
-        print(err)
-
-
-divide_matrix(MATRIX_ONE_FILE, MATRIX_TWO_FILE)
\ No newline at end of file
Index: BrynarskiyAndriy/Homework/Fibonachi.py
===================================================================
diff --git a/BrynarskiyAndriy/Homework/Fibonachi.py b/BrynarskiyAndriy/Homework/Fibonachi.py
deleted file mode 100644
--- a/BrynarskiyAndriy/Homework/Fibonachi.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,25 +0,0 @@
-# Зчитуємо вхідні дані з файлів
-
-with open('input.txt', 'r') as input_file:
-    input_data = input_file.read().split(',')
-    print(input_data)
-    
-    
-with open('steps.txt', 'r') as steps_file:
-    num_steps = int(steps_file.read())
-
-# Просимо  вхідні дані
-first_number, second_number = map(int, input_data)
-fibonacci_sequence = [first_number, second_number]
-
-# Генеруємо ряд Фібоначі
-while len(fibonacci_sequence) < num_steps:
-    next_number = fibonacci_sequence[-1] + fibonacci_sequence[-2]
-    fibonacci_sequence.append(next_number)
-
-# Записуємо результат у вихідний файл
-with open('output.txt', 'w') as output_file:
-    output_file.write(','.join(map(str, fibonacci_sequence)))
-
-# Виводимо результат у консоль
-print(','.join(map(str, fibonacci_sequence)))
Index: BrynarskiyAndriy/Homework/Vector.py
===================================================================
diff --git a/BrynarskiyAndriy/Homework/Vector.py b/BrynarskiyAndriy/Homework/Vector.py
deleted file mode 100644
--- a/BrynarskiyAndriy/Homework/Vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,41 +0,0 @@
-def read_vector(vector_str):
-    values = vector_str.split(',')
-    vector = [float(val) for val in values]
-    return vector
-
-def write_vector(vector):
-    vector_str = "(" + ", ".join(map(str, vector)) + ")"
-    return vector_str
-
-def add_vectors(vector1, vector2):
-    result_vector = [v1 + v2 for v1, v2 in zip(vector1, vector2)]
-    return result_vector
-
-def subtract_vectors(vector1, vector2):
-    result_vector = [v1 - v2 for v1, v2 in zip(vector1, vector2)]
-    return result_vector
-
-def multiply_vectors(vector1, vector2):
-    result_vector = [v1 * v2 for v1, v2 in zip(vector1, vector2)]
-    return str(sum(result_vector))
-
-try:
-    with open('vector1.txt', 'r') as file:
-        vector1_str = file.readline()
-
-    with open('vector2.txt', 'r') as file:
-        vector2_str = file.readline()
-
-    vector1 = read_vector(vector1_str)
-    vector2 = read_vector(vector2_str)
-
-    result_add = add_vectors(vector1, vector2)
-    result_subtract = subtract_vectors(vector1, vector2)
-    result_multiply = multiply_vectors(vector1, vector2)
-
-    with open('results.txt', 'w') as file:
-        file.write("Додавання: " + write_vector(result_add) + "\n")
-        file.write("Віднімання: " + write_vector(result_subtract) + "\n")
-        file.write("Множення: " + result_multiply + "\n")
-except Exception as e:
-    print("Сталася помилка:", str(e))
Index: Oles Prokopiv/homework/fibonacci/output.txt
===================================================================
diff --git a/Oles Prokopiv/homework/fibonacci/output.txt b/Oles Prokopiv/homework/fibonacci/output.txt
deleted file mode 100644
--- a/Oles Prokopiv/homework/fibonacci/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[43.0, 44.0, 87.0, 131.0, 218.0, 349.0, 567.0, 916.0, 1483.0, 2399.0]
\ No newline at end of file
Index: LevPredko/fibonacci/output.txt
===================================================================
diff --git a/LevPredko/fibonacci/output.txt b/LevPredko/fibonacci/output.txt
deleted file mode 100644
--- a/LevPredko/fibonacci/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[3.0, 5.0, 8.0, 13.0, 21.0, 34.0, 55.0, 89.0, 144.0, 233.0]
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/first_matrix.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/first_matrix.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/first_matrix.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/first_matrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-4 5 6
-7 8 9
Index: AnastasiaPelyno/Matrix_multiply_divide/matrix_1.txt
===================================================================
diff --git a/AnastasiaPelyno/Matrix_multiply_divide/matrix_1.txt b/AnastasiaPelyno/Matrix_multiply_divide/matrix_1.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Matrix_multiply_divide/matrix_1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-3 2 1
-2 1 3
\ No newline at end of file
Index: MariaKravchuk/Matrix/matrix1.txt
===================================================================
diff --git a/MariaKravchuk/Matrix/matrix1.txt b/MariaKravchuk/Matrix/matrix1.txt
deleted file mode 100644
--- a/MariaKravchuk/Matrix/matrix1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-8 7 5
-9 4 5
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/FirstMatrix.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/FirstMatrix.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/FirstMatrix.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/FirstMatrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-3 2 3
-5 1 4
-3 4 2
\ No newline at end of file
Index: BohdanFariyon/1.Fibonachi/Fibonachi.py
===================================================================
diff --git a/BohdanFariyon/1.Fibonachi/Fibonachi.py b/BohdanFariyon/1.Fibonachi/Fibonachi.py
deleted file mode 100644
--- a/BohdanFariyon/1.Fibonachi/Fibonachi.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,18 +0,0 @@
-
-input_file = "input.txt"
-output_file = "output.txt"
-
-with open(input_file, "r") as file:
-    fibonacci_numbers = list(file.read().split())
-
-
-for i in range(2, 10):
-    fibonacci_numbers.append(float(fibonacci_numbers[i - 1]) + float(fibonacci_numbers[i - 2]))
-
-with open(output_file, "w") as record:
-    record.write(str(fibonacci_numbers))
-
-
-
-
-
Index: RostyslavPasternak/Homework/Abstract_class/Shape/Shape.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Abstract_class/Shape/Shape.py b/RostyslavPasternak/Homework/Abstract_class/Shape/Shape.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Abstract_class/Shape/Shape.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,13 +0,0 @@
-from abc import ABC, abstractmethod
-from RostyslavPasternak.Homework.Abstract_class.Shape.Colors import *
-class Shape(ABC):
-    def __init__(self, color: Color):
-        super().__init__()
-        self.color = color
-    @abstractmethod
-    def get_perimeter(self) -> float:
-        pass
-    @abstractmethod
-    def get_area(self) -> float:
-        pass
-
Index: anastasiia_trushchak/Homework/Homework_01/Matrix/inputMatrix1.txt
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_01/Matrix/inputMatrix1.txt b/anastasiia_trushchak/Homework/Homework_01/Matrix/inputMatrix1.txt
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_01/Matrix/inputMatrix1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 3 4
-5 6 7
-3 4 8
\ No newline at end of file
Index: MaksymPetukhov/matrixTask5/main.py
===================================================================
diff --git a/MaksymPetukhov/matrixTask5/main.py b/MaksymPetukhov/matrixTask5/main.py
deleted file mode 100644
--- a/MaksymPetukhov/matrixTask5/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,143 +0,0 @@
-import constants
-import os
-
-matrix_a = []
-matrix_b = []
-
-
-class FileIsEmpty(Exception):
-
-    def __init__(self, message="File is empty!"):
-        self.message = message
-        super().__init__(self.message)
-
-
-class DetIsZero(Exception):
-
-    def __init__(self, message="Can't transpose matrix if determinant is zero!"):
-        self.message = message
-        super().__init__(self.message)
-
-
-try:
-    with open(constants.INPUT_FILE, 'r') as file:
-        if os.path.getsize(constants.INPUT_FILE) == 0:
-            raise FileIsEmpty
-        new_matrix = False
-        lines = file.readlines()
-        for line in lines:
-            if line == '\n':
-                new_matrix = True
-                continue
-            if new_matrix:
-                elements = line.strip().split(constants.SEPARATOR)
-                row = [float(element) for element in elements]
-                matrix_b.append(row)
-            else:
-                elements = line.strip().split(constants.SEPARATOR)
-                row = [float(element) for element in elements]
-                matrix_a.append(row)
-except FileNotFoundError as e:
-    print("File not found!")
-
-print(matrix_a)
-print(matrix_b)
-
-
-class Matrix:
-
-    def __init__(self, matrix):
-        self.matrix = matrix
-
-    def __add__(self, matrix_b):
-        result = []
-        for i in range(len(matrix_b)):
-            result.append([])
-            for j in range(len(matrix_b[0])):
-                result[i].append(self.matrix[i][j] + matrix_b[i][j])
-        return result
-
-    def __sub__(self, matrix_b):
-        result = []
-        for i in range(len(matrix_b)):
-            result.append([])
-            for j in range(len(matrix_b[0])):
-                result[i].append(self.matrix[i][j] - matrix_b[i][j])
-        return result
-
-    def __mul__(self, matrix_b):
-        result = []
-        for i in range(len(matrix_b)):
-            result.append([])
-            for j in range(len(matrix_b[0])):
-                result[i].append(0)
-                for k in range(len(matrix_b)):
-                    result[i][j] += self.matrix[i][k] * matrix_b[k][j]
-        return result
-
-    def __truediv__(self, matrix_b):
-        det = self.determinant(matrix_b)
-        try:
-            if det == 0:
-                raise DetIsZero
-            else:
-                transposed = []
-                for i in range(len(matrix_b)):
-                    transposed.append([])
-                    for j in range(len(matrix_b[0])):
-                        transposed[i].append(self.cofactor(matrix_b, i, j))
-                transposed = self.transpose(transposed)
-
-                inverse = []
-                for i in range(len(transposed)):
-                    inverse.append([])
-                    for j in range(len(transposed[0])):
-                        inverse[i].append(float(transposed[i][j]) / det)
-
-                result = self * inverse
-                return result
-        except DetIsZero as e:
-            print("Det can't be zero!")
-            return 0
-
-    def determinant(self, matrix):
-        det = 0
-        for i in range(len(matrix)):
-            add = 1
-            sub = 1
-            for j in range(len(matrix)):
-                add *= matrix[j][(i + j) % len(matrix)]
-                sub *= matrix[j][(i - j) % len(matrix)]
-            det += (add - sub)
-        return det
-
-    def transpose(self, matrix):
-        rows = len(matrix)
-        cols = len(matrix[0])
-        result = [[None] * rows for _ in range(cols)]
-        for i in range(rows):
-            for j in range(cols):
-                result[j][i] = matrix[i][j]
-        return result
-
-    def cofactor(self, matrix, row, col):
-        addition = []
-        for i in range(len(matrix)):
-            for j in range(len(matrix[0])):
-                if i != row and j != col:
-                    addition.append(matrix[i][j])
-        result = ((-1) ** (row + col)) * (addition[0] * addition[3] - addition[2] * addition[1])
-        return result
-
-
-matrix_a = Matrix(matrix_a)
-
-try:
-    with open(constants.OUTPUT_FILE, 'w') as file:
-        file.write("Addition:\n" + str(matrix_a + matrix_b) + '\n')
-        file.write("Subtraction:\n" + str(matrix_a - matrix_b) + '\n')
-        file.write("Multiplication:\n" + str(matrix_a * matrix_b) + '\n')
-        file.write("Division:\n" + str(matrix_a / matrix_b) + '\n')
-
-except FileNotFoundError:
-    print("File not found!")
Index: ZlatomyraSeverylova/task1_fibonachi/input.txt
===================================================================
diff --git a/ZlatomyraSeverylova/task1_fibonachi/input.txt b/ZlatomyraSeverylova/task1_fibonachi/input.txt
deleted file mode 100644
--- a/ZlatomyraSeverylova/task1_fibonachi/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-2
-5
Index: Oleh Kaliuzhnyi/VectorProject/VectorTwo.txt
===================================================================
diff --git a/Oleh Kaliuzhnyi/VectorProject/VectorTwo.txt b/Oleh Kaliuzhnyi/VectorProject/VectorTwo.txt
deleted file mode 100644
--- a/Oleh Kaliuzhnyi/VectorProject/VectorTwo.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-2 4 3
\ No newline at end of file
Index: AnastasiaPelyno/Matrix_Plus_Minus/main.py
===================================================================
diff --git a/AnastasiaPelyno/Matrix_Plus_Minus/main.py b/AnastasiaPelyno/Matrix_Plus_Minus/main.py
deleted file mode 100644
--- a/AnastasiaPelyno/Matrix_Plus_Minus/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,57 +0,0 @@
-MATRIX_ONE = 'matrix_1.txt'
-MATRIX_TWO='matrix_2.txt'
-RESULT_FILE='result.txt'
-MODE_READ='r'
-MODE_WRITE='w'
-FILE_ERROR='File Not Found'
-
-
-def actions(str1,str2):
-    file.write(str1)
-    for i in matrix_one:
-        file.write(str(i) + '\n')
-    file.write(str2 + '\n')
-    for i in matrix_two:
-        file.write(str(i) + '\n')
-    file.write('=' + '\n')
-
-
-def reading(matrix_file, mode, matrix):
-    with open(matrix_file, mode) as file:
-        for line in file:
-            row=[int(i) for i in line.split()]
-            matrix.append(row)
-
-
-matrix_one=[]
-try:
-    reading(MATRIX_ONE,MODE_READ,matrix_one)
-except FileNotFoundError:
-    print(FILE_ERROR)
-matrix_two=[]
-try:
-    reading(MATRIX_TWO,MODE_READ,matrix_two)
-except FileNotFoundError:
-    print(FILE_ERROR)
-res_add=[]
-for i in range(len(matrix_one)):
-    row = []
-    for j in range(len(matrix_one[0])):
-        row.append(matrix_one[i][j] + matrix_two[i][j])
-    res_add.append(row)
-res_sub=[]
-for i in range(len(matrix_one)):
-    row = []
-    for j in range(len(matrix_one[0])):
-        row.append(matrix_one[i][j] - matrix_two[i][j])
-    res_sub.append(row)
-try:
-    with open(RESULT_FILE,MODE_WRITE) as file:
-        actions('Addition:\n','+')
-        for i in res_add:
-            file.write(str(i)+'\n')
-        actions('Substraction\n','-')
-        for i in res_sub:
-            file.write(str(i)+'\n')
-except FileNotFoundError:
-    print(FILE_ERROR)
Index: Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/App.py
===================================================================
diff --git a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/App.py b/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/App.py
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/App.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,22 +0,0 @@
-from typing import Final
-nameInputFile:Final[str]='file.txt'
-nameOutputFile:Final[str]='output.txt'
-
-with open(nameInputFile, 'r') as data:
-    numbers = data.readline().split()
-
-numbers = [int(num) for num in numbers]
-
-while len(numbers) < 10:
-    nextNum = numbers[-1] + numbers[-2]
-    numbers.append(nextNum)
-
-with open(nameOutputFile, 'w') as file:
-    file.write(str(numbers))
-
-print(
-f"""
-file with input data is named: {nameInputFile}
-file with output data which contains result: {nameOutputFile}
-""")
-
Index: Oles Prokopiv/homework/vector/input.txt
===================================================================
diff --git a/Oles Prokopiv/homework/vector/input.txt b/Oles Prokopiv/homework/vector/input.txt
deleted file mode 100644
--- a/Oles Prokopiv/homework/vector/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-8 1 9
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/FirstVector.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/FirstVector.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/FirstVector.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/FirstVector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 3 4 5
\ No newline at end of file
Index: FlysYurii/Task(Fibonacci)/class_fibonacci.py
===================================================================
diff --git a/FlysYurii/Task(Fibonacci)/class_fibonacci.py b/FlysYurii/Task(Fibonacci)/class_fibonacci.py
deleted file mode 100644
--- a/FlysYurii/Task(Fibonacci)/class_fibonacci.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,55 +0,0 @@
-import constants
-
-class Fibonacci:
-    def __init__(self, sequence, limit):
-        self.sequence = sequence
-        self.limit = limit
-
-    def fibonacci_sum_recursive(self, sequence=None):
-        fibonacci_sum = lambda seq: seq if (int(seq[-1]) + int(seq[-2]) > self.limit) else \
-            self.fibonacci_sum_recursive(seq + [int(seq[-1]) + int(seq[-2])])
-
-        if sequence is None:
-            sequence = self.sequence
-
-        return fibonacci_sum(sequence)
-number = None
-
-try:
-    with open(constants.INPUT, 'r') as file:
-        numbers = file.readline().split()
-        for i in range(len(numbers)):
-            try:
-                numbers[i] = int(numbers[i])
-            except ValueError:
-                print(f"Invalid integer format in {constants.INPUT}: {numbers[i]}")
-                exit(1)
-except Exception as e:
-    print(f"Error reading file {constants.INPUT}: {e}")
-    exit(1)
-
-try:
-    with open(constants.NUMBER, 'r') as file:
-        number = file.readline()
-        try:
-            number = int(number)
-        except ValueError:
-            print(f"Invalid integer format in {constants.NUMBER}: {number}")
-            exit(1)
-except Exception as e:
-    print(f"Error reading file {constants.NUMBER}: {e}")
-    exit(1)
-
-for num in Fibonacci(numbers, number).fibonacci_sum_recursive():
-    print(num, end=' ')
-
-try:
-    with open(constants.OUTPUT, 'w') as f:
-        f.write("Result:\n ")
-        for num in Fibonacci(numbers, number).fibonacci_sum_recursive():
-            f.write(str(num) + ' ')
-except Exception as e:
-    print(f"Error writing to file {constants.OUTPUT}: {e}")
-    exit(1)
-
-
Index: RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/vector1.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/vector1.txt b/RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/vector1.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/vector1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-123 2 123 123 2 1
\ No newline at end of file
Index: LevPredko/MatrixVectorWithClass_2/Matrix2.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_2/Matrix2.txt b/LevPredko/MatrixVectorWithClass_2/Matrix2.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_2/Matrix2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-9 1 4
-5 6 5
Index: nastia_vasylyk/pythonMatrixVectors/task2.py
===================================================================
diff --git a/nastia_vasylyk/pythonMatrixVectors/task2.py b/nastia_vasylyk/pythonMatrixVectors/task2.py
deleted file mode 100644
--- a/nastia_vasylyk/pythonMatrixVectors/task2.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,102 +0,0 @@
-import numpy as np
-try:
-    with open('matr.input.txt', 'r') as f:
-        n = int(f.readline())
-        array = []
-        for i in range(n):
-            array.append(f.readline().split())
-        array = [list(map(int, i)) for i in array]
-
-        m = int(f.readline())
-        array2 = []
-        for i in range(m):
-            array2.append(f.readline().split())
-        array2 = [list(map(int, i)) for i in array2]
-
-except FileNotFoundError:
-    print("Error no file")
-    exit(-1)
-def matrix_mult(A, B):
-    rows_A, cols_A = len(A), len(A[0])
-    rows_B, cols_B = len(B), len(B[0])
-    c = [[0 for _ in range(cols_B)] for _ in range(rows_A)]
-    for i in range(rows_A):
-        for j in range(cols_B):
-            for k in range(cols_A):
-                try:
-                    c[i][j] += A[i][k] * B[k][j]
-                except IndexError:
-                    print("list index out of range")
-    return c
-
-
-
-
-print("Multiplication of two matrix:")
-mult = matrix_mult(array, array2)
-print(mult)
-
-print("Addition of two matrix:")
-result_add = [[array[i][j] + array2[i][j] for j in range(len(array[0]))] for i in range(len(array))]
-
-for r in result_add:
-    print(r)
-
-print("Subtraction of two matrix:")
-subtraction = [[array[i][j] - array2[i][j] for j in range(len(array[0]))] for i in range(len(array))]
-print(subtraction)
-
-print("Division of two matrix:")
-# division = np.divide(array, array2)
-# print(division)
-
-# result = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
-# for i in range(len(array)):
-#     for j in range(len(array[0])):
-#         result[i][j] = array[i][j] // array2[i][j]
-#
-# for r in result:
-#     print(r)
-
-def matrix_inverse(matrix):
-    a, b, c = matrix[0]
-    d, e, f = matrix[1]
-    g, h, i = matrix[2]
-
-    det = a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g)
-
-    # if det == 0:
-    #     raise ValueError("Error, Determinant = 0")
-
-    inv_det = 1 / det
-    inv_matrix = [
-        [(e * i - f * h) * inv_det, (c * h - b * i) * inv_det, (b * f - c * e) * inv_det],
-        [(f * g - d * i) * inv_det, (a * i - c * g) * inv_det, (c * d - a * f) * inv_det],
-        [(d * h - e * g) * inv_det, (g * b - a * h) * inv_det, (a * e - b * d) * inv_det]
-    ]
-    return inv_matrix
-
-
-def matrix_divide(A, B):
-
-    inverse_B = matrix_inverse(B)
-    result = matrix_mult(A, inverse_B)
-    return result
-
-division=0
-try:
-    division = matrix_divide(array, array2)
-    print(division)
-except ZeroDivisionError as e:
-    print("Error, determinant =0")
-# print(array)
-# print(matrix_mult(division, array2))
-
-
-with open("matr.output.txt", 'w') as file:
-    file.write("Multiplication:" + str(mult)+"\n")
-    file.write("Addition:" + str(result_add)+"\n")
-    file.write("Subtraction:" + str(subtraction)+"\n")
-    file.write("Division:" + str(division)+"\n")
-
-
Index: MaksymPetukhov/vectorTask2/input.txt
===================================================================
diff --git a/MaksymPetukhov/vectorTask2/input.txt b/MaksymPetukhov/vectorTask2/input.txt
deleted file mode 100644
--- a/MaksymPetukhov/vectorTask2/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-1,2,3
-4,5,6
\ No newline at end of file
Index: yuliamalynovska/homework/classVector/input1.txt
===================================================================
diff --git a/yuliamalynovska/homework/classVector/input1.txt b/yuliamalynovska/homework/classVector/input1.txt
deleted file mode 100644
--- a/yuliamalynovska/homework/classVector/input1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 4
\ No newline at end of file
Index: AnastasiaPelyno/Fibonacchi/steps.txt
===================================================================
diff --git a/AnastasiaPelyno/Fibonacchi/steps.txt b/AnastasiaPelyno/Fibonacchi/steps.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Fibonacchi/steps.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-5
\ No newline at end of file
Index: BohdanFariyon/5.ClassMatrix/ClassMatrix.py
===================================================================
diff --git a/BohdanFariyon/5.ClassMatrix/ClassMatrix.py b/BohdanFariyon/5.ClassMatrix/ClassMatrix.py
deleted file mode 100644
--- a/BohdanFariyon/5.ClassMatrix/ClassMatrix.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,120 +0,0 @@
-MATRIX_FIRST_INPUT='matrix1.txt'
-MATRIX_SECOND_INPUT = 'matrix2.txt'
-MATRIX_RESULT = 'matrix_rez.txt'
-mode = 'r'
-def print_matrix(matrix):
-    for i in matrix:
-        print(i)
-class Matrix:
-    def __init__(self, matrix=[]):
-        self.matrix = matrix
-    def __str__(self):
-        return '\n'.join([' '.join(map(str, row)) for row in self.matrix])
-    def read(self,MATRIX_INPUT):
-
-        try:
-            matrix = []
-            with open(MATRIX_INPUT, "r") as lines:
-                lines = lines.readlines()
-
-                for line in lines:
-                    row = [float(x) for x in line.split()]
-                    matrix.append(row)
-            self.matrix=matrix
-        except FileNotFoundError:
-            print("File " + MATRIX_FIRST_INPUT + "no found.")
-            exit(-1)
-    def __mul__(self, other):
-
-        try:
-            matrix_multiplication = []
-            for i in range(len(self.matrix)):
-                row = []
-                for j in range(len(other.matrix[0])):
-                    number = 0
-                    for k in range(max(len(self.matrix[0]), len(other.matrix))):
-                        number += float(self.matrix[i][k]) * float(other.matrix[k][j])
-                    row.append(round(number, 3))
-                matrix_multiplication.append(row)
-            return Matrix(matrix_multiplication)
-        except IndexError:
-            print("The number of columns of the first matrix is not equal to the number of rows of the second matrix: " + str(len(self.matrix[0])) + '!=' + str(len(other.matrix)))
-
-    def __truediv__(self, other):
-        matrix = other.matrix
-        n = len(matrix)
-
-
-        inverse = [[0 for j in range(n)] for i in range(n)]
-        for i in range(n):
-            inverse[i][i] = 1
-
-        for col in range(n):
-
-            max_val = abs(matrix[col][col])
-            max_row = col
-            for k in range(col + 1, n):
-                if abs(matrix[k][col]) > max_val:
-                    max_val = abs(matrix[k][col])
-                    max_row = k
-
-
-            matrix[col], matrix[max_row] = matrix[max_row], matrix[col]
-            inverse[col], inverse[max_row] = inverse[max_row], inverse[col]
-
-            try:
-                pivot = matrix[col][col]
-                for j in range(n):
-                    matrix[col][j] /= pivot
-                    inverse[col][j] /= pivot
-            except ZeroDivisionError:
-                print("It is not possible to divide by zero")
-                exit(-1)
-
-            for i in range(n):
-                if i != col:
-                    factor = matrix[i][col]
-                    for j in range(n):
-                        matrix[i][j] -= factor * matrix[col][j]
-                        inverse[i][j] -= factor * inverse[col][j]
-
-        return Matrix(self.matrix) * Matrix(inverse)
-    def __add__(self, other):
-        try:
-            matrix_sum = []
-            for i in range(max(len(other.matrix), len(self.matrix))):
-                row_matrix_rez = []
-                for j in range(max(len(other.matrix[0]), len(self.matrix[0]))):
-                    row_matrix_rez.append(float(self.matrix[i][j]) + float(other.matrix[i][j]))
-                matrix_sum.append(row_matrix_rez)
-            return Matrix(matrix_sum)
-        except IndexError:
-            print("It is not possible to add matrices.")
-    def __sub__(self, other):
-        try:
-            matrix_difference = []
-            for i in range(len(other.matrix)):
-                row_matrix_rez = []
-                for j in range(len(other.matrix[0])):
-                    row_matrix_rez.append(float(self.matrix[i][j]) - float(other.matrix[i][j]))
-                matrix_difference.append(row_matrix_rez)
-            return Matrix(matrix_difference)
-        except IndexError:
-            print("It is not possible to subtract matrices.")
-First_Matrix = Matrix()
-Second_Matrix = Matrix()
-
-First_Matrix.read(MATRIX_FIRST_INPUT)
-Second_Matrix.read(MATRIX_SECOND_INPUT)
-
-sum = First_Matrix + Second_Matrix
-difference = First_Matrix - Second_Matrix
-multipliation = First_Matrix * Second_Matrix
-divide = First_Matrix / Second_Matrix
-with open(MATRIX_RESULT, 'w') as file:
-    file.write("Addition:\n" + str(sum)+'\n')
-    file.write("Subtraction:\n" + str(difference)+'\n')
-    file.write("Multiplication:\n" + str(multipliation) + '\n')
-    file.write("Division:\n" + str(divide) + '\n')
-
-
Index: Oles Prokopiv/homework/fibonacci/input.txt
===================================================================
diff --git a/Oles Prokopiv/homework/fibonacci/input.txt b/Oles Prokopiv/homework/fibonacci/input.txt
deleted file mode 100644
--- a/Oles Prokopiv/homework/fibonacci/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-43 44
\ No newline at end of file
Index: BohdanFariyon/3.Marix/Matrix(+-).py
===================================================================
diff --git a/BohdanFariyon/3.Marix/Matrix(+-).py b/BohdanFariyon/3.Marix/Matrix(+-).py
deleted file mode 100644
--- a/BohdanFariyon/3.Marix/Matrix(+-).py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,62 +0,0 @@
-def print_matrix(matrix):
-    for i in matrix:
-        print(i)
-MATRIX_FIRST_INPUT='matriмx1.txt'
-MATRIX_SECOND_INPUT='matrix2.txt'
-MATRIX_RESULT='matrix_rez.txt'
-
-matrix1=[]
-matrix2=[]
-
-try:
-    with open(MATRIX_FIRST_INPUT, "r") as lines:
-        lines = lines.readlines()
-
-        for line in lines:
-            row = [float(x) for x in line.split()]
-            matrix1.append(row)
-except FileNotFoundError:
-    print("Файл " + MATRIX_FIRST_INPUT + "не знайдено")
-    exit(-1)
-
-try:
-    with open(MATRIX_SECOND_INPUT, "r") as lines:
-        lines = lines.readlines()
-
-        for line in lines:
-            row = [float(x) for x in line.split()]
-            matrix2.append(row)
-except FileNotFoundError:
-    print("Файл " + MATRIX_SECOND_INPUT + "не знайдено")
-    exit(-1)
-try:
-    matrix_sum = []
-    for i in range(max(len(matrix2), len(matrix1))):
-        row_matrix_rez=[]
-        for j in range(max(len(matrix2[0]), len(matrix1[0]))):
-            row_matrix_rez.append(float(matrix1[i][j]) + float(matrix2[i][j]))
-        matrix_sum.append(row_matrix_rez)
-
-
-
-    matrix_difference = []
-    for i in range(len(matrix2)):
-        row_matrix_rez=[]
-        for j in range(len(matrix2[0])):
-            row_matrix_rez.append(int(matrix1[i][j])-int(matrix2[i][j]))
-        matrix_difference.append(row_matrix_rez)
-
-    with open(MATRIX_RESULT, 'w') as file:
-        file.write("Додавання:\n")
-        for i in matrix_sum:
-            file.write(str(i)+'\n')
-
-        file.write("Віднімання:\n")
-        for i in matrix_difference:
-            file.write(str(i)+'\n')
-
-except IndexError:
-    print("неможливо додати і відняти матриці")
-
-
-
Index: RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/matrix2.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/matrix2.txt b/RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/matrix2.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/matrix2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-0 0 0
-0 0 0
-0 0 0
\ No newline at end of file
Index: FlysYurii/Task(Matrix and Vectors classes)/other_vector1.txt
===================================================================
diff --git a/FlysYurii/Task(Matrix and Vectors classes)/other_vector1.txt b/FlysYurii/Task(Matrix and Vectors classes)/other_vector1.txt
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and Vectors classes)/other_vector1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1,1,1,1
\ No newline at end of file
Index: LevPredko/ArrayList/Constants.py
===================================================================
diff --git a/LevPredko/ArrayList/Constants.py b/LevPredko/ArrayList/Constants.py
deleted file mode 100644
--- a/LevPredko/ArrayList/Constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-ARRAYLISTFILE = "ArrayList.txt"
Index: FlysYurii/Task(Matrix and vectors)/vectors.txt
===================================================================
diff --git a/FlysYurii/Task(Matrix and vectors)/vectors.txt b/FlysYurii/Task(Matrix and vectors)/vectors.txt
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and vectors)/vectors.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-92,13,42,50
\ No newline at end of file
Index: BoikoStepan/Matrix/OutputMatrix.txt
===================================================================
diff --git a/BoikoStepan/Matrix/OutputMatrix.txt b/BoikoStepan/Matrix/OutputMatrix.txt
deleted file mode 100644
--- a/BoikoStepan/Matrix/OutputMatrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,16 +0,0 @@
-Matrix Sum:
-[7, 5, 5]
-[4, 6, 4]
-[4, 4, 6]
-Matrix Sub:
-[1, 3, 3]
-[2, 0, 2]
-[2, 2, 0]
-Matrix Mult:
-[7, 5, 5]
-[4, 6, 4]
-[4, 4, 6]
-Matrix Div:
-[0.8000000000000002, 0.8000000000000002, 0.8]
-[0.6000000000000001, 0.6000000000000001, 0.6000000000000001]
-[0.6000000000000001, 0.6000000000000001, 0.6000000000000001]
Index: RostyslavPasternak/Homework/Vector_Matrix/class/standart/Matrix.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/Matrix.py b/RostyslavPasternak/Homework/Vector_Matrix/class/standart/Matrix.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/Matrix.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,112 +0,0 @@
-import random
-
-
-from RostyslavPasternak.Homework.Vector_Matrix.Exception import InvalidSize, InvalidMatrixInverse, InvalidType
-
-class Matrix:
-    def __init__(self, matrix):
-        self.matrix = matrix
-        self.row = len(matrix)
-        self.column = len(matrix[0])
-
-    @classmethod
-    def random(cls, row, column, a=1, b=9):
-        matrix = [[random.randint(a, b) for _ in range(column)] for _ in range(row)]
-        return cls(matrix)
-    @classmethod
-    def from_file(cls, file_name):
-        with open(file_name, 'r') as file:
-            lines = file.readlines()
-        matrix = []
-
-        for line in lines:
-            matrix_temp = [int(element) for element in line.split(" ")]
-            matrix.append(matrix_temp)
-        return cls(matrix)
-    def str_to_file(self, file_name="result.txt"):
-        with open(file_name, 'w') as writeFile:
-            writeFile.write(str(self))
-    def __str__(self):
-        matrix_str = ""
-        for row in self.matrix:
-            matrix_str += "\t".join(map(str, row)) + "\n"
-        return matrix_str
-    def __mul__(self, other):
-        if isinstance(other, Matrix):
-            if self.row != other.column | self.column != other.row != self.column:
-                raise InvalidSize()
-            result = [[0 for _ in range(self.column)] for _ in range(self.row)]
-            for i in range(self.column):
-                for j in range(other.row):
-                    result[i][j] = sum(self.matrix[i][k] * other.matrix[k][j] for k in range(self.column))
-            return Matrix(result)
-        elif isinstance(other, (int, float)):
-            result = Matrix(self.column, self.row)
-            for i in range(0, self.column):
-                for j in range(0, self.row):
-                    result.matrix[i][j] = self.matrix[i][j] * other
-            return result
-        raise InvalidType()
-
-    def __add__(self, other):
-        if isinstance(other, Matrix):
-            if self.row != other.row | self.column != other.column:
-                raise InvalidSize()
-            result = [[0 for _ in range(self.column)] for _ in range(self.row)]
-            for i in range(0, self.column):
-                for j in range(0, self.row):
-                    result[i][j] = self.matrix[i][j] + other.matrix[i][j]
-            return Matrix(result)
-        elif isinstance(other, (int, float)):
-            result = Matrix(self.column, self.row)
-            for i in range(0, self.column):
-                for j in range(0, self.row):
-                    result.matrix[i][j] = self.matrix[i][j] + other
-            return result
-        raise InvalidType()
-    def __sub__(self, other):
-        if isinstance(other, Matrix):
-            if self.row != other.row | self.column != other.column:
-                raise InvalidSize()
-            result = [[0 for _ in range(self.column)] for _ in range(self.row)]
-            for i in range(0, self.column):
-                for j in range(0, self.row):
-                    result[i][j] = self.matrix[i][j] - other.matrix[i][j]
-            return Matrix(result)
-        elif isinstance(other, (int, float)):
-            result = Matrix(self.column, self.row)
-            for i in range(0, self.column):
-                for j in range(0, self.row):
-                    result.matrix[i][j] = self.matrix[i][j] - other
-            return result
-    def __truediv__(self, other):
-        if isinstance(other, Matrix):
-            return self * other.inverse()
-        elif isinstance(other, (int, float)):
-            return Matrix(self.matrix/other)
-    def inverse(self):
-        if self.row != self.column:
-            raise InvalidSize()
-        identity_matrix = [[0] * self.column for _ in range(self.row)]
-        for i in range(self.row):
-            identity_matrix[i][i] = 1
-
-        matrix_copy = [row[:] for row in self.matrix]
-        identity_copy = [row[:] for row in identity_matrix]
-
-        for i in range(self.row):
-            pivot = matrix_copy[i][i]
-            if pivot == 0:
-                raise InvalidMatrixInverse()
-            for j in range(self.column):
-                matrix_copy[i][j] /= pivot
-                identity_copy[i][j] /= pivot
-
-            for k in range(self.row):
-                if k != i:
-                    factor = matrix_copy[k][i]
-                    for j in range(self.column):
-                        matrix_copy[k][j] -= factor * matrix_copy[i][j]
-                        identity_copy[k][j] -= factor * identity_copy[i][j]
-
-        return Matrix(identity_copy)
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/Matrix.py
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/Matrix.py b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/Matrix.py
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/Matrix.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,59 +0,0 @@
-firstMatrix = []
-secondMatrix = []
-
-with open('FirstMatrix.txt', 'r') as firstFileMatrix:
-    for line in firstFileMatrix:
-        row = [int(x) for x in line.split()]
-        firstMatrix.append(row)
-
-with open('SecondMatrix.txt', 'r') as secondFileMatrix:
-    for line in secondFileMatrix:
-        row = [int(x) for x in line.split()]
-        secondMatrix.append(row)
-
-matrixSumm = [[0 for _ in range(len(firstMatrix[0]))] for _ in range(len(firstMatrix))]
-matrixSubtract = [[0 for _ in range(len(firstMatrix[0]))] for _ in range(len(firstMatrix))]
-matrixMultiplication = [[0 for _ in range(len(firstMatrix[0]))] for _ in range(len(firstMatrix))]
-reversMatrix = [[0 for _ in range(len(firstMatrix[0]))] for _ in range(len(firstMatrix))]
-matrixDivision = [[0 for _ in range(len(firstMatrix[0]))] for _ in range(len(firstMatrix))]
-
-for row in range(len(firstMatrix)):
-    rowList = []
-    for column in range(len(firstMatrix[0])):
-        firstMatrix[row][column] = int(firstMatrix[row][column])
-        secondMatrix[row][column] = int(secondMatrix[row][column])
-        matrixSumm[row][column] = firstMatrix[row][column] + secondMatrix[row][column]
-        matrixSubtract[row][column] = firstMatrix[row][column] - secondMatrix[row][column]
-
-for i in range(len(secondMatrix)):
-    row = []
-    for j in range(len(secondMatrix[0])):
-        row.append(secondMatrix[j][i])
-    reversMatrix[i] = (row)
-
-for i in range(len(firstMatrix)):
-    for j in range(len(secondMatrix[0])):
-        for k in range(len(secondMatrix)):
-            matrixMultiplication[i][j] += firstMatrix[i][k] * secondMatrix[k][j]
-            matrixDivision[i][j] += firstMatrix[i][k] * reversMatrix[k][j]
-
-with open('OutputMatrix.txt', 'w') as file:
-    file.write("Matrix Sum:\n")
-    #    file.write(str (matrixSumm))
-    for row in range(len(matrixSumm)):
-        file.write(str(matrixSumm[row]) + '\n')
-
-    file.write("Matrix Subtract:\n")
-    #   file.write(str (matrixSubtract))
-    for row in range(len(matrixSubtract)):
-        file.write(str(matrixSubtract[row]) + '\n')
-
-    file.write("Matrix Multiplication:\n")
-    #   file.write(str (matrixMultiplication))
-    for row in range(len(matrixMultiplication)):
-        file.write(str(matrixMultiplication[row]) + '\n')
-
-    file.write("Matrix Division:\n")
-    #   file.write(str (matrixDivision))
-    for row in range(len(matrixDivision)):
-        file.write(str(matrixDivision[row]) + '\n')
Index: BohdanFariyon/3.Marix/matrix_rez.txt
===================================================================
diff --git a/BohdanFariyon/3.Marix/matrix_rez.txt b/BohdanFariyon/3.Marix/matrix_rez.txt
deleted file mode 100644
--- a/BohdanFariyon/3.Marix/matrix_rez.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,6 +0,0 @@
-Multiplication:
-[1.0, 0.0]
-[0.0, 1.0]
-Division:
-[1.0, 0.0]
-[0.0, 1.0]
Index: ZlatomyraSeverylova/matrix/matrix without np.py
===================================================================
diff --git a/ZlatomyraSeverylova/matrix/matrix without np.py b/ZlatomyraSeverylova/matrix/matrix without np.py
deleted file mode 100644
--- a/ZlatomyraSeverylova/matrix/matrix without np.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,175 +0,0 @@
-INPUT = 'input_matrix.txt'
-OUT = 'out_matrix.txt'
-FILE_NOT_FOUND_ERROR = 'File not found'
-INDEX_ERROR = 'list index ot of range'
-ZERO_DIVISION_ERROR = 'division by zero'
-TYPE_ERROR = 'NoneType object is not subscriptable'
-try:
-    with open(INPUT, 'r') as f:
-        matrix = [[int(num) for num in line.split()] for line in f]
-        matrix_a = []
-        matrix_b = []
-
-        for x in range(len(matrix)):
-            if matrix[x] == []:
-                matrix_b = matrix[x + 1:]
-                break
-            matrix_a.append(matrix[x])
-except FileNotFoundError:
-    print(FILE_NOT_FOUND_ERROR)
-    exit(-1)
-
-
-def matrix_sum(matrix_a, matrix_b):
-    try:
-        return [[matrix_a[i][j] + matrix_b[i][j] for j in range(len(matrix_a[0]))] for i in range(len(matrix_a))]
-    except IndexError:
-        print(INDEX_ERROR)
-        exit(-1)
-
-
-def matrix_diff(matrix_a, matrix_b):
-    try:
-        return [[matrix_a[i][j] - matrix_b[i][j] for j in range(len(matrix_a[0]))] for i in range(len(matrix_a))]
-    except IndexError:
-        print(INDEX_ERROR)
-        exit(-1)
-
-
-def matrix_multiply(matrix_a, matrix_b):
-    try:
-        result = []
-        for i in range(len(matrix_a)):
-            row = []
-            for j in range(len(matrix_b[0])):
-                product = 0
-                for v in range(len(matrix_a[i])):
-                    product += matrix_a[i][v] * matrix_b[v][j]
-                row.append(product)
-            result.append(row)
-        return result
-    except TypeError:
-        print(TYPE_ERROR)
-        exit(-1)
-
-
-def transpose_matrix(matrix):
-    transpose = list(map(list, zip(*matrix)))
-    return transpose
-
-
-def minor_matrix(matrix, i, j):
-    return [row[:j] + row[j+1:] for row in (matrix[:i] + matrix[i + 1:])]
-
-
-def determinant_matrix(matrix):
-    if len(matrix) == 2:
-        return matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0]
-    determinant = 0
-    for c in range(len(matrix)):
-        try:
-            determinant += ((-1)**c) * matrix[0][c] * determinant_matrix(minor_matrix(matrix, 0, c))
-        except IndexError:
-            print(INDEX_ERROR)
-            exit(-1)
-    return determinant
-
-
-def inverse_matrix(matrix):
-        determinant = determinant_matrix(matrix)
-        if determinant == 0:
-            return
-
-        if len(matrix) == 2:
-            return [[matrix[1][1] / determinant, -1 * matrix[0][1] / determinant],
-                    [-1 * matrix[1][0] / determinant, matrix[0][0] / determinant]]
-        cofactors = []
-        for r in range(len(matrix)):
-            cofactor_row = []
-            for c in range(len(matrix)):
-                minor = minor_matrix(matrix, r, c)
-                cofactor_row.append(((-1)**(r+c)) * determinant_matrix(minor))
-            cofactors.append(cofactor_row)
-
-        result = transpose_matrix(cofactors)
-
-        for r in range(len(result)):
-            for c in range(len(result)):
-                try:
-                    result[r][c] = result[r][c]/determinant
-                except ZeroDivisionError:
-                    print(ZERO_DIVISION_ERROR)
-                    exit(-1)
-        return result
-
-
-def division(matrix_a, matrix_b):
-    return matrix_multiply(matrix_a, inverse_matrix(matrix_b))
-
-
-
-try:
-    with open(OUT, 'w') as f:
-        f.write("Sum of matrix: ")
-        f.write(str(matrix_sum(matrix_a, matrix_b)))
-        f.write("\n")
-        f.write("Difference of matrix: ")
-        f.write(str(matrix_diff(matrix_a, matrix_b)))
-        f.write("\n")
-        f.write("Multiply of matrix: ")
-        f.write(str(matrix_multiply(matrix_a, matrix_b)))
-        f.write("\n")
-        f.write("Division of matrix: ")
-        f.write(str(division(matrix_a, matrix_b)))
-except FileNotFoundError:
-    print(FILE_NOT_FOUND_ERROR)
-    exit(-1)
-
-'''    def transpose_matrix(self):
-        transpose = list(map(list, zip(*self.matrix_b)))
-        return transpose
-
-
-    def minor_matrix(self, i, j):
-        return [row[:j] + row[j+1:] for row in (self.matrix_b[:i] + self.matrix_b[i + 1:])]
-
-
-    def determinant_matrix(self):
-        if len(self.matrix_b) == 2:
-            return self.matrix_b[0][0] * self.matrix_b[1][1] - self.matrix_b[0][1] * self.matrix_b[1][0]
-        determinant = 0
-        for c in range(len(self.matrix_b)):
-            try:
-                determinant += ((-1)**c) * self.matrix_b[0][c] * self.determinant_matrix(self.minor_matrix(self.matrix_b, 0, c))
-            except IndexError:
-                print(INDEX_ERROR)
-                exit(-1)
-        return determinant
-
-
-    def inverse_matrix(self):
-        determinant = self.determinant_matrix(self.matrix_b)
-        if determinant == 0:
-            return
-
-        if len(self.matrix_b) == 2:
-            return [[self.matrix_b[1][1] / determinant, -1 * self.matrix_b[0][1] / determinant],
-                    [-1 * self.matrix_b[1][0] / determinant, self.matrix_b[0][0] / determinant]]
-        cofactors = []
-        for r in range(len(self.matrix_b)):
-            cofactor_row = []
-            for c in range(len(self.matrix_b)):
-                minor = self.minor_matrix(self.matrix_b, r, c)
-                cofactor_row.append(((-1)**(r+c)) * self.determinant_matrix(minor))
-            cofactors.append(cofactor_row)
-
-        result = self.transpose_matrix(cofactors)
-
-        for r in range(len(result)):
-            for c in range(len(result)):
-                try:
-                    result[r][c] = result[r][c]/determinant
-                except ZeroDivisionError:
-                    print(ZERO_DIVISION_ERROR)
-                    exit(-1)
-        return result'''
Index: AnastasiaPelyno/Vector_class/vector_one.txt
===================================================================
diff --git a/AnastasiaPelyno/Vector_class/vector_one.txt b/AnastasiaPelyno/Vector_class/vector_one.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Vector_class/vector_one.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 1 1
Index: BohdanFariyon/3.Marix/Matrix().py
===================================================================
diff --git a/BohdanFariyon/3.Marix/Matrix().py b/BohdanFariyon/3.Marix/Matrix().py
deleted file mode 100644
--- a/BohdanFariyon/3.Marix/Matrix().py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,94 +0,0 @@
-def multiplication(matrix_first, matrix_second):
-    matrix_multiplication = []
-    for i in range(len(matrix_first)):
-        row = []
-        for j in range(len(matrix_second[0])):
-            number = 0
-            for k in range(max(len(matrix_first[0]), len(matrix_second))):
-                number += float(matrix_first[i][k]) * float(matrix_second[k][j])
-            row.append(round(number, 3))
-        matrix_multiplication.append(row)
-    return matrix_multiplication
-
-MATRIX_FIRST_INPUT = 'matrix1.txt'
-MATRIX_SECOND_INPUT = 'matrix2.txt'
-MATRIX_RESULT = 'matrix_rez.txt'
-mode = 'r'
-
-matrix_first = []
-matrix_second = []
-
-try:
-    with open(MATRIX_FIRST_INPUT, mode) as lines:
-        lines = lines.readlines()
-
-        for line in lines:
-            row = [float(x) for x in line.split()]
-            matrix_first.append(row)
-except FileNotFoundError:
-    print("File " + MATRIX_FIRST_INPUT + "no found")
-    exit(-1)
-
-try:
-    with open(MATRIX_SECOND_INPUT, mode) as lines:
-        lines = lines.readlines()
-
-        for line in lines:
-            row = [float(x) for x in line.split()]
-            matrix_second.append(row)
-except FileNotFoundError:
-    print("File " + MATRIX_SECOND_INPUT + "no found")
-    exit(-1)
-
-try:
-    matrix_multiplication = multiplication(matrix_first, matrix_second)
-
-    with open(MATRIX_RESULT, 'w') as file:
-        file.write("Multiplication:\n")
-        for row in matrix_multiplication:
-            file.write(str(row)+'\n')
-except IndexError:
-    print("The number of columns of the first matrix is not equal to the number of rows of the second matrix: " + str(len(matrix_first[0])) + '!=' + str(len(matrix_second)))
-
-
-
-len_matrix_second = max(len(matrix_second),len(matrix_second[0]))
-try:
-    inverse_matrix_second = []
-    if len_matrix_second == 1:
-        inverse_matrix_second = [[1 / matrix_second[0][0]]]
-
-    elif len_matrix_second == 2:
-        det = matrix_second[0][0] * matrix_second[1][1] - matrix_second[0][1] * matrix_second[1][0]
-        inverse_matrix_second = [[matrix_second[1][1] / det, -matrix_second[0][1] / det],
-                [-matrix_second[1][0] / det, matrix_second[0][0] / det]]
-
-    elif len_matrix_second == 3:
-        det = (matrix_second[0][0] * ((matrix_second[1][1] * matrix_second[2][2]) - (matrix_second[1][2] * matrix_second[2][1])) -
-                matrix_second[0][1] * ((matrix_second[1][0] * matrix_second[2][2]) - (matrix_second[1][2] * matrix_second[2][0])) +
-                matrix_second[0][2] * ((matrix_second[1][0] * matrix_second[2][1]) - (matrix_second[1][1] * matrix_second[2][0])))
-
-        inverse_matrix_second = [[0] * 3 for _ in range(3)]
-        inverse_matrix_second[0][0] = (matrix_second[1][1] * matrix_second[2][2] - matrix_second[1][2] * matrix_second[2][1]) / det
-        inverse_matrix_second[0][1] = (matrix_second[0][2] * matrix_second[2][1] - matrix_second[0][1] * matrix_second[2][2]) / det
-        inverse_matrix_second[0][2] = (matrix_second[0][1] * matrix_second[1][2] - matrix_second[0][2] * matrix_second[1][1]) / det
-        inverse_matrix_second[1][0] = (matrix_second[1][2] * matrix_second[2][0] - matrix_second[1][0] * matrix_second[2][2]) / det
-        inverse_matrix_second[1][1] = (matrix_second[0][0] * matrix_second[2][2] - matrix_second[0][2] * matrix_second[2][0]) / det
-        inverse_matrix_second[1][2] = (matrix_second[0][2] * matrix_second[1][0] - matrix_second[0][0] * matrix_second[1][2]) / det
-        inverse_matrix_second[2][0] = (matrix_second[1][0] * matrix_second[2][1] - matrix_second[1][1] * matrix_second[2][0]) / det
-        inverse_matrix_second[2][1] = (matrix_second[0][1] * matrix_second[2][0] - matrix_second[0][0] * matrix_second[2][1]) / det
-        inverse_matrix_second[2][2] = (matrix_second[0][0] * matrix_second[1][1] - matrix_second[0][1] * matrix_second[1][0]) / det
-    matrix_division = multiplication(matrix_first, inverse_matrix_second)
-
-    with open(MATRIX_RESULT, 'a') as file:
-        file.write("Division:\n")
-        for row in matrix_division:
-            file.write(str(row)+'\n')
-except ZeroDivisionError:
-    print("The matrix does not have an inverse because the determinant is zero.")
-    exit(-1)
-except IndexError:
-    print("The number of columns of the first matrix is not equal to the number of rows of the second inverse matrix: " + str(len(matrix_first[0])) + '!=' + str(len(inverse_matrix_second)))
-    exit(-1)
-
-
Index: RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/result.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/result.txt b/RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/result.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Matrix/result.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-0	0	0
-0	0	0
-0	0	0
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/SecondVector.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/SecondVector.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/SecondVector.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/SecondVector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-5 4 3 2 1
\ No newline at end of file
Index: MaksymPetukhov/vectorTask4/constants.py
===================================================================
diff --git a/MaksymPetukhov/vectorTask4/constants.py b/MaksymPetukhov/vectorTask4/constants.py
deleted file mode 100644
--- a/MaksymPetukhov/vectorTask4/constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-INPUT_FILE = "input.txt"
-OUTPUT_FILE = "output.txt"
-SEPARATOR = ','
Index: FlysYurii/Task(Fibonacci)/constants.py
===================================================================
diff --git a/FlysYurii/Task(Fibonacci)/constants.py b/FlysYurii/Task(Fibonacci)/constants.py
deleted file mode 100644
--- a/FlysYurii/Task(Fibonacci)/constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-INPUT = 'input.txt'
-OUTPUT = 'output.txt'
-NUMBER = 'number.txt'
\ No newline at end of file
Index: Oles Prokopiv/homework/matrix(add, subtract)/input.txt
===================================================================
diff --git a/Oles Prokopiv/homework/matrix(add, subtract)/input.txt b/Oles Prokopiv/homework/matrix(add, subtract)/input.txt
deleted file mode 100644
--- a/Oles Prokopiv/homework/matrix(add, subtract)/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-3 3 3
-4 4 4
-6 5 7
Index: ZlatomyraSeverylova/classMatrix/main.py
===================================================================
diff --git a/ZlatomyraSeverylova/classMatrix/main.py b/ZlatomyraSeverylova/classMatrix/main.py
deleted file mode 100644
--- a/ZlatomyraSeverylova/classMatrix/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,11 +0,0 @@
-INPUT_MATRIX_A = 'input_matrix_a.txt'
-INPUT_MATRIX_B = 'input_matrix_b.txt'
-OUT_MATRIX = 'out_matrix.txt'
-
-from class_matrix import Matrix
-matrix_a  = Matrix.read(INPUT_MATRIX_A)
-matrix_b  = Matrix.read(INPUT_MATRIX_B)
-Matrix.write(OUT_MATRIX, 'Sum of matrix: ', matrix_a.__add__(matrix_b))
-Matrix.write(OUT_MATRIX, 'Difference of matrix: ', matrix_a.__sub__(matrix_b))
-Matrix.write(OUT_MATRIX, 'Multiplication of matrix: ', matrix_a.__mul__(matrix_b))
-Matrix.write(OUT_MATRIX, 'Division of matrix: ', matrix_a.__truediv__(matrix_b))
Index: FlysYurii/Task(Fibonacci)/number.txt
===================================================================
diff --git a/FlysYurii/Task(Fibonacci)/number.txt b/FlysYurii/Task(Fibonacci)/number.txt
deleted file mode 100644
--- a/FlysYurii/Task(Fibonacci)/number.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-100
\ No newline at end of file
Index: LevPredko/MatrixVectorWithClass_3/output2.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_3/output2.txt b/LevPredko/MatrixVectorWithClass_3/output2.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_3/output2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-0 0 0
--5 4 2
-2 2 4
Index: BoikoStepan/Matrix_Classes/FMatrix.txt
===================================================================
diff --git a/BoikoStepan/Matrix_Classes/FMatrix.txt b/BoikoStepan/Matrix_Classes/FMatrix.txt
deleted file mode 100644
--- a/BoikoStepan/Matrix_Classes/FMatrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-4 4 4
-3 3 3
-3 3 3
\ No newline at end of file
Index: BohdanFariyon/2.Vector/VectorFirst.txt
===================================================================
diff --git a/BohdanFariyon/2.Vector/VectorFirst.txt b/BohdanFariyon/2.Vector/VectorFirst.txt
deleted file mode 100644
--- a/BohdanFariyon/2.Vector/VectorFirst.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1, 2, 3
\ No newline at end of file
Index: BoikoStepan/Vector_Classes/SVector.txt
===================================================================
diff --git a/BoikoStepan/Vector_Classes/SVector.txt b/BoikoStepan/Vector_Classes/SVector.txt
deleted file mode 100644
--- a/BoikoStepan/Vector_Classes/SVector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-0 0 0 0 0
\ No newline at end of file
Index: Oles Prokopiv/homework/vector/main.py
===================================================================
diff --git a/Oles Prokopiv/homework/vector/main.py b/Oles Prokopiv/homework/vector/main.py
deleted file mode 100644
--- a/Oles Prokopiv/homework/vector/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,30 +0,0 @@
-INPUT_FILE = "input.txt"
-INPUT_FILE_SECOND = "input_second.txt"
-OUTPUT_FILE = "output.txt"
-
-A_vector = [float]
-B_vector = [float]
-
-try:
-    with open(INPUT_FILE, "r") as file:
-        A = list(map(float, file.readline().split()))
-    with open(INPUT_FILE_SECOND, "r") as file:
-        B = list(map(float, file.readline().split()))
-    with open('output.txt', 'w') as output_file:
-        output_file.write("First vector: {}\n".format(A))
-        output_file.write("Second vector: {}\n".format(B))
-        addition = [A_vector + B_vector for A_vector, B_vector in zip(A, B)]
-        subtraction = [A_vector - B_vector for A_vector, B_vector in zip(A, B)]
-        multiplication = [A_vector * B_vector for A_vector, B_vector in zip(A, B)]
-        division = [A_vector / B_vector for A_vector, B_vector in zip(A, B)]
-        output_file.write("Addition vectors: {}\n".format(addition))
-        output_file.write("Subtraction vectors: {}\n".format(subtraction))
-        output_file.write("Multiplication vectors: {}\n".format(multiplication))
-        output_file.write("Division vectors: {}\n".format(division))
-except FileNotFoundError:
-    print('File not found.')
-
-
-
-
-
Index: Oleh Kaliuzhnyi/MatrixProject/MatrixTwo.txt
===================================================================
diff --git a/Oleh Kaliuzhnyi/MatrixProject/MatrixTwo.txt b/Oleh Kaliuzhnyi/MatrixProject/MatrixTwo.txt
deleted file mode 100644
--- a/Oleh Kaliuzhnyi/MatrixProject/MatrixTwo.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-0 0 0
-0 0 0
-0 0 0
\ No newline at end of file
Index: RostyslavPasternak/Homework/Vector_Matrix/class/standart/Vector.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/Vector.py b/RostyslavPasternak/Homework/Vector_Matrix/class/standart/Vector.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/Vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,68 +0,0 @@
-import random
-from RostyslavPasternak.Homework.Vector_Matrix.Exception import InvalidSize, InvalidType
-class Vector:
-    def __init__(self, vector):
-        self.vector = vector
-        self.size = len(vector)
-    @classmethod
-    def random(cls,size, a=1, b=9):
-        vector = [random.randint(a, b) for _ in range(size)]
-
-        return cls(vector)
-    @classmethod
-    def from_file(cls, file_name, separator=" "):
-        with open(file_name, 'r') as readFile:
-            line = readFile.readline()
-
-        vector = line.split(separator)
-        vector = [float(i) for i in vector if i.isdigit()]
-        return cls(vector)
-    def __str__(self):
-        return self.vector.__str__()
-    def str_to_file(self, file_name="result.txt"):
-        with open(file_name, 'w') as writeFile:
-            writeFile.write(str(self))
-    def append(self, new_element):
-        self.vector.append(new_element)
-        self.size += 1
-    def __add__(self, other):
-        if isinstance(other, Vector):
-            if self.size != other.size:
-                raise InvalidSize()
-            result = [self.vector[i] + other.vector[i] for i in range(self.size)]
-            return Vector(result)
-        elif isinstance(other, (int, float)):
-            result = [self.vector[i] + other for i in range(self.size)]
-            return Vector(result)
-        raise InvalidType()
-
-    def __sub__(self, other):
-        if isinstance(other, Vector):
-            if self.size != other.size:
-                raise InvalidSize()
-            result = [self.vector[i] - other.vector[i] for i in range(self.size)]
-            return Vector(result)
-        elif isinstance(other, (int, float)):
-            result = [self.vector[i] - other for i in range(self.size)]
-            return Vector(result)
-        raise InvalidType()
-    def __mul__(self, other):
-        if isinstance(other, Vector):
-            if self.size != other.size:
-                raise InvalidSize()
-            result = [self.vector[i] * other.vector[i] for i in range(self.size)]
-            return Vector(result)
-        elif isinstance(other, (int, float)):
-            result = [self.vector[i] * other for i in range(self.size)]
-            return Vector(result)
-        raise InvalidType()
-    def __truediv__(self, other):
-        if isinstance(other, Vector):
-            if self.size != other.size:
-                raise InvalidSize()
-            result = [self.vector[i] / other.vector[i] for i in range(self.size)]
-            return Vector(result)
-        elif isinstance(other, (int, float)):
-            result = [self.vector[i] / other for i in range(self.size)]
-            return Vector(result)
-        raise InvalidType()
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/SecondMatrix.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/SecondMatrix.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/SecondMatrix.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/SecondMatrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-4 5 3
-2 3 1
\ No newline at end of file
Index: MaksymPetukhov/matrixTask3/input.txt
===================================================================
diff --git a/MaksymPetukhov/matrixTask3/input.txt b/MaksymPetukhov/matrixTask3/input.txt
deleted file mode 100644
--- a/MaksymPetukhov/matrixTask3/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,7 +0,0 @@
-1,0,0
-0,1,0
-0,0,1
-
-1,0,0
-0,1,0
-0,0,0
\ No newline at end of file
Index: yuliamalynovska/homework/task1 fibonacci/constant.py
===================================================================
diff --git a/yuliamalynovska/homework/task1 fibonacci/constant.py b/yuliamalynovska/homework/task1 fibonacci/constant.py
deleted file mode 100644
--- a/yuliamalynovska/homework/task1 fibonacci/constant.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-NAME_INPUT = 'input.txt'
-NAME_OUTPUT = 'output.txt'
Index: DarynaKovalchuk/Vector_class/Vector_class.py
===================================================================
diff --git a/DarynaKovalchuk/Vector_class/Vector_class.py b/DarynaKovalchuk/Vector_class/Vector_class.py
deleted file mode 100644
--- a/DarynaKovalchuk/Vector_class/Vector_class.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,78 +0,0 @@
-class DetIsZero(Exception):
-    def init(self, message="vector is zero"):
-        self.message = message
-        super().init(self.message)
-
-class VectorOperations:
-    def init(self, first_vector, second_vector):
-        self.first_vector = first_vector
-        self.second_vector = second_vector
-
-    def add_vectors(self):
-        return [x + y for x, y in zip(self.first_vector, self.second_vector)]
-
-    def subtract_vectors(self):
-        return [x - y for x, y in zip(self.first_vector, self.second_vector)]
-
-    def multiply_vectors(self):
-        return [x * y for x, y in zip(self.first_vector, self.second_vector)]
-
-    def divide_vectors(self):
-        return [x / y for x, y in zip(self.first_vector, self.second_vector)]
-
-
-    def add(self, other):
-        return [x + y for x, y in zip(self.first_vector, other.second_vector)]
-
-    def sub(self, other):
-        return [x - y for x, y in zip(self.first_vector, other.second_vector)]
-
-    def mul(self, other):
-        return [x * y for x, y in zip(self.first_vector, other.second_vector)]
-
-    def truediv(self, other):
-        if any(y == 0 for y in other.second_vector):
-            raise DetIsZero("division by zero")
-        return [x / y for x, y in zip(self.first_vector, other.second_vector)]
-
-def read_vectors_from_file(filename):
-    try:
-        with open(filename, 'r') as file:
-            lines = file.readlines()
-            if len(lines) < 2:
-                raise Exception("file is empty")
-            first_vector = [float(x) for x in lines[0].split()]
-            vector2 = [float(x) for x in lines[1].split()]
-        return first_vector, vector2
-    except FileNotFoundError:
-        raise Exception("file not found")
-    except Exception as e:
-        print(e)
-        return None, None
-
-input_filename = 'input.txt'
-output_filename = 'output.txt'
-first_vector, second_vector = read_vectors_from_file(input_filename)
-
-if first_vector is not None and second_vector is not None:
-    vector_operations = VectorOperations(first_vector, second_vector)
-
-    try:
-        result_addition = vector_operations + vector_operations
-        result_subtract = vector_operations - vector_operations
-        result_multiply = vector_operations * vector_operations
-        result_divide = vector_operations / vector_operations
-
-
-        print("addition:", result_addition)
-        print("subtract:", result_subtract)
-        print("multiply:", result_multiply)
-        print("divide:", result_divide)
-
-        with open(output_filename, 'a') as file:
-            file.write("addition: {}\n".format(result_addition))
-            file.write("subtract: {}\n".format(result_subtract))
-            file.write("multiply: {}\n".format(result_multiply))
-            file.write("divide: {}\n".format(result_divide))
-    except DetIsZero as e:
-        print(e)
Index: BoikoStepan/Vector/Vector.py
===================================================================
diff --git a/BoikoStepan/Vector/Vector.py b/BoikoStepan/Vector/Vector.py
deleted file mode 100644
--- a/BoikoStepan/Vector/Vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,46 +0,0 @@
-f_Vector = []
-s_Vector = []
-
-with open('Fvector.txt', 'r') as firstFileVector:
-    for line in firstFileVector:
-        values = line.strip().split()
-        for value in values:
-            f_Vector.append(int(value))
-
-with open('Svector.txt', 'r') as secondFileVector:
-    for line in secondFileVector:
-        values = line.strip().split()
-        for value in values:
-            s_Vector.append(int(value))
-
- 
-
-vector_Sum = []
-for i in range(len(f_Vector)):
-    vector_Sum.append(f_Vector[i] + s_Vector[i])
-print("Vector sum:\n",vector_Sum)
-
-vector_Sub = []
-for i in range(len(f_Vector)):
-    vector_Sub.append(f_Vector[i] - s_Vector[i])
-print("Vector sub:\n",vector_Sub)
-
-vector_Mult = []
-for i in range(len(f_Vector)):
-    vector_Mult.append(f_Vector[i] * s_Vector[i])
-print("Vector skalar:\n",vector_Mult)
-
-vector_Div = []
-for i in range(len(f_Vector)):
-    vector_Div.append(f_Vector[i] / s_Vector[i])
-print("Vector div:\n",vector_Div)
-
-with open('OutputVector.txt', 'w') as file:
-    file.write("Vector Sum:\n")
-    file.write(str(vector_Sum) + '\n')
-    file.write("Vector Sub:\n")
-    file.write(str(vector_Sub) + '\n')
-    file.write("Vector Skalar:\n")
-    file.write(str(vector_Mult) + '\n')
-    file.write("Vector Div:\n")
-    file.write(str(vector_Div) + '\n')
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/OutputVector.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/OutputVector.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/OutputVector.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/OutputVector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,9 +0,0 @@
-Vector Sum: first vector + second vector
-1 2 3 4 5  + 5 4 3 2 1 
-6 6 6 6 6 
-Vector Subtract:
--4 -2 0 2 4 
-Vector Multiplication:
-[5, 8, 9, 8, 5]
-Vector Division:
-[0.2, 0.5, 1.0, 2.0, 5.0]
\ No newline at end of file
Index: MaksymPetukhov/fibonacciNumbers3/write.txt
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers3/write.txt b/MaksymPetukhov/fibonacciNumbers3/write.txt
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers3/write.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[100.0, 200.0, 300.0, 500.0]
\ No newline at end of file
Index: yuliamalynovska/homework/classVector/input2.txt
===================================================================
diff --git a/yuliamalynovska/homework/classVector/input2.txt b/yuliamalynovska/homework/classVector/input2.txt
deleted file mode 100644
--- a/yuliamalynovska/homework/classVector/input2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-2 3 1
\ No newline at end of file
Index: RostyslavPasternak/Homework/Vector_Matrix/class/numpy/matrix2.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/matrix2.txt b/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/matrix2.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/matrix2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 112
-2 12 99
-12 2 2
\ No newline at end of file
Index: FlysYurii/Task(Fibonacci)/output.txt
===================================================================
diff --git a/FlysYurii/Task(Fibonacci)/output.txt b/FlysYurii/Task(Fibonacci)/output.txt
deleted file mode 100644
--- a/FlysYurii/Task(Fibonacci)/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-Result:
- 6 10 16 26 42 68 
\ No newline at end of file
Index: ZlatomyraSeverylova/vector/out_vector.txt
===================================================================
diff --git a/ZlatomyraSeverylova/vector/out_vector.txt b/ZlatomyraSeverylova/vector/out_vector.txt
deleted file mode 100644
--- a/ZlatomyraSeverylova/vector/out_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-Sum of vector: 
\ No newline at end of file
Index: ZlatomyraSeverylova/classVector/input_vector_b.txt
===================================================================
diff --git a/ZlatomyraSeverylova/classVector/input_vector_b.txt b/ZlatomyraSeverylova/classVector/input_vector_b.txt
deleted file mode 100644
--- a/ZlatomyraSeverylova/classVector/input_vector_b.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-5 3 4
Index: LevPredko/MatrixVectorWithClass_2/Vector2.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_2/Vector2.txt b/LevPredko/MatrixVectorWithClass_2/Vector2.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_2/Vector2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-5 -1 4
\ No newline at end of file
Index: RostyslavPasternak/Homework/Vector_Matrix/class/standart/matrix2.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/matrix2.txt b/RostyslavPasternak/Homework/Vector_Matrix/class/standart/matrix2.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/matrix2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-0 0 0
-0 0 0
-0 0 0
\ No newline at end of file
Index: MaksymPetukhov/fibonacciNumbers2/read.txt
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers2/read.txt b/MaksymPetukhov/fibonacciNumbers2/read.txt
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers2/read.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-100,200
\ No newline at end of file
Index: FlysYurii/Task(Matrix and vectors)/matrix_B.txt
===================================================================
diff --git a/FlysYurii/Task(Matrix and vectors)/matrix_B.txt b/FlysYurii/Task(Matrix and vectors)/matrix_B.txt
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and vectors)/matrix_B.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-1 0
-0 1
\ No newline at end of file
Index: yuliamalynovska/homework/classMatrix/input1.txt
===================================================================
diff --git a/yuliamalynovska/homework/classMatrix/input1.txt b/yuliamalynovska/homework/classMatrix/input1.txt
deleted file mode 100644
--- a/yuliamalynovska/homework/classMatrix/input1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-10 7 5
-2 10 5
Index: AnastasiaPelyno/Vector_Operations/main.py
===================================================================
diff --git a/AnastasiaPelyno/Vector_Operations/main.py b/AnastasiaPelyno/Vector_Operations/main.py
deleted file mode 100644
--- a/AnastasiaPelyno/Vector_Operations/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,33 +0,0 @@
-VECTORS_FILE='vectors.txt'
-FILE_ERROR='File Not Found'
-
-def smth(action,res):
-    file.write(action)
-    for i in res:
-        file.write(str(i) + ' ')
-    file.write('\n')
-try:
-    with open(VECTORS_FILE,'r') as file:
-        lines=file.readlines()
-        first_vector=[int(x) for x in lines[0].split()]
-        vector2=[int(x) for x in lines[1].split()]
-except FileNotFoundError:
-    print(FILE_ERROR)
-
-add_res=[first_vector[i]+vector2[i] for i in range(len(first_vector))]
-sub_res=[first_vector[i]-vector2[i] for i in range(len(first_vector))]
-mult_res=[first_vector[i]*vector2[i] for i in range(len(first_vector))]
-try:
-    div_res=[first_vector[i]/vector2[i] for i in range(len(first_vector))]
-except ZeroDivisionError:
-    print('Division by zero')
-RESULT_FILE='result.txt'
-try:
-    with open(RESULT_FILE,'w') as file:
-        smth("Addition:\n",add_res)
-        smth("Substraction:\n",sub_res)
-        smth("Multiplication:\n",mult_res)
-        smth("Division:\n",div_res)
-
-except FileNotFoundError:
-    print(FILE_ERROR)
Index: RostyslavPasternak/Homework/Abstract_class/Shape/Square.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Abstract_class/Shape/Square.py b/RostyslavPasternak/Homework/Abstract_class/Shape/Square.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Abstract_class/Shape/Square.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,9 +0,0 @@
-from Rectangle import Rectangle
-from RostyslavPasternak.Homework.Abstract_class.Shape.Colors import *
-
-class Square(Rectangle):
-    def __init__(self, side: float, color: Color):
-        Rectangle.__init__(self, side, side, color)
-
-    def __str__(self):
-        return f"Side: {self.first_side}\nColor: {self.color}\nPerimeter: {self.get_perimeter()}\nArea: {self.get_area()}"
Index: RostyslavPasternak/Homework/Vector_Matrix/class/numpy/main.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/main.py b/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/main.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,112 +0,0 @@
-from Matrix import Matrix
-from Vector import Vector
-import numpy as np
-def fill_matrix():
-    while True:
-        choice = int(input("Fill in the matrix\n\t1. Random\n\t2. From file\n\t3. From the keyboard\n "))
-        if choice == 1:
-            row = int(input("Input row: "))
-            column = int(input("Input column: "))
-            return Matrix.random(row, column)
-        elif choice == 2:
-            file_name = input("File name: ")
-            return Matrix.from_file(file_name)
-        elif choice == 3:
-            row = int(input("Input row: "))
-            column = int(input("Input column: "))
-
-            matrix_np = np.empty((row, column), dtype=int)
-
-            for i in range(row):
-                for j in range(column):
-                    matrix_np[i][j] = int(input(f"Element [{i + 1}][{j + 1}]: "))
-            return Matrix(matrix_np)
-        else:
-            print("Invalid choice. Please select 1, 2, or 3.")
-
-def task_matrix():
-    matrix = fill_matrix()
-    print(matrix)
-    while True:
-        choice = int(input("Second element\n\t1. Vector\n\t2. Number\n"))
-        if choice == 1:
-            other = fill_matrix()
-            break
-        if choice == 2:
-            other = int(input("Number: "))
-            break
-
-    while True:
-        result = None
-        operator = int(input("1. Add\n2. Subtraction\n3. Multiplication\n4. Division\n5. Inverse\n0. Cancel\n"))
-        if operator == 1:
-            result = matrix + other
-        elif operator == 2:
-            result = matrix - other
-        elif operator == 3:
-            result = matrix * other
-        elif operator == 4:
-            result = matrix / other
-        elif operator == 5:
-            result = matrix.inverse()
-        else:
-            break
-        print(result)
-        result.str_to_file()
-
-def fill_vector():
-    while True:
-        choice = int(input("How to fill a vector\n\t1. From file\n\t2. From random\n\t3. From the keyboard\n\t0. Cancel\n"))
-        if choice == 1:
-            fileName = input("File name: ")
-            return Vector.from_file(fileName)
-        elif choice == 2:
-            size = int(input("Size: "))
-            return Vector.random(size)
-        elif choice == 3:
-            size = int(input("Input size: "))
-
-            vector_np = np.empty((size), dtype=int)
-
-            for i in range(size):
-                vector_np[i] = int(input(f"Element [{i + 1}]: "))
-            return Vector(vector_np)
-        else:
-            break
-
-def task_vector():
-    vector = fill_vector()
-    print(vector)
-    while True:
-        choice = int(input("Second element\n\t1. Vector\n\t2. Number\n"))
-        if choice == 1:
-            other = fill_vector()
-            break
-        if choice == 2:
-            other = int(input("Number: "))
-            break
-
-    while True:
-        result = None
-        operator = int(input("1. add\n2. subtraction\n3. multiplication\n4. division\n0. Cancel\n"))
-        if operator == 1:
-            result = vector + other
-        elif operator == 2:
-            result = vector - other
-        elif operator == 3:
-            result = vector * other
-        elif operator == 4:
-            result = vector / other
-        else:
-            break
-        print(result)
-        result.str_to_file()
-
-while True:
-    choice = int(input("1. Matrix\n2. Vector\n0. Cancel \n"))
-    if choice == 1:
-        task_matrix()
-    elif choice == 2:
-        task_vector()
-    else:
-        break
Index: LevPredko/MatrixVectorWithoutClass/Constants.py
===================================================================
diff --git a/LevPredko/MatrixVectorWithoutClass/Constants.py b/LevPredko/MatrixVectorWithoutClass/Constants.py
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithoutClass/Constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,5 +0,0 @@
-Input_Matrix_1 = "Matrix1read.txt"
-Input_Matrix_2 = "Matrix2read.txt"
-Input_Vector_1 = "Vector1read.txt"
-Input_Vector_2 = "Vector2read.txt"
-SEPARATOR = " "
\ No newline at end of file
Index: MariaKravchuk/Matrix/main.py
===================================================================
diff --git a/MariaKravchuk/Matrix/main.py b/MariaKravchuk/Matrix/main.py
deleted file mode 100644
--- a/MariaKravchuk/Matrix/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,123 +0,0 @@
-def input_matrix_file(name_file):
-    matrix = []
-    try:
-        with open(name_file, 'r') as file:
-            for line in file:
-                row = [int(x) for x in line.strip().split()]
-                matrix.append(row)
-    except FileNotFoundError:
-        print(f"Error: File '{name_file}' not found.")
-        return None
-
-    return matrix  
-
-def result_in_file(matrix, file_name, label):
-    with open(file_name, 'a') as file:
-        file.write(label + ":\n")
-        for row in matrix:
-            file.write(' '.join(map(str, row)) + '\n')
-        file.write('\n')
-
-def add_matrices(first_matrix, second_matrix):
-    if len(first_matrix) != len(second_matrix) or len(first_matrix[0]) != len(second_matrix[0]):
-        return None
-    result = []
-    for i in range(len(first_matrix)):
-        row = []
-        for j in range(len(first_matrix[0])):
-            row.append(first_matrix[i][j] + second_matrix[i][j])
-        result.append(row)
-    return result
-
-def sub_matrices(first_matrix, second_matrix):
-    if len(first_matrix) != len(second_matrix) or len(first_matrix[0]) != len(second_matrix[0]):
-        return None
-    result = []
-    for i in range(len(first_matrix)):
-        row = []
-        for j in range(len(first_matrix[0])):
-            row.append(first_matrix[i][j] - second_matrix[i][j])
-        result.append(row)
-    return result
-
-def multiply_matrices(first_matrix, second_matrix):
-    m = len(first_matrix)
-    n = len(first_matrix[0])
-    p = len(second_matrix[0])
-
-    result = [[0 for _ in range(p)] for _ in range(m)]
-
-    for i in range(m):
-        for j in range(p):
-            for k in range(n):
-                result[i][j] += first_matrix[i][k] * second_matrix[k][j]
-
-    return result
-
-def inverse_matrix(matrix):
-    n = len(matrix)
-
-    augmented_matrix = [row + [1 if i == j else 0 for j in range(n)] for i, row in enumerate(matrix)]
-
-    for i in range(n):
-        divisor = augmented_matrix[i][i]
-        for j in range(2 * n):
-            augmented_matrix[i][j] /= divisor
-
-        for k in range(n):
-            if k != i:
-                factor = augmented_matrix[k][i]
-                for j in range(2 * n):
-                    augmented_matrix[k][j] -= factor * augmented_matrix[i][j]
-
-    inverse = [row[n:] for row in augmented_matrix]
-
-    return inverse
-
-def divide_matrices(first_matrix, second_matrix):
-    if len(first_matrix[0]) != len(second_matrix):
-        return None
-
-    if all(all(element == 0 for element in row) for row in second_matrix):
-        print("Error: Division by zero matrix is not allowed.")
-        return None
-
-    result = multiply_matrices(first_matrix, inverse_matrix(second_matrix))
-
-    return result
-
-first_matrix = input_matrix_file('matrix1.txt')
-second_matrix = input_matrix_file('matrix2.txt')
-
-if first_matrix is not None and second_matrix is not None:
-    with open("output.txt", 'w') as file:
-        file.write("")
-
-    result_in_file(first_matrix, "output.txt", "Matrix 1")
-    result_in_file(second_matrix, "output.txt", "Matrix 2")
-
-    result_matrix = multiply_matrices(first_matrix, second_matrix)
-    if result_matrix is not None:
-        result_in_file(result_matrix, "output.txt", "Multiplication")
-    else:
-        print("Multiplication is not possible.")
-
-    add_matrix = add_matrices(first_matrix, second_matrix)
-    if add_matrix is not None:
-        result_in_file(add_matrix, "output.txt", "Addition")
-    else:
-        print("Addition is not possible.")
-
-    sub_matrix = sub_matrices(first_matrix, second_matrix)
-    if sub_matrix is not None:
-        result_in_file(sub_matrix, "output.txt", "Subtraction")
-    else:
-        print("Subtraction is not possible.")
-
-    div_matrix = divide_matrices(first_matrix, second_matrix)
-    if div_matrix is not None:
-        result_in_file(div_matrix, "output.txt", "Division")
-    else:
-        print("Division is not possible.")
-else:
-    print("Matrix loading failed. Check the input files.")
Index: RostyslavPasternak/Homework/Vector_Matrix/class/standart/matrix.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/matrix.txt b/RostyslavPasternak/Homework/Vector_Matrix/class/standart/matrix.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/matrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-2 5 7
-6 3 4
-5 -2 -3
\ No newline at end of file
Index: .idea/modules.xml
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
deleted file mode 100644
--- a/.idea/modules.xml	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/pma23.iml" filepath="$PROJECT_DIR$/.idea/pma23.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: RostyslavPasternak/Homework/Vector_Matrix/class/numpy/matrix.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/matrix.txt b/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/matrix.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/matrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 112
-2 12 99
-12 2 2
\ No newline at end of file
Index: yuliamalynovska/homework/classVector/main.py
===================================================================
diff --git a/yuliamalynovska/homework/classVector/main.py b/yuliamalynovska/homework/classVector/main.py
deleted file mode 100644
--- a/yuliamalynovska/homework/classVector/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,31 +0,0 @@
-from Vector import Vector
-import const
-vectorA = Vector.read(const.INPUT_FILE1)
-vectorB = Vector.read(const.INPUT_FILE2)
-Vector.write(vectorA, vectorB, const.OUTPUT_FILE)
-# try:
-#     with open(const.INPUT_FILE1, 'r') as inpV:
-#         vectA = inpV.readline().split()
-#         vectA = [float(i) for i in vectA if i.isdigit()]
-#     with open(const.INPUT_FILE2, 'r') as inpV2:
-#         vectB = inpV2.readline().split()
-#         vectB = [float(i) for i in vectB if i.isdigit()]
-# except FileNotFoundError:
-#     print(const.FILE_NOT_FOUND)
-#     exit(-1)
-# vectorA = Vector(vectA)
-# vectorB = Vector(vectB)
-#
-# with open(const.OUTPUT_FILE, 'w') as out:
-#     out.write("Addition:\n")
-#     out.write(str(vectorA + vectorB)+'\n')
-#
-#     out.write("Subtraction:\n")
-#     out.write(str(vectorA - vectorB) + '\n')
-#
-#     out.write("Multiplication:\n")
-#     out.write(str(vectorA * vectorB) + '\n')
-#
-#     out.write("Division:\n")
-#     out.write(str(vectorA / vectorB) + '\n')
-#
\ No newline at end of file
Index: AnastasiaPelyno/MATRIX_CLASS/result.txt
===================================================================
diff --git a/AnastasiaPelyno/MATRIX_CLASS/result.txt b/AnastasiaPelyno/MATRIX_CLASS/result.txt
deleted file mode 100644
--- a/AnastasiaPelyno/MATRIX_CLASS/result.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,52 +0,0 @@
-Addition:
-[1, 2, 3]
-[3, 2, 1]
-[2, 1, 3]
-+
-[4, 5, 6]
-[6, 5, 4]
-[4, 6, 5]
-=
-[5, 7, 9]
-[9, 7, 5]
-[6, 7, 8]
---------------------------------------------------
-Substraction:
-[1, 2, 3]
-[3, 2, 1]
-[2, 1, 3]
--
-[4, 5, 6]
-[6, 5, 4]
-[4, 6, 5]
-=
-[-3, -3, -3]
-[-3, -3, -3]
-[-2, -5, -2]
---------------------------------------------------
-Multiplying:
-[1, 2, 3]
-[3, 2, 1]
-[2, 1, 3]
-*
-[4, 5, 6]
-[6, 5, 4]
-[4, 6, 5]
-=
-[28, 33, 29]
-[28, 31, 31]
-[26, 33, 31]
---------------------------------------------------
-Division:
-[1, 2, 3]
-[3, 2, 1]
-[2, 1, 3]
-/
-[4, 5, 6]
-[6, 5, 4]
-[4, 6, 5]
-=
-[0.7000000000000001, -0.30000000000000004, 0.0]
-[-0.30000000000000004, 0.7, -5.551115123125783e-17]
-[1.2000000000000002, 0.19999999999999996, -1.0]
---------------------------------------------------
Index: MaksymPetukhov/vectorTask2/output.txt
===================================================================
diff --git a/MaksymPetukhov/vectorTask2/output.txt b/MaksymPetukhov/vectorTask2/output.txt
deleted file mode 100644
--- a/MaksymPetukhov/vectorTask2/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-Addition:
-[5.0, 7.0, 9.0]
-Subtraction:
-[-3.0, -3.0, -3.0]
-Multiplication:
-[4.0, 10.0, 18.0]
-Division:
-[0.25, 0.4, 0.5]
Index: AnastasiaPelyno/Matrix_multiply_divide/matrix_2.txt
===================================================================
diff --git a/AnastasiaPelyno/Matrix_multiply_divide/matrix_2.txt b/AnastasiaPelyno/Matrix_multiply_divide/matrix_2.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Matrix_multiply_divide/matrix_2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-0 0 0
-0 0 0
-0 0 0
\ No newline at end of file
Index: MaksymPetukhov/fibonacciNumbers/read.txt
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers/read.txt b/MaksymPetukhov/fibonacciNumbers/read.txt
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers/read.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1,2
\ No newline at end of file
Index: RostyslavPasternak/Homework/Vector_Matrix/class/standart/vector2.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/vector2.txt b/RostyslavPasternak/Homework/Vector_Matrix/class/standart/vector2.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/vector2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-123 2 123 123 2 1
\ No newline at end of file
Index: Oles Prokopiv/homework/vector/input_second.txt
===================================================================
diff --git a/Oles Prokopiv/homework/vector/input_second.txt b/Oles Prokopiv/homework/vector/input_second.txt
deleted file mode 100644
--- a/Oles Prokopiv/homework/vector/input_second.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-4 2 1
Index: RostyslavPasternak/Homework/Abstract_class/Shape/Colors.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Abstract_class/Shape/Colors.py b/RostyslavPasternak/Homework/Abstract_class/Shape/Colors.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Abstract_class/Shape/Colors.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,23 +0,0 @@
-class Color:
-    def __init__(self, color):
-        self.color = color
-
-    def __str__(self):
-        return self.color
-
-class Red(Color):
-    def __init__(self):
-        super().__init__("red")
-
-class Green(Color):
-    def __init__(self):
-        super().__init__("green")
-
-class Blue(Color):
-    def __init__(self):
-        super().__init__("blue")
-
-class Yellow(Color):
-    def __init__(self):
-        super().__init__("yellow")
-
Index: Trachyk Yura-Maksym/Homework/Fibonacci/output.txt
===================================================================
diff --git a/Trachyk Yura-Maksym/Homework/Fibonacci/output.txt b/Trachyk Yura-Maksym/Homework/Fibonacci/output.txt
deleted file mode 100644
--- a/Trachyk Yura-Maksym/Homework/Fibonacci/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[2, 3, 5, 7, 5, 8, 12, 12, 13, 20]
\ No newline at end of file
Index: nastia_vasylyk/University/input.txt
===================================================================
diff --git a/nastia_vasylyk/University/input.txt b/nastia_vasylyk/University/input.txt
deleted file mode 100644
--- a/nastia_vasylyk/University/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-23 44
\ No newline at end of file
Index: anastasiia_trushchak/Practical/Practical_01/output.txt
===================================================================
diff --git a/anastasiia_trushchak/Practical/Practical_01/output.txt b/anastasiia_trushchak/Practical/Practical_01/output.txt
deleted file mode 100644
--- a/anastasiia_trushchak/Practical/Practical_01/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-['2', '4', 6.0, 10.0, 16.0, 26.0, 42.0, 68.0, 110.0, 178.0]
\ No newline at end of file
Index: AnastasiaPelyno/Matrix_multiply_divide/result.txt
===================================================================
diff --git a/AnastasiaPelyno/Matrix_multiply_divide/result.txt b/AnastasiaPelyno/Matrix_multiply_divide/result.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Matrix_multiply_divide/result.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,21 +0,0 @@
-Multiplying:
-[1, 2, 3]
-[3, 2, 1]
-[2, 1, 3]
-*
-[0, 0, 0]
-[0, 0, 0]
-[0, 0, 0]
-=
-[0, 0, 0]
-[0, 0, 0]
-[0, 0, 0]
-Dividing:
-[1, 2, 3]
-[3, 2, 1]
-[2, 1, 3]
-/
-[0, 0, 0]
-[0, 0, 0]
-[0, 0, 0]
-=
Index: FlysYurii/Task(Fibonacci)/input.txt
===================================================================
diff --git a/FlysYurii/Task(Fibonacci)/input.txt b/FlysYurii/Task(Fibonacci)/input.txt
deleted file mode 100644
--- a/FlysYurii/Task(Fibonacci)/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-6 10
\ No newline at end of file
Index: AnastasiaPelyno/Matrix_Plus_Minus/result.txt
===================================================================
diff --git a/AnastasiaPelyno/Matrix_Plus_Minus/result.txt b/AnastasiaPelyno/Matrix_Plus_Minus/result.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Matrix_Plus_Minus/result.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,24 +0,0 @@
-Addition:
-[1, 2, 3]
-[4, 5, 6]
-[7, 8, 9]
-+
-[9, 8, 7]
-[6, 5, 4]
-[3, 2, 1]
-=
-[10, 10, 10]
-[10, 10, 10]
-[10, 10, 10]
-Substraction
-[1, 2, 3]
-[4, 5, 6]
-[7, 8, 9]
--
-[9, 8, 7]
-[6, 5, 4]
-[3, 2, 1]
-=
-[-8, -6, -4]
-[-2, 0, 2]
-[4, 6, 8]
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/Vector.py
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/Vector.py b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/Vector.py
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/Vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,54 +0,0 @@
-with open('FirstVector.txt', 'r') as data:
-    firstVector = data.readline().split()
-
-with open('SecondVector.txt', 'r') as data:
-    secondVector = data.readline().split()
-
-firstVector = [int(num) for num in firstVector]
-secondVector = [int(num) for num in secondVector]
-
-vectorSumm = []
-vectorSubtract = []
-vectorMultiplication = []
-vectorDivision = []
-
-vectorSumm = [x + y for x, y in zip(firstVector, secondVector)]
-vectorSubtract = [x - y for x, y in zip(firstVector, secondVector)]
-vectorMultiplication = [x * y for x, y in zip(firstVector, secondVector)]
-vectorDivision = [x / y for x, y in zip(firstVector, secondVector)]
-
-
-with open('OutputVector.txt', 'w') as file:
-    file.write("Vector Sum: ")
-    #    file.write(str (vectorSumm))
-    file.write("first vector + second vector\n")
-    for row in range(len(vectorSumm)):
-        file.write(str(firstVector[row]) + ' ')
-
-    file.write(' + ')
-
-    for row in range(len(vectorSumm)):
-        file.write(str(secondVector[row]) + ' ')
-
-    file.write("\n")
-
-    for row in range(len(vectorSumm)):
-        file.write(str(vectorSumm[row]) + ' ')
-
-    file.write("\n")
-
-    file.write("Vector Subtract:\n")
-    #   file.write(str (vectorSubtract))
-    for row in range(len(vectorSubtract)):
-        file.write(str(vectorSubtract[row])+' ')
-
-    file.write("\n")
-
-    file.write("Vector Multiplication:\n")
-    file.write(str (vectorMultiplication))
-
-    file.write("\n")
-
-    file.write("Vector Division:\n")
-    file.write(str (vectorDivision))
-
Index: yuliamalynovska/homework/classVector/Vector.py
===================================================================
diff --git a/yuliamalynovska/homework/classVector/Vector.py b/yuliamalynovska/homework/classVector/Vector.py
deleted file mode 100644
--- a/yuliamalynovska/homework/classVector/Vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,60 +0,0 @@
-import const
-
-
-class Vector:
-    def __init__(self, array):
-        self.array = array
-
-    def __add__(self, other):
-        result = []
-        for i in range(len(self.array)):
-            result.append(self.array[i] + other.array[i])
-        return result
-
-    def __sub__(self, other):
-        result = []
-        for i in range(len(self.array)):
-            result.append(self.array[i] - other.array[i])
-        return result
-
-    def __truediv__(self, other):
-        result = []
-        try:
-            for i in range(len(self.array)):
-                result.append(self.array[i] / other.array[i])
-            return result
-        except ZeroDivisionError:
-            print(const.ZERO_DIVISION)
-            exit(-1)
-
-    def __mul__(self, other):
-        result = []
-        for i in range(len(self.array)):
-            result.append(self.array[i] * other.array[i])
-        return result
-
-    @staticmethod
-    def read(file_name):
-        try:
-            with open(file_name, 'r') as inpV:
-                vect = inpV.readline().split()
-                vect = [float(i) for i in vect if i.isdigit()]
-        except FileNotFoundError:
-            print(const.FILE_NOT_FOUND)
-            exit(-1)
-        return Vector(vect)
-    @staticmethod
-    def write(vector1, vector2, file_name):
-        with open(file_name, 'w') as out:
-            out.write("Addition:\n")
-            out.write(str(vector1 + vector2) + '\n')
-
-            out.write("Subtraction:\n")
-            out.write(str(vector1 - vector2) + '\n')
-
-            out.write("Multiplication:\n")
-            out.write(str(vector1 * vector2) + '\n')
-
-            out.write("Division:\n")
-            out.write(str(vector1 / vector2) + '\n')
-
Index: MariaKravchuk/Vector/first_vector.txt
===================================================================
diff --git a/MariaKravchuk/Vector/first_vector.txt b/MariaKravchuk/Vector/first_vector.txt
deleted file mode 100644
--- a/MariaKravchuk/Vector/first_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 4 7
Index: MaksymPetukhov/matrixTask5/constants.py
===================================================================
diff --git a/MaksymPetukhov/matrixTask5/constants.py b/MaksymPetukhov/matrixTask5/constants.py
deleted file mode 100644
--- a/MaksymPetukhov/matrixTask5/constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-INPUT_FILE = "input.txt"
-OUTPUT_FILE = "output.txt"
-SEPARATOR = ','
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/output_matrix.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/output_matrix.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/output_matrix.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/output_matrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-[[10, 10, 10], [10, 10, 10], [10, 10, 10]]
-[[-8, -6, -4], [-2, 0, 2], [4, 6, 8]]
-[[30, 24, 18], [84, 69, 54], [138, 114, 90]]
-[[1.4444444444444444, 2.025, 3.642857142857143], [3.2777777777777777, 4.5, 7.821428571428571], [5.111111111111111, 6.975, 12.0]]
-[[10, 10, 10], [10, 10, 10], [10, 10, 10]]
-[[-8, -6, -4], [-2, 0, 2], [4, 6, 8]]
-[[30, 24, 18], [84, 69, 54], [138, 114, 90]]
-[[1.4444444444444444, 2.025, 3.642857142857143], [3.2777777777777777, 4.5, 7.821428571428571], [5.111111111111111, 6.975, 12.0]]
Index: nastia_vasylyk/University/Fibonacci.py
===================================================================
diff --git a/nastia_vasylyk/University/Fibonacci.py b/nastia_vasylyk/University/Fibonacci.py
deleted file mode 100644
--- a/nastia_vasylyk/University/Fibonacci.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,13 +0,0 @@
-CONSTANTAA = 'input.txt'
-with open(CONSTANTAA, 'r') as f:
-    array = f.read().split()
-
-array = [float(i) for i in array if i.isdigit()]
-
-for i in range(2, 10):
-    array.append((array[i-1]) + (array[i-2]))
-
-CONST = 'output.txt'
-with open (CONST, 'w') as file:
-    file.write(str(array))
-# Hi my name is Bot
\ No newline at end of file
Index: RostyslavPasternak/Homework/Vector_Matrix/Exception.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/Exception.py b/RostyslavPasternak/Homework/Vector_Matrix/Exception.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/Exception.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,9 +0,0 @@
-class InvalidSize(ValueError):
-    def __init__(self):
-        super().__init__("Size error")
-class InvalidType(ValueError):
-    def __init__(self):
-        super().__init__("type error")
-class InvalidMatrixInverse(ValueError):
-    def __init__(self):
-        super().__init__("Inverse error")
Index: ZlatomyraSeverylova/classVector/class_vector.py
===================================================================
diff --git a/ZlatomyraSeverylova/classVector/class_vector.py b/ZlatomyraSeverylova/classVector/class_vector.py
deleted file mode 100644
--- a/ZlatomyraSeverylova/classVector/class_vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,51 +0,0 @@
-ZERO_DIVISION_ERROR = 'division by zero'
-FILE_NOT_FOUND_ERROR = 'No such file or directory'
-
-class Vector:
-    def __init__(self, vector):
-        self.vector = vector
-
-    def __add__(self, other):
-        result = []
-        for i in range(len(self.vector)):
-            result.append(self.vector[i] + other.vector[i])
-        return result
-
-    def __sub__(self, other):
-        result = []
-        for i in range(len(self.vector)):
-            result.append(self.vector[i] + other.vector[i])
-        return result
-
-    def __mul__(self, other):
-        result = []
-        for i in range(len(self.vector)):
-            result.append(self.vector[i] * other.vector[i])
-        return result
-
-    def __truediv__(self, other):
-        result = []
-        for i in range(len(self.vector)):
-            result.append(self.vector[i] / other.vector[i])
-        return result
-
-    def read(file_name):
-        try:
-            with open(file_name, 'r') as file:
-                line = file.readline().split()
-                vector = [float(num) for num in line]
-            return Vector(vector)
-        except FileNotFoundError:
-            print(FILE_NOT_FOUND_ERROR)
-            exit(-1)
-
-
-    def write(filename, text, vector):
-        try:
-            with open(filename, 'a') as file:
-                file.write(text)
-                file.write(str(vector))
-                file.write("\n")
-        except FileNotFoundError:
-            print(FILE_NOT_FOUND_ERROR)
-            exit(-1)
Index: anastasiia_trushchak/Homework/Homework_01/Vector/main.py
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_01/Vector/main.py b/anastasiia_trushchak/Homework/Homework_01/Vector/main.py
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_01/Vector/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,27 +0,0 @@
-import numpy as np
-data1 = np.loadtxt("vector1.txt", dtype="i", delimiter=' ')
-data2 = np.loadtxt("vector2.txt", dtype="i", delimiter=' ')
-def sumVect(data1, data2):
-    return [i + j for i, j in zip(data1, data2)]
-def substractVect(data1, data2):
-    return [i - j for i, j in zip(data1, data2)]
-def multiVect(data1, data2):
-    return [i * j for i, j in zip(data1, data2)]
-def divideVect(data1, data2):
-    return [i / j for i, j in zip(data1, data2)]
-sum_result = sumVect(data1,data2)
-substract_result= substractVect(data1, data2)
-multi_result = multiVect(data1, data2)
-divide_result = divideVect(data1, data2)
-with open("output.txt", "w") as f:
-    f.write("Sum Result:\n")
-    f.write(" ".join(map(str, sum_result)) + "\n")
-
-    f.write("Subtraction Result:\n")
-    f.write(" ".join(map(str, substract_result)) + "\n")
-
-    f.write("Multiplication Result:\n")
-    f.write(" ".join(map(str, multi_result)) + "\n")
-
-    f.write("Division Result:\n")
-    f.write(" ".join(map(str, divide_result)) + "\n")
\ No newline at end of file
Index: anastasiia_trushchak/Homework/Homework_02/MatrixClass/main.py
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_02/MatrixClass/main.py b/anastasiia_trushchak/Homework/Homework_02/MatrixClass/main.py
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_02/MatrixClass/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,217 +0,0 @@
-class MatrixOperations:
-
-    def __init__(self, matrix):
-        self.matrix = matrix
-
-    def __add__(self, matrix2):
-        return [[k + n for k, n in zip(i, j)] for i, j in zip(self.matrix, matrix2.matrix)]
-
-
-    def __sub__(self, matrix2):
-        return [[k - n for k, n in zip(i, j)] for i, j in zip(self.matrix, matrix2.matrix)]
-
-
-    def __mul__(self, matrix2):
-        m, n, p = len(self.matrix), len(matrix2.matrix), len(matrix2.matrix[0])
-        if n != len(matrix2.matrix):
-            raise ValueError("Number of columns in the first matrix must be equal to the number of rows in the second matrix.")
-        result = []
-        for l_row in range(m):
-            temp_row = []
-            for k in range(p):
-                sum1 = 0
-                for l_col in range(n):
-                    sum1 = sum1 + (self.matrix[l_row][l_col] * matrix2.matrix[l_col][k])
-                temp_row.append(sum1)
-            result.append(temp_row)
-        return result
-
-
-    def transpose_matrix(self):
-        return [[self.matrix[j][i] for j in range(len(self.matrix))] for i in range(len(self.matrix[0]))]
-
-
-    def __truediv__(self, scalar):
-        return [[element / scalar for element in row] for row in self.matrix]
-
-
-import copy
-
-# class MatrixOperationsExtended(MatrixOperations):
-#
-#     def divide_matrix_by_determinant(matrix, determinant):
-#         return [[element / determinant for element in row] for row in matrix]
-#
-#
-#     def __add__(self, matrix2):
-#         return MatrixOperations.sum_matrix(self, matrix2)
-#
-#
-#     def __sub__(self, matrix2):
-#         return MatrixOperations.subtract_matrix(self, matrix2)
-#
-#
-#     def __mul__(self, matrix1, matrix2):
-#         return MatrixOperations.multiply_matrix(matrix1, matrix2)
-#
-#     def __truediv__(self, matrix, scalar):
-#         return MatrixOperations.divide_matrix_by_scalar(matrix, scalar)
-
-INPUT_MATRIX_first = "inputMatrix1.txt"
-INPUT_MATRIX_second = "inputMatrix2.txt"
-
-try:
-    firstMatrix = []
-    with open(INPUT_MATRIX_first, "r") as firstFileMatrix:
-        for line in firstFileMatrix:
-            row = [int(x) for x in line.split()]
-            firstMatrix.append(row)
-except FileNotFoundError:
-    print("File " + INPUT_MATRIX_first + " not found")
-    exit(-1)
-
-try:
-    secondMatrix = []
-    with open(INPUT_MATRIX_second, "r") as secondFileMatrix:
-        for line in secondFileMatrix:
-            row = [int(x) for x in line.split()]
-            secondMatrix.append(row)
-except FileNotFoundError:
-    print("File " + INPUT_MATRIX_second + " not found")
-    exit(-1)
-
-# sum_result = sum_matrix(firstMatrix, secondMatrix)
-# substruct_result = substruct_matrix(firstMatrix, secondMatrix)
-
-
-# sum_result = MatrixOperations.sum_matrix(firstMatrix, secondMatrix)
-# substruct_result = MatrixOperations.subtract_matrix(firstMatrix, secondMatrix)
-# multiply_result = MatrixOperations.multiply_matrix(firstMatrix, secondMatrix)
-
-firstMatrixClass = MatrixOperations(firstMatrix)
-secondMatrixClass = MatrixOperations(secondMatrix)
-
-
-sum_result = firstMatrixClass + secondMatrixClass
-substract_result = firstMatrixClass - secondMatrixClass
-multiply_result = firstMatrixClass * secondMatrixClass
-
-m = len(firstMatrix)
-n = len(secondMatrix)
-p = len(secondMatrix[0])
-if m != n:
-    raise ValueError("Matrices have different numbers of rows.")
-resultMatrix = []
-for l_row in range(m):
-    temp_row = []
-    for k in range(p):
-        sum1 = 0
-        for l_col in range(n):
-            sum1 = sum1 + (firstMatrix[l_row][l_col] * secondMatrix[l_col][k])
-
-        temp_row.append(sum1)
-    resultMatrix.append(temp_row)
-
-# division of the matrix
-secondMatrixd = []
-with open(INPUT_MATRIX_second, "r") as secondFileMatrix:
-    for line in secondFileMatrix:
-        row = [int(x) for x in line.split()]
-        secondMatrixd.append(row)
-
-
-def copy_matrix(matrix):
-    return [row[:] for row in matrix]
-
-
-def determinant_fast(matrix):
-    n = len(matrix)
-    AM = copy_matrix(matrix)
-    for fd in range(n):
-        for i in range(fd + 1, n):
-            if AM[fd][fd] == 0:
-                return 0.0
-            crScaler = AM[i][fd] / AM[fd][fd]
-            for j in range(n):
-                AM[i][j] = AM[i][j] - crScaler * AM[fd][j]
-    product = 1.0
-    for i in range(n):
-        product *= AM[i][i]
-    return product
-
-
-determinant_result = determinant_fast(secondMatrixd)
-
-
-def algebraic_cofactor(matrix, row, col):
-    submatrix = [row[:col] + row[col + 1:] for row in (matrix[:row] + matrix[row + 1:])]
-    sign = (-1) ** (row + col)
-    return sign * determinant_fast(submatrix)
-
-
-determinant_result = determinant_fast(secondMatrix)
-
-algebraic_result = []
-for i in range(n):
-    temp_row = []
-    for j in range(p):
-        temp_row.append(algebraic_cofactor(secondMatrix, i, j))
-    algebraic_result.append(temp_row)
-
-
-def transpose(matrix):
-    rows = len(matrix)
-    cols = len(matrix[0])
-    transposed_matrix = [[matrix[j][i] for j in range(rows)] for i in range(cols)]
-    return transposed_matrix
-
-
-transposed_algebraic_result = transpose(algebraic_result)
-print(transposed_algebraic_result)
-
-try:
-    def divide_matrix_by_determinant(matrix, determinant_result):
-        rows = len(matrix)
-        cols = len(matrix[0])
-        last_matrix = []
-        for i in range(rows):
-            temp_row = []
-            for j in range(cols):
-                temp_row.append(matrix[i][j] / determinant_result)
-            last_matrix.append(temp_row)
-        return last_matrix
-except ZeroDivisionError:
-    print("Error: Division by zero (determinant is zero).")
-last_matrix = divide_matrix_by_determinant(transposed_algebraic_result, determinant_result)
-firstMatrix = []
-with open(INPUT_MATRIX_first, "r") as firstFileMatrix:
-    for line in firstFileMatrix:
-        row = [int(x) for x in line.split()]
-        firstMatrix.append(row)
-k = len(firstMatrix)
-y = len(secondMatrix)
-s = len(secondMatrix[0])
-resultMatrixdva = []
-for l_row in range(k):
-    temp_row = []
-    for k in range(s):
-        sum1 = 0
-        for l_col in range(y):
-            sum1 = sum1 + (firstMatrix[l_row][l_col] * last_matrix[l_col][k])
-
-        temp_row.append(sum1)
-    resultMatrixdva.append(temp_row)
-
-with open("output.txt", "w") as f:
-    f.write("Result of Multiplication:\n")
-    for row in resultMatrix:
-        f.write(" ".join(map(str, row)) + "\n")
-    f.write("\nResult of Division:\n")
-    for row in resultMatrixdva:
-        f.write(" ".join(map(str, row)) + "\n")
-    f.write("\nSum Result:\n")
-    for row in sum_result:
-        f.write(" ".join(map(str, row)) + "\n")
-    f.write("\nSubtraction Result:\n")
-    for row in substract_result:
-        f.write(" ".join(map(str, row)) + "\n")
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/second_maitrix.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/second_maitrix.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/second_maitrix.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/second_maitrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-9 8 7
-6 5 4
-3 2 1
\ No newline at end of file
Index: FlysYurii/Task(Dictionary)/Dictionary.py
===================================================================
diff --git a/FlysYurii/Task(Dictionary)/Dictionary.py b/FlysYurii/Task(Dictionary)/Dictionary.py
deleted file mode 100644
--- a/FlysYurii/Task(Dictionary)/Dictionary.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,18 +0,0 @@
-Iphones = {
-    'iPhone 12': {'Price': 699},
-    'iPhone 14 Pro': {'Price': 999},
-    'iPhone 15 Pro': {'Price': 1099}
-}
-print("Start:")
-for iphone, info in Iphones.items():
-    print(f"Model: {iphone}, Price: ${info['Price']}")
-print('\n')
-Iphones.pop('iPhone 12')
-print("After removing iPhone 12:")
-for iphone, info in Iphones.items():
-    print(f"Model: {iphone}, Price: ${info['Price']}")
-print('\n')
-Iphones.update({'iPhone 14 Pro': {'Price': 9999}})
-print("After updating price of iPhone 14:")
-for iphone, info in Iphones.items():
-    print(f"Model: {iphone}, Price: ${info['Price']}")
Index: RostyslavPasternak/Homework/Abstract_class/Shape/main.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Abstract_class/Shape/main.py b/RostyslavPasternak/Homework/Abstract_class/Shape/main.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Abstract_class/Shape/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,14 +0,0 @@
-from Rectangle import *
-from Square import *
-from Сircle import *
-from Colors import *
-
-print("--------------Rectangle--------------")
-rectangle = Rectangle(12, 23, Red())
-print(rectangle)
-print("--------------Square--------------")
-square = Square(12, Green())
-print(square)
-print("--------------Circle--------------")
-circle = Circle(12, Blue())
-print(circle)
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/FirstMatrix.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/FirstMatrix.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/FirstMatrix.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/FirstMatrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-3 2 3
-5 1 4
-3 4 2
\ No newline at end of file
Index: MariaKravchuk/Matrix/output.txt
===================================================================
diff --git a/MariaKravchuk/Matrix/output.txt b/MariaKravchuk/Matrix/output.txt
deleted file mode 100644
--- a/MariaKravchuk/Matrix/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,25 +0,0 @@
-Matrix 1:
-1 2 3
-8 7 5
-9 4 5
-
-Matrix 2:
-0 0 0
-0 0 0
-0 0 0
-
-Multiplication:
-0 0 0
-0 0 0
-0 0 0
-
-Addition:
-1 2 3
-8 7 5
-9 4 5
-
-Subtraction:
-1 2 3
-8 7 5
-9 4 5
-
Index: BohdanFariyon/4.ClassVector/VectorResult.txt
===================================================================
diff --git a/BohdanFariyon/4.ClassVector/VectorResult.txt b/BohdanFariyon/4.ClassVector/VectorResult.txt
deleted file mode 100644
--- a/BohdanFariyon/4.ClassVector/VectorResult.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-Addition:
-[2.0, 4.0, 6.0]
-Subtraction:
-[0.0, 0.0, 0.0]
-Multiplication:
-[1.0, 4.0, 9.0]
-Division:
-[1.0, 1.0, 1.0]
Index: RostyslavPasternak/Homework/Vector_Matrix/class/numpy/vector2.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/vector2.txt b/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/vector2.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/vector2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-123 2 123 123 2 1
\ No newline at end of file
Index: AnastasiaPelyno/Vector_class/result.txt
===================================================================
diff --git a/AnastasiaPelyno/Vector_class/result.txt b/AnastasiaPelyno/Vector_class/result.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Vector_class/result.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-Addition:
-[1, 1, 1] + [1, 2, 3] =[2, 3, 4]
-Substraction:
-[1, 1, 1] - [1, 2, 3] =[0, -1, -2]
-Multiply:
-[1, 1, 1] * [1, 2, 3] =[1, 2, 3]
-Dividing:
-[1, 1, 1] / [1, 2, 3] =[1.0, 0.5, 0.3333333333333333]
Index: BohdanFariyon/5.ClassMatrix/matrix2.txt
===================================================================
diff --git a/BohdanFariyon/5.ClassMatrix/matrix2.txt b/BohdanFariyon/5.ClassMatrix/matrix2.txt
deleted file mode 100644
--- a/BohdanFariyon/5.ClassMatrix/matrix2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-0 0 0
-0 0 0
-0 0 0
\ No newline at end of file
Index: BohdanFariyon/2.Vector/VectorResult.txt
===================================================================
diff --git a/BohdanFariyon/2.Vector/VectorResult.txt b/BohdanFariyon/2.Vector/VectorResult.txt
deleted file mode 100644
--- a/BohdanFariyon/2.Vector/VectorResult.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-���������:
-[2.0, 4.0, 6.0]
-³�������:
-[0.0, 0.0, 0.0]
-��������:
-[1.0, 4.0, 9.0]
-ĳ�����:
-[1.0, 1.0, 1.0]
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Editor-based HTTP Client requests
-/httpRequests/
-# Datasource local storage ignored files
-/dataSources/
-/dataSources.local.xml
Index: FlysYurii/Task(Matrix and Vectors classes)/result_vector.txt
===================================================================
diff --git a/FlysYurii/Task(Matrix and Vectors classes)/result_vector.txt b/FlysYurii/Task(Matrix and Vectors classes)/result_vector.txt
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and Vectors classes)/result_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-92, 13, 42, 50
Index: RostyslavPasternak/Homework/Abstract_class/Shape/Rectangle.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Abstract_class/Shape/Rectangle.py b/RostyslavPasternak/Homework/Abstract_class/Shape/Rectangle.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Abstract_class/Shape/Rectangle.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,27 +0,0 @@
-from RostyslavPasternak.Homework.Abstract_class.Shape.Colors import *
-from Shape import Shape
-
-
-class Rectangle(Shape):
-    def __init__(self, first_side: (float,int), second_side: (float,int), color: Color):
-        super().__init__(color)
-        self.first_side = first_side
-        self.second_side = second_side
-    def __str__(self):
-
-        # return "Sides: " + str(self.first_side) + " and " + str(self.second_side) + "\nColor: " + str(
-        #     self.color) + "\nPerimeter: " + str(self.get_perimeter()) + "\nArea: " + str(self.get_area())
-        # return f"""
-        # Sides: {self.first_side} and {self.second_side}
-        # Color: {self.color}
-        # Perimeter: {self.get_perimeter()}
-        # Area: {self.get_area()}
-        # """
-        return f"Side: {self.first_side} and {self.second_side}\nColor: {self.color}\nPerimeter: {self.get_perimeter()}\nArea: {self.get_area()}"
-
-
-    def get_perimeter(self) -> float:
-        return 2 * (self.first_side + self.second_side)
-
-    def get_area(self) -> float:
-        return self.first_side * self.second_side
Index: yuliamalynovska/homework/classMatrix/Matrix.py
===================================================================
diff --git a/yuliamalynovska/homework/classMatrix/Matrix.py b/yuliamalynovska/homework/classMatrix/Matrix.py
deleted file mode 100644
--- a/yuliamalynovska/homework/classMatrix/Matrix.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,131 +0,0 @@
-import const
-
-
-class Matrix:
-    def __init__(self, array):
-        self.array = array
-
-    def __add__(self, other):
-        result = [[0 for i in range(len(self.array[0]))] for j in range(len(self.array))]
-        for i in range(len(self.array)):
-            for j in range(len(self.array[0])):
-                try:
-                    result[i][j] = self.array[i][j] + other.array[i][j]
-                except IndexError:
-                    print(const.INDEX_ERROR)
-                    exit(-1)
-        return result
-
-    def __sub__(self, other):
-        result = [[0 for i in range(len(self.array[0]))] for j in range(len(self.array))]
-        for i in range(len(self.array)):
-            for j in range(len(self.array[0])):
-                try:
-                    result[i][j] = self.array[i][j] - other.array[i][j]
-                except IndexError:
-                    print(const.INDEX_ERROR)
-                    exit(-1)
-        return result
-
-    def __mul__(self, other):
-        result = [[0 for i in range(len(other.array[0]))] for j in range(len(self.array))]
-        for i in range(len(self.array)):
-            for j in range(len(other.array[0])):
-                for k in range(len(other.array)):
-                    result[i][j] += self.array[i][k] * other.array[k][j]
-        return result
-
-    def __truediv__(self, other):
-        result = [[0 for i in range(len(other.array[0]))] for j in range(len(self.array))]
-        for i in range(len(self.array)):
-            for j in range(len(Matrix.getMatrixInverse(other.array)[0])):
-                for k in range(len(Matrix.getMatrixInverse(other.array))):
-                    result[i][j] += self.array[i][k] * Matrix.getMatrixInverse(other.array)[k][j]
-        return result
-
-    @staticmethod
-    def transposeMatrix(matrix):
-        transpose = [[matrix[j][i] for j in range(len(matrix))] for i in range(len(matrix[0]))]
-        print("\n")
-        for row in transpose:
-            return transpose
-
-    @staticmethod
-    def getMatrixMinor(m, i, j):
-        return [row[:j] + row[j + 1:] for row in (m[:i] + m[i + 1:])]
-
-    @staticmethod
-    def getMatrixDeternminant(matrix):
-        if len(matrix) == 2:
-            return matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0]
-
-        determinant = 0
-        for c in range(len(matrix)):
-            try:
-                determinant += ((-1) ** c) * matrix[0][c] * Matrix.getMatrixDeternminant(Matrix.getMatrixMinor(matrix, 0, c))
-            except IndexError:
-                print(const.INDEX_ERROR)
-                exit(-1)
-        return determinant
-
-    @staticmethod
-    def getMatrixInverse(matrix):
-        determinant = Matrix.getMatrixDeternminant(matrix)
-        try:
-            if len(matrix) == 2:
-                return [[matrix[1][1] / determinant, -1 * matrix[0][1] / determinant],
-                        [-1 * matrix[1][0] / determinant, matrix[0][0] / determinant]]
-        except ZeroDivisionError:
-            print(const.ZERO_DIVISION)
-            exit(-1)
-
-        cofactors = []
-        for r in range(len(matrix)):
-            cofactorRow = []
-            for c in range(len(matrix)):
-                minor = Matrix.getMatrixMinor(matrix, r, c)
-                cofactorRow.append(((-1) ** (r + c)) * Matrix.getMatrixDeternminant(minor))
-            cofactors.append(cofactorRow)
-        cofactors = Matrix.transposeMatrix(cofactors)
-        for r in range(len(cofactors)):
-            for c in range(len(cofactors)):
-                try:
-                    cofactors[r][c] = cofactors[r][c] / determinant
-                except ZeroDivisionError:
-                    print(const.ZERO_DIVISION)
-                    exit(-1)
-        return cofactors
-
-    @staticmethod
-    def read(name_file):
-        a = []
-        try:
-            with open(name_file, 'r') as input_file:
-                k = input_file.readline()
-                while k != '':
-                    temp = k.replace('\n', '').split(" ")
-                    a.append([float(i) for i in temp if i.isdigit()])
-                    k = input_file.readline()
-        except FileNotFoundError:
-            print(const.FILE_NOT_FOUND)
-        return Matrix(a)
-
-    @staticmethod
-    def write(matrix_a, matrix_b, name_file):
-        with open(name_file, 'w') as output_file:
-            output_file.write("Addition: \n")
-            for i in (matrix_a + matrix_b):
-                output_file.write(str(i) + '\n')
-
-            output_file.write("Subtraction: \n")
-            for i in (matrix_a - matrix_b):
-                output_file.write(str(i) + '\n')
-
-            output_file.write("Multiplication: \n")
-            for i in (matrix_a * matrix_b):
-                output_file.write(str(i) + '\n')
-
-            output_file.write("Division: \n")
-            for i in (matrix_a / matrix_b):
-                output_file.write(str(i) + '\n')
-
Index: Oles Prokopiv/homework/matrix(add, subtract)/output.txt
===================================================================
diff --git a/Oles Prokopiv/homework/matrix(add, subtract)/output.txt b/Oles Prokopiv/homework/matrix(add, subtract)/output.txt
deleted file mode 100644
--- a/Oles Prokopiv/homework/matrix(add, subtract)/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-addition:
-[4.0, 5.0, 6.0]
-[6.0, 7.0, 8.0]
-[9.0, 9.0, 12.0]
-subtraction:
-[2, 1, 0]
-[2, 1, 0]
-[3, 1, 2]
Index: BoikoStepan/Vector/Svector.txt
===================================================================
diff --git a/BoikoStepan/Vector/Svector.txt b/BoikoStepan/Vector/Svector.txt
deleted file mode 100644
--- a/BoikoStepan/Vector/Svector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-3 3 3 3 3
\ No newline at end of file
Index: LevPredko/MatrixVectorWithClass_2/Constants.py
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_2/Constants.py b/LevPredko/MatrixVectorWithClass_2/Constants.py
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_2/Constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,5 +0,0 @@
-Input_Matrix_1 = "Matrix1.txt"
-Input_Matrix_2 = "input.txt"
-Input_Vector_1 = "Vector1.txt"
-Input_Vector_2 = "Vector2.txt"
-SEPARATOR = " "
\ No newline at end of file
Index: MaksymPetukhov/fibonacciNumbers3/read.txt
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers3/read.txt b/MaksymPetukhov/fibonacciNumbers3/read.txt
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers3/read.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-100,200
\ No newline at end of file
Index: BohdanFariyon/2.Vector/Vector.py
===================================================================
diff --git a/BohdanFariyon/2.Vector/Vector.py b/BohdanFariyon/2.Vector/Vector.py
deleted file mode 100644
--- a/BohdanFariyon/2.Vector/Vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,48 +0,0 @@
-VECTOR_FIRST_FILE = 'VectorFirst.txt'
-VECTOR_SECOND_FILE = 'VectorSecond.txt'
-VECTOR_FILE_RESULT = 'VectorResult.txt'
-mode = 'r'
-separate = ','
-
-try:
-    with open(VECTOR_FIRST_FILE, mode) as file:
-        vector_first = file.readline().split(separate)
-        vector_first = [float(i) for i in vector_first]
-
-
-except FileNotFoundError:
-    print("Файл " + VECTOR_FIRST_FILE + " не зайдено.")
-    exit(-1)
-
-try:
-    with open(VECTOR_SECOND_FILE, mode) as file:
-        vector_second = file.readline().split(separate)
-        vector_second = [float(i) for i in vector_second]
-except FileNotFoundError:
-    print("Файл " + VECTOR_SECOND_FILE + " не зайдено.")
-    exit(-1)
-
-
-try:
-    sum = []
-    multipliation = []
-    difference = []
-    divide = []
-    for i in range(max(len(vector_first), len(vector_second))):
-        sum.append(vector_first[i] + vector_second[i])
-        difference.append(vector_first[i] - vector_second[i])
-        multipliation.append(vector_first[i] * vector_second[i])
-        divide.append(vector_first[i] / vector_second[i])
-
-    with open(VECTOR_FILE_RESULT, 'w') as file:
-        file.write("Додавання:\n" + str(sum)+'\n')
-        file.write("Віднімання:\n" + str(difference)+'\n')
-        file.write("Множення:\n" + str(multipliation) + '\n')
-        file.write("Ділення:\n" + str(divide) + '\n')
-except IndexError:
-
-    print("Неможливо додати вектори розмірів " + str(len(vector_first)) + " і " + str(len(vector_second)))
-    exit(-1)
-except ZeroDivisionError:
-    print("Неможливо ділити на нуль")
-
Index: Oleh Kaliuzhnyi/VectorProject/VectorMain.py
===================================================================
diff --git a/Oleh Kaliuzhnyi/VectorProject/VectorMain.py b/Oleh Kaliuzhnyi/VectorProject/VectorMain.py
deleted file mode 100644
--- a/Oleh Kaliuzhnyi/VectorProject/VectorMain.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,84 +0,0 @@
-Vector_one_file = "VectorOne.txt"
-Vector_two_file = "VectorTwo.txt"
-
-
-def set_vector(file_name):
-    vector = []
-    with open(file_name) as file:
-        line = file.readline()
-        vector = line.split()
-        vector = [int(i) for i in vector if i.isdigit]
-    return vector
-
-
-def add_vector_to_file(file_name, vector):
-    with open(file_name, "w") as file:
-        for i in range(3):
-            file.write(str(vector[i]))
-            file.write(' ')
-
-
-def sum_vector(vector_file_one, vector_file_two):
-    try:
-        vector_one = set_vector(vector_file_one)
-        vector_two = set_vector(vector_file_two)
-        vector_result = []
-        if len(vector_one) != len(vector_two):
-            raise Exception("Error! Vectors sizes are not equal")
-        size = len(vector_one)
-        for i in range(size):
-            vector_result.append(vector_one[i]+vector_two[i])
-        add_vector_to_file("SumResult.txt", vector_result)
-    except Exception as err:
-        print(err)
-
-
-def subtract_vector(vector_file_one, vector_file_two):
-    try:
-        vector_one = set_vector(vector_file_one)
-        vector_two = set_vector(vector_file_two)
-        vector_result = []
-        if len(vector_one) != len(vector_two):
-            raise Exception("Error! Vectors sizes are not equal")
-        size = len(vector_one)
-        for i in range(size):
-            vector_result.append(vector_one[i] - vector_two[i])
-        add_vector_to_file("SubtractResult.txt", vector_result)
-    except Exception as err:
-        print(err)
-
-
-def multiply_vector(vector_file_one, vector_file_two):
-    try:
-        vector_one = set_vector(vector_file_one)
-        vector_two = set_vector(vector_file_two)
-        vector_result = []
-        if len(vector_one) != len(vector_two):
-            raise Exception("Error! Vectors sizes are not equal")
-        size = len(vector_one)
-        for i in range(size):
-            vector_result.append(vector_one[i] * vector_two[i])
-        add_vector_to_file("MultiplyResult.txt", vector_result)
-    except Exception as err:
-        print(err)
-
-
-def divide_vector(vector_file_one, vector_file_two):
-    try:
-        vector_one = set_vector(vector_file_one)
-        vector_two = set_vector(vector_file_two)
-        vector_result = []
-        if len(vector_one) != len(vector_two):
-            raise Exception("Error! Vectors sizes are not equal")
-        size = len(vector_one)
-        for i in range(size):
-            if vector_two[i] == 0:
-                raise ZeroDivisionError("Error! You can't divide by zero!")
-            vector_result.append(vector_one[i] / vector_two[i])
-        add_vector_to_file("DivideResult.txt", vector_result)
-    except Exception as err:
-        print(err)
-
-
-sum_vector(Vector_one_file, Vector_two_file)
-divide_vector(Vector_one_file, Vector_two_file)
\ No newline at end of file
Index: anastasiia_trushchak/Homework/Homework_02/VectorClass/main.py
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_02/VectorClass/main.py b/anastasiia_trushchak/Homework/Homework_02/VectorClass/main.py
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_02/VectorClass/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,73 +0,0 @@
-class VectorOperations:
-    def __init__(self, *input_vector_files):
-        self.input_vector_files = input_vector_files
-        self.vectors = [self.read_vector(filename) for filename in input_vector_files]
-
-    def read_vector(self, filename):
-        try:
-            vector = []
-            with open(filename, "r") as file_vector:
-                for line in file_vector:
-                    values = line.strip().split()
-                    for value in values:
-                        vector.append(int(value))
-            return vector
-        except FileNotFoundError:
-            print("File " + filename + " not found")
-            exit(-1)
-
-    def sum_vectors(self):
-        result_vector = [0] * len(self.vectors[0])  # Initialize with zeros
-        for vector in self.vectors:
-            result_vector = [i + j for i, j in zip(result_vector, vector)]
-        return result_vector
-
-    def subtract_vectors(self):
-        result_vector = self.vectors[0][:]
-        for vector in self.vectors[1:]:
-            result_vector = [i - j for i, j in zip(result_vector, vector)]
-        return result_vector
-
-    def multiply_vectors(self):
-        result_vector = self.vectors[0][:]
-        for vector in self.vectors[1:]:
-            result_vector = [i * j for i, j in zip(result_vector, vector)]
-        return result_vector
-
-    def divide_vectors(self):
-        try:
-            result_vector = self.vectors[0][:]
-            for vector in self.vectors[1:]:
-                result_vector = [i / j for i, j in zip(result_vector, vector)]
-            return result_vector
-        except ZeroDivisionError:
-            print("Cannot divide by zero")
-            exit(-1)
-
-    def write_results(self):
-        sum_result = self.sum_vectors()
-        subtract_result = self.subtract_vectors()
-        multiply_result = self.multiply_vectors()
-        divide_result = self.divide_vectors()
-
-        with open("output.txt", "w") as f:
-            f.write("Sum Result:\n")
-            f.write(" ".join(map(str, sum_result)) + "\n")
-
-            f.write("Subtraction Result:\n")
-            f.write(" ".join(map(str, subtract_result)) + "\n")
-
-            f.write("Multiplication Result:\n")
-            f.write(" ".join(map(str, multiply_result)) + "\n")
-
-            f.write("Division Result:\n")
-            f.write(" ".join(map(str, divide_result)) + "\n")
-
-
-if __name__ == "__main__":
-    INPUT_VECTOR_first = "inputVector1.txt"
-    INPUT_VECTOR_second = "inputVector2.txt"
-    INPUT_VECTOR_third = "inputVector3.txt"  # Add more input vectors as needed
-
-    vector_operations = VectorOperations(INPUT_VECTOR_first, INPUT_VECTOR_second, INPUT_VECTOR_third)
-    vector_operations.write_results()
Index: BoikoStepan/Matrix/FMatrix.txt
===================================================================
diff --git a/BoikoStepan/Matrix/FMatrix.txt b/BoikoStepan/Matrix/FMatrix.txt
deleted file mode 100644
--- a/BoikoStepan/Matrix/FMatrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-4 4 4
-3 3 3
-3 3 3
\ No newline at end of file
Index: LevPredko/fibonacciWithFinalNumber/main.py
===================================================================
diff --git a/LevPredko/fibonacciWithFinalNumber/main.py b/LevPredko/fibonacciWithFinalNumber/main.py
deleted file mode 100644
--- a/LevPredko/fibonacciWithFinalNumber/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,65 +0,0 @@
-import Constants
-
-class FibonacciCalculator:
-    def __init__(self):
-        self.numbers = []
-        self.final_number = 0
-        self.result_sequence = []
-
-    def fibonacci_recursive(self, current_sequence):
-        try:
-            if len(current_sequence) < 2:
-                current_sequence.append(0)
-                return self.fibonacci_recursive(current_sequence)
-            elif current_sequence[-1] + current_sequence[-2] < self.final_number:
-                number = lambda num: num[-1] + num[-2]
-                current_sequence.append(number(current_sequence))
-                return self.fibonacci_recursive(current_sequence)
-            else:
-                return current_sequence[2:]
-        except Exception as e:
-            print(f"Error occurred in recursive function: {e}")
-
-    def read_input_files(self):
-        try:
-            with open(Constants.Fibonacci, 'r') as file:
-                numbers = file.readline().split()
-                for i in range(len(numbers)):
-                    self.numbers.append(int(numbers[i]))
-        except EOFError as e:
-            print("Error: Empty file", e)
-            return False
-        except FileNotFoundError as e:
-            print("Error: One or more files not found.", e)
-            return False
-        try:
-            with open(Constants.Final_Fibonacci, 'r') as file:
-                self.final_number = int(file.readline())
-        except ValueError as e:
-            print("Error: Different sizes are specified in the file", e)
-        except EOFError as e:
-            print("Error: Empty file", e)
-
-        return True
-
-    def calculate_fibonacci_sequence(self):
-        self.result_sequence = self.fibonacci_recursive(self.numbers.copy())
-
-    def write_result_to_file(self):
-        try:
-            with open(Constants.output, 'w') as f:
-                f.write("Result:\n")
-                for num in self.result_sequence:
-                    f.write(str(num) + ' ')
-        except ValueError as e:
-            print("Error: Different sizes are specified in the file", e)
-        except EOFError as e:
-            print("Error: Empty file", e)
-
-    def run(self):
-        if self.read_input_files():
-            self.calculate_fibonacci_sequence()
-            self.write_result_to_file()
-
-calculator = FibonacciCalculator()
-calculator.run()
Index: nastia_vasylyk/pythonMatrixVectors/vect.input.txt
===================================================================
diff --git a/nastia_vasylyk/pythonMatrixVectors/vect.input.txt b/nastia_vasylyk/pythonMatrixVectors/vect.input.txt
deleted file mode 100644
--- a/nastia_vasylyk/pythonMatrixVectors/vect.input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-1 2 3
-6 7 3
\ No newline at end of file
Index: DarynaKovalchuk/Matrix/Matrix.py
===================================================================
diff --git a/DarynaKovalchuk/Matrix/Matrix.py b/DarynaKovalchuk/Matrix/Matrix.py
deleted file mode 100644
--- a/DarynaKovalchuk/Matrix/Matrix.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,78 +0,0 @@
-import os
-
-def file_exists(filename):
-    return os.path.isfile(filename)
-
-def read_matrix(filename):
-    with open(filename, 'r') as file:
-        lines = file.readlines()
-    matrix = []
-    for line in lines:
-        rows = [int(x) for x in line.split()]
-        matrix.append(rows)
-    return matrix
-
-def write_matrix(matrix, filename):
-    with open(filename, 'a') as file:
-        file.write("matrix result:\n")
-        for rows in matrix:
-            file.write(' '.join(map(str, rows)) + '\n')
-
-first_matrix = read_matrix('first_input.txt')
-second_matrix = read_matrix('second_input.txt')
-
-#файли не існують
-try:
-    with open('first_input.txt', 'r') as file:
-        data = file.read()
-except FileNotFoundError:
-    print("file doesnt exist.")
-
-    try:
-        with open('second_input.txt', 'r') as file:
-            data = file.read()
-    except FileNotFoundError:
-        print("file is not found.")
-
-#файли пусті
-try:
-    with open('first_input.txt', 'r') as file:
-        data = file.read()
-    if not data:
-        print("file is empty")
-except FileNotFoundError:
-    print("file not found.")
-
-try:
-    with open('second_input.txt', 'r') as file:
-        data = file.read()
-    if not data:
-        print("file is empty")
-except FileNotFoundError:
-    print("file not found.")
-
-if len(first_matrix) != len(second_matrix) or len(first_matrix[0]) != len(second_matrix[0]):
-    print("the sizes doesnt match.")
-else:
-    result_addition = []
-    result_subtraction = []
-
-    for i in range(len(first_matrix)):
-        add_rows = []
-        sub_rows = []
-        for j in range(len(first_matrix[0])):
-            add_rows.append(first_matrix[i][j] + second_matrix[i][j])
-            sub_rows.append(first_matrix[i][j] - second_matrix[i][j])
-        result_addition.append(add_rows)
-        result_subtraction.append(sub_rows)
-
-    write_matrix(result_subtraction, 'output_subtraction.txt')
-    write_matrix(result_addition, 'output_addition.txt')
-
-    print("Addition result:")
-    for rows in result_addition:
-      print(rows)
-
-    print("Subtraction result:")
-    for rows in result_subtraction:
-      print(rows)
Index: AnastasiaPelyno/MATRIX_CLASS/main.py
===================================================================
diff --git a/AnastasiaPelyno/MATRIX_CLASS/main.py b/AnastasiaPelyno/MATRIX_CLASS/main.py
deleted file mode 100644
--- a/AnastasiaPelyno/MATRIX_CLASS/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,129 +0,0 @@
-MATRIX_ONE = 'matrix_one.txt'
-MATRIX_TWO = 'matrix_two.txt'
-RESULT_FILE = 'result.txt'
-MODE_READ = 'r'
-MODE_WRITE = 'w'
-FILE_ERROR = 'File Not Found'
-
-
-class Matrix:
-    def __init__(self, matrix):
-        self.matrix = matrix
-
-    def __str__(self):
-        matrix = []
-        for i in self.matrix:
-            row = str(i)
-            matrix.append(row)
-        return "\n".join(matrix)
-
-    def __add__(self, other):
-        result = []
-        for i in range(len(self.matrix)):
-            row = []
-            for j in range(len(self.matrix[0])):
-                row.append(self.matrix[i][j] + other.matrix[i][j])
-            result.append(row)
-        return Matrix(result)
-
-    def __sub__(self, other):
-        result = []
-        for i in range(len(self.matrix)):
-            row = []
-            for j in range(len(self.matrix[0])):
-                row.append(self.matrix[i][j] - other.matrix[i][j])
-            result.append(row)
-        return Matrix(result)
-
-    def __mul__(self, other):
-        result = []
-        for i in range(len(self.matrix)):
-            row = []
-            for j in range(len(other.matrix[0])):
-                sum = 0
-                for k in range(len(other.matrix)):
-                    sum += self.matrix[i][k] * other.matrix[k][j]
-                row.append(sum)
-            result.append(row)
-        return Matrix(result)
-
-    def det(self):
-        n = len(self.matrix)
-        if n == 1:
-            return self.matrix[0][0]
-        elif n == 2:
-            return self.matrix[0][0] * self.matrix[1][1] - self.matrix[0][1] * self.matrix[1][0]
-        else:
-            determinant = 0
-            for j in range(n):
-                submatrix = [[self.matrix[i][k] for k in range(n) if k != j] for i in range(1, n)]
-                sign = (-1) ** j
-                determinant += sign * self.matrix[0][j] * Matrix(submatrix).det()
-            return determinant
-
-    def algebraic_dopovnenia(self):
-        n = len(self.matrix)
-        alg_dopov = [[0] * n for _ in range(n)]
-        for i in range(n):
-            for j in range(n):
-                submatrix = [[self.matrix[k][l] for l in range(n) if l != j] for k in range(n) if k != i]
-                sign = (-1) ** (i + j)
-                alg_dopov[j][i] = sign * Matrix(submatrix).det()
-        return alg_dopov
-
-    def inverse(self):
-        determinant = Matrix(self.matrix).det()
-        alg_dopov = Matrix(self.matrix).algebraic_dopovnenia()
-        inverse_matrix = []
-        n = len(alg_dopov)
-        for i in range(n):
-            row = []
-            for j in range(n):
-                row.append(alg_dopov[i][j] / determinant)
-            inverse_matrix.append(row)
-        return Matrix(inverse_matrix)
-
-    def reading(file_name):
-        matrix = []
-        with open(file_name, 'r') as file:
-            for i in file:
-                row = [int(x) for x in i.split()]
-                matrix.append(row)
-        return Matrix(matrix)
-
-    def writing(self, matrix_first, matrix_second, action, sign):
-        file.write(action)
-        file.write(str(matrix_first) + '\n')
-        file.write(sign + '\n')
-        file.write(str(matrix_second) + '\n')
-        file.write('=' + '\n' + str(self) + '\n' + 50 * '-' + '\n')
-
-
-try:
-    matrix_one = Matrix.reading(MATRIX_ONE)
-except FileNotFoundError:
-    print(FILE_ERROR)
-    exit(-1)
-try:
-    matrix_two = Matrix.reading(MATRIX_TWO)
-except FileNotFoundError:
-    print(FILE_ERROR)
-    exit(-1)
-add_res = matrix_one + matrix_two
-sub_res = matrix_one - matrix_two
-mult_res = matrix_one * matrix_two
-try:
-    deter = matrix_two.det()
-    inverse_matrix = matrix_two.inverse()
-    div_res = matrix_one * inverse_matrix
-except ZeroDivisionError:
-    print('Matrixes can not be divided')
-    exit(-1)
-try:
-    with open(RESULT_FILE, MODE_WRITE) as file:
-        add_res.writing(matrix_one, matrix_two, 'Addition:\n', '+')
-        sub_res.writing(matrix_one, matrix_two, 'Substraction:\n', '-')
-        mult_res.writing(matrix_one, matrix_two, 'Multiplying:\n', '*')
-        div_res.writing(matrix_one, matrix_two, 'Division:\n', '/')
-except FileNotFoundError:
-    print(FILE_ERROR)
Index: AnastasiaPelyno/Vector_class/vector_two.txt
===================================================================
diff --git a/AnastasiaPelyno/Vector_class/vector_two.txt b/AnastasiaPelyno/Vector_class/vector_two.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Vector_class/vector_two.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 3
\ No newline at end of file
Index: AnastasiaPelyno/Vector_class/main.py
===================================================================
diff --git a/AnastasiaPelyno/Vector_class/main.py b/AnastasiaPelyno/Vector_class/main.py
deleted file mode 100644
--- a/AnastasiaPelyno/Vector_class/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,63 +0,0 @@
-VECTORS_ONE = 'vector_one.txt'
-VECTORS_TWO = 'vector_two.txt'
-RESULT_FILE = 'result.txt'
-MODE_READ = 'r'
-MODE_WRITE = 'w'
-FILE_ERROR = 'File Not Found'
-class Vector:
-    def __init__(self, vector):
-        self.vector = vector
-
-    def __str__(self):
-        return str(self.vector)
-
-    def __add__(self, other_vector):
-        result=[self.vector[i]+other_vector.vector[i] for i in range(len(self.vector))]
-        return Vector(result)
-
-    def __sub__(self, other_vector):
-        result = [self.vector[i] - other_vector.vector[i] for i in range(len(self.vector))]
-        return Vector(result)
-
-    def __mul__(self, other_vector):
-        result = [self.vector[i] * other_vector.vector[i] for i in range(len(self.vector))]
-        return Vector(result)
-
-    def __truediv__(self, other_vector):
-        result = [self.vector[i] / other_vector.vector[i] for i in range(len(self.vector))]
-        return Vector(result)
-
-    def reading(vectors_file, mode):
-        with open(vectors_file, mode) as file:
-            lines = file.readlines()
-            values = [int(x) for x in lines[0].split()]
-        return Vector(values)
-    def writing(self, vector_one, vector_two,action,sign):
-        file.write(action+str(vector_one)+' '+str(sign)+' '+str(vector_two)+' '+'='+str(self.vector))
-        file.write('\n')
-try:
-    vec_one=Vector.reading(VECTORS_ONE,MODE_READ)
-except FileNotFoundError:
-    print(FILE_ERROR)
-    exit(-1)
-try:
-    vec_two = Vector.reading(VECTORS_TWO, MODE_READ)
-except FileNotFoundError:
-    print(FILE_ERROR)
-    exit(-1)
-sum_res=vec_one+vec_two
-sub_res=vec_one-vec_two
-mul_res=vec_one*vec_two
-try:
-    div_res=vec_one/vec_two
-except ZeroDivisionError:
-    print('Division by zero vector')
-    exit(-1)
-try:
-    with open(RESULT_FILE,MODE_WRITE) as file:
-        sum_res.writing(vec_one,vec_two,'Addition:\n','+')
-        sub_res.writing(vec_one,vec_two,'Substraction:\n','-')
-        mul_res.writing(vec_one,vec_two,'Multiply:\n','*')
-        div_res.writing(vec_one,vec_two,'Dividing:\n','/')
-except FileNotFoundError:
-    print(FILE_ERROR)
Index: LevPredko/fibonacci/Input_Output.py
===================================================================
diff --git a/LevPredko/fibonacci/Input_Output.py b/LevPredko/fibonacci/Input_Output.py
deleted file mode 100644
--- a/LevPredko/fibonacci/Input_Output.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,9 +0,0 @@
-import Constants
-const = 8
-with open (Constants.input, 'r') as fileRead:
-   array = fileRead.readline().split(Constants.space)
-   array = [float(i) for i in array if i.isdigit()]
-   for i in range(0, const):
-       array.append(array[i] + array[i+1])
-with open (Constants.output, 'w') as fileWrite:
-   fileWrite.write(str(array))
\ No newline at end of file
Index: MaksymPetukhov/linkedListTask6/main.py
===================================================================
diff --git a/MaksymPetukhov/linkedListTask6/main.py b/MaksymPetukhov/linkedListTask6/main.py
deleted file mode 100644
--- a/MaksymPetukhov/linkedListTask6/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,148 +0,0 @@
-class OutOfListBound(Exception):
-    def __init__(self):
-        self.message = "Index is out of list size!"
-        super().__init__(self.message)
-
-
-class Node:
-
-    def __init__(self, data):
-        self.data = data
-        self.prev = None
-        self.next = None
-
-
-class LinkedList:
-
-    def __init__(self):
-        self.size = 0
-        self.head = None
-
-    def push(self, new_data):
-        self.size += 1
-        new_node = Node(new_data)
-        new_node.next = self.head
-        new_node.prev = None
-
-        if self.head is not None:
-            self.head.prev = new_node
-
-        self.head = new_node
-
-    def delete(self, index):
-        try:
-            if index < 0 or index > self.size:
-                raise OutOfListBound
-        except OutOfListBound as e:
-            print(e)
-            return
-
-        current = self.head
-        temp = 0
-
-        while current is not None:
-            if temp is index:
-                self.size -= 1
-                if current.prev is not None:
-                    current.prev.next = current.next
-                else:
-                    self.head = current.next
-
-                if current.next is not None:
-                    current.next.prev = current.prev
-
-                return
-            current = current.next
-            temp += 1
-
-    def insert(self, index, new_data):
-        try:
-            if index < 0 or index > self.size:
-                raise OutOfListBound
-        except OutOfListBound as e:
-            print(e)
-            return
-
-        new_node = Node(new_data)
-
-        if index == 0:
-            new_node.next = self.head
-            new_node.prev = None
-
-            if self.head:
-                self.head.prev = new_node
-            self.head = new_node
-        elif index == self.size:
-            current = self.head
-
-            while current.next:
-                current = current.next
-            current.next = new_node
-            new_node.prev = current
-        else:
-            current = self.head
-            temp = 0
-
-            while temp < index:
-                current = current.next
-                temp += 1
-
-            new_node.prev = current.prev
-            new_node.next = current
-            current.prev.next = new_node
-            current.prev = new_node
-
-        self.size += 1
-
-    def print(self):
-        current = self.head
-
-        while current is not None:
-            print(current.data)
-            current = current.next
-
-    def erase(self, index):
-        try:
-            if index < 0 or index > self.size:
-                raise OutOfListBound
-        except OutOfListBound as e:
-            print(e)
-            return
-
-        current = self.head
-        temp = 0
-
-        while current is not None:
-            if temp is index:
-                current.data = None
-                return
-
-            current = current.next
-            temp += 1
-
-    def clear(self):
-        self.head = None
-        self.size = 0
-
-
-llist = LinkedList()
-llist.push(13)
-llist.push(21)
-llist.push(18)
-llist.push(29)
-llist.push(31)
-llist.push(78)
-
-llist.print()
-print("\nDelete element:")
-llist.delete(0)
-llist.print()
-print("\nInsert value:")
-llist.insert(100, 100)
-llist.print()
-print("\nErase value:")
-llist.erase(2)
-llist.print()
-print("\nClear list:")
-llist.clear()
-llist.print()
\ No newline at end of file
Index: ZlatomyraSeverylova/classMatrix/out_matrix.txt
===================================================================
diff --git a/ZlatomyraSeverylova/classMatrix/out_matrix.txt b/ZlatomyraSeverylova/classMatrix/out_matrix.txt
deleted file mode 100644
--- a/ZlatomyraSeverylova/classMatrix/out_matrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,4 +0,0 @@
-Sum of matrix: [[6.0, 11.0, 10.0], [4.0, 11.0, 8.0], [12.0, 7.0, 9.0]]
-Difference of matrix: [[0.0, -3.0, 0.0], [0.0, -5.0, -6.0], [2.0, 1.0, 1.0]]
-Multiplication of matrix: [[42.0, 68.0, 63.0], [17.0, 41.0, 35.0], [54.0, 96.0, 83.0]]
-Division of matrix: [[-0.5576923076923075, 0.75, 0.6346153846153846], [1.326923076923077, -0.75, -0.09615384615384612], [0.28846153846153877, -0.25, 1.3269230769230769]]
Index: yuliamalynovska/homework/task1 fibonacci/task1.py
===================================================================
diff --git a/yuliamalynovska/homework/task1 fibonacci/task1.py b/yuliamalynovska/homework/task1 fibonacci/task1.py
deleted file mode 100644
--- a/yuliamalynovska/homework/task1 fibonacci/task1.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,12 +0,0 @@
-import constant
-with open(constant.NAME_INPUT, 'r') as input_file:
-    array = input_file.readline().split()
-# array = [float(i) for i in array if i.isdigit()]
-array2 = []
-for i in array:
-    if i.isdigit():
-        array2.append(float(i))
-with open(constant.NAME_OUTPUT, 'w') as output_file:
-    for i in range(2, 10):
-        array2.append(array2[i - 1] + array2[i - 2])
-    output_file.write(str(array2))
Index: BrynarskiyAndriy/matrix.py
===================================================================
diff --git a/BrynarskiyAndriy/matrix.py b/BrynarskiyAndriy/matrix.py
deleted file mode 100644
--- a/BrynarskiyAndriy/matrix.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,75 +0,0 @@
-# Функція для читання матриці з файлу
-def read_matrix(file_name):
-    matrix = []
-    with open(file_name, 'r') as file:
-        for line in file:
-            row = [float(x) for x in line.strip().split(',')]
-            matrix.append(row)
-    return matrix
-
-# Функція для запису матриці у файл
-def write_matrix(matrix, file_name):
-    with open(file_name, 'w') as file:
-        for row in matrix:
-            file.write(' '.join(map(str, row)) + '\n')
-
-# Функція для додавання матриць
-def add_matrices(matrix1, matrix2):
-    result = []
-    if len(matrix1) != len(matrix2) or len(matrix1[0]) != len(matrix2[0]):
-        raise ValueError("Розміри матриць не співпадають")
-    for i in range(len(matrix1)):
-        row = [matrix1[i][j] + matrix2[i][j] for j in range(len(matrix1[0]))]
-        result.append(row)
-    return result
-
-# Функція для віднімання матриць
-def subtract_matrices(matrix1, matrix2):
-    result = []
-    if len(matrix1) != len(matrix2) or len(matrix1[0]) != len(matrix2[0]):
-        raise ValueError("Розміри матриць не співпадають")
-    for i in range(len(matrix1)):
-        row = [matrix1[i][j] - matrix2[i][j] for j in range(len(matrix1[0]))]
-        result.append(row)
-    return result
-
-# Функція для множення матриць
-def multiply_matrices(matrix1, matrix2):
-    if len(matrix1[0]) != len(matrix2):
-        raise ValueError("Кількість стовпців першої матриці не дорівнює кількості рядків другої матриці")
-    result = [[0 for _ in range(len(matrix2[0]))] for _ in range(len(matrix1))]
-    for i in range(len(matrix1)):
-        for j in range(len(matrix2[0])):
-            for k in range(len(matrix2)):
-                result[i][j] += matrix1[i][k] * matrix2[k][j]
-    return result
-
-#Виконуємо транспонацію матриці
-def transpose_matrix(matrix):
-    rows = len(matrix)
-    cols = len(matrix[0])
-
-    transposed = [[0 for _ in range(rows)] for _ in range(cols)]
-
-    for i in range(rows):
-        for j in range(cols):
-            transposed[j][i] = matrix[i][j]
-
-    return transposed
-
-# Зчитуємо матриці з файлів
-matrix_A = read_matrix('matrix_A.txt')
-matrix_B = read_matrix('matrix_B.txt')
-transpose_matrix_B = transpose_matrix(matrix_B)
-
-# Виконуємо операції
-result_add = add_matrices(matrix_A, matrix_B)
-result_subtract = subtract_matrices(matrix_A, matrix_B)
-result_multiply = multiply_matrices(matrix_A, matrix_B)
-result_division = multiply_matrices(matrix_A,transpose_matrix_B)
-
-# Записуємо результати у файли
-write_matrix(result_add, 'result_add.txt')
-write_matrix(result_subtract, 'result_subtract.txt')
-write_matrix(result_multiply, 'result_multiply.txt')
-write_matrix(result_division, 'result_division.txt')
Index: yuliamalynovska/homework/matrix/inputMatrix.txt
===================================================================
diff --git a/yuliamalynovska/homework/matrix/inputMatrix.txt b/yuliamalynovska/homework/matrix/inputMatrix.txt
deleted file mode 100644
--- a/yuliamalynovska/homework/matrix/inputMatrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-1 0
-0 1
-
-1 0
-0 1
-
-
-
Index: Trachyk Yura-Maksym/Homework/Fibonacci/main.py
===================================================================
diff --git a/Trachyk Yura-Maksym/Homework/Fibonacci/main.py b/Trachyk Yura-Maksym/Homework/Fibonacci/main.py
deleted file mode 100644
--- a/Trachyk Yura-Maksym/Homework/Fibonacci/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,16 +0,0 @@
-# Реалізувати алгоритм Фібоначі. Алгоритм Фібоначі будує ряд Фібоначі.
-# Ряд Фібоначі це такий ряд в якою кожний наступний елемент дорівнює сумі двох попередніх.
-# Стандартний ряд Фібоначі: 0, 1, 1, 2, 3, 5, 8, 13, 21 .....
-
-F1 = "number.txt"
-F2 = "output.txt"
-N = 8
-
-with open(F1, "r") as number_file:
-    array = number_file.readline().split()
-for i in range(0, len(array)):
-    array[i] = int(array[i])
-for i in range(0, N):
-    array.append(array[i-1] + array[i-2])
-with open(F2, "w") as output_file:
-    output_file.write(str(array))
Index: AnastasiaPelyno/Fibonacchi/input.txt
===================================================================
diff --git a/AnastasiaPelyno/Fibonacchi/input.txt b/AnastasiaPelyno/Fibonacchi/input.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Fibonacchi/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-7 12
\ No newline at end of file
Index: RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/vector2.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/vector2.txt b/RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/vector2.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/vector2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-87 9 11 6 2 865
\ No newline at end of file
Index: ZlatomyraSeverylova/classVector/out_vector.txt
===================================================================
diff --git a/ZlatomyraSeverylova/classVector/out_vector.txt b/ZlatomyraSeverylova/classVector/out_vector.txt
deleted file mode 100644
--- a/ZlatomyraSeverylova/classVector/out_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,5 +0,0 @@
-
-Sum of vectors: [6.0, 5.0, 7.0]
-Difference of vectors: [6.0, 5.0, 7.0]
-Multiplication of vectors: [5.0, 6.0, 12.0]
-Division of vectors: [0.2, 0.6666666666666666, 0.75]
Index: yuliamalynovska/homework/vector/vectors.py
===================================================================
diff --git a/yuliamalynovska/homework/vector/vectors.py b/yuliamalynovska/homework/vector/vectors.py
deleted file mode 100644
--- a/yuliamalynovska/homework/vector/vectors.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,63 +0,0 @@
-INPUT = 'inputVector.txt'
-OUTPUT = 'outputVector.txt'
-FILE_NOT_FOUND = 'file not found'
-ZERO_DIVISION = 'division by zero'
-
-try:
-    with open(INPUT, 'r') as inpV:
-        vectA = inpV.readline().split()
-        vectA = [float(i) for i in vectA if i.isdigit()]
-        vectB = inpV.readline().split()
-        vectB = [float(i) for i in vectB if i.isdigit()]
-except FileNotFoundError:
-    print(FILE_NOT_FOUND)
-    exit(-1)
-
-
-def addition(vector_a, vector_b):
-    result = []
-    for i in range(len(vector_a)):
-        result.append(vector_a[i]+vector_b[i])
-    return result
-
-
-def subtraction(vector_a, vector_b):
-    result = []
-    for i in range(len(vector_a)):
-        result.append(vector_a[i]-vector_b[i])
-    return result
-
-
-def multiplication(vector_a, vector_b):
-    result = []
-    for i in range(len(vector_a)):
-        result.append(vector_a[i]*vector_b[i])
-    return result
-
-
-def division(vector_a, vector_b):
-    result = []
-    try:
-        for i in range(len(vector_a)):
-            result.append(vector_a[i]/vector_b[i])
-        return result
-    except ZeroDivisionError:
-        print(ZERO_DIVISION)
-        exit(-1)
-
-
-with open(OUTPUT, 'w') as out:
-    out.write("Addition:\n")
-    out.write(str(addition(vectA, vectB))+'\n')
-
-    out.write("Subtraction:\n")
-    out.write(str(subtraction(vectA, vectB)) + '\n')
-
-    out.write("Multiplication:\n")
-    out.write(str(multiplication(vectA, vectB)) + '\n')
-
-    out.write("Division:\n")
-    out.write(str(division(vectA, vectB)) + '\n')
-
-
-
Index: BoikoStepan/Vector/OutputVector.txt
===================================================================
diff --git a/BoikoStepan/Vector/OutputVector.txt b/BoikoStepan/Vector/OutputVector.txt
deleted file mode 100644
--- a/BoikoStepan/Vector/OutputVector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-Vector Sum:
-[5, 5, 5, 5, 5]
-Vector Subtract:
-[-1, -1, -1, -1, -1]
-Vector Mult:
-[6, 6, 6, 6, 6]
-Vector Division :
-[0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666]
Index: LevPredko/MatrixVectorWithClass_2/Matrix1.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_2/Matrix1.txt b/LevPredko/MatrixVectorWithClass_2/Matrix1.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_2/Matrix1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-4 5 6
-7 8 9
Index: FlysYurii/Task(Bridge)/Abstract.py
===================================================================
diff --git a/FlysYurii/Task(Bridge)/Abstract.py b/FlysYurii/Task(Bridge)/Abstract.py
deleted file mode 100644
--- a/FlysYurii/Task(Bridge)/Abstract.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,78 +0,0 @@
-from abc import ABC, abstractmethod
-from math import pi
-
-class Color(ABC):
-    @abstractmethod
-    def fill_color(self):
-        pass
-
-class Red(Color):
-    def fill_color(self):
-        return "Червоний"
-
-class Green(Color):
-    def fill_color(self):
-        return "Зелений"
-
-class Blue(Color):
-    def fill_color(self):
-        return "Синій"
-
-class Shape(ABC):
-    def __init__(self, color: Color):
-        self.color = color
-
-    @abstractmethod
-    def calculate_area(self):
-        pass
-
-    @abstractmethod
-    def calculate_perimeter(self):
-        pass
-
-class Circle(Shape):
-    def __init__(self, radius, color):
-        super().__init__(color)
-        self.radius = radius
-
-    def calculate_area(self):
-        return pi * self.radius ** 2
-
-    def calculate_perimeter(self):
-        return 2 * pi * self.radius
-
-class Rectangle(Shape):
-    def __init__(self, width, height, color):
-        super().__init__(color)
-        self.width = width
-        self.height = height
-
-    def calculate_area(self):
-        return self.width * self.height
-
-    def calculate_perimeter(self):
-        return 2 * (self.width + self.height)
-
-class Square(Shape):
-    def __init__(self, side, color):
-        super().__init__(color)
-        self.side = side
-
-    def calculate_area(self):
-        return self.side ** 2
-
-    def calculate_perimeter(self):
-        return 4 * self.side
-
-red = Red()
-green = Green()
-blue = Blue()
-
-circle = Circle(5, red)
-print(f"Коло: Площа = {circle.calculate_area()}, Периметр = {circle.calculate_perimeter()}, Колір = {circle.color.fill_color()}")
-
-rectangle = Rectangle(4, 3, green)
-print(f"Прямокутник: Площа = {rectangle.calculate_area()}, Периметр = {rectangle.calculate_perimeter()}, Колір = {rectangle.color.fill_color()}")
-
-square = Square(4, blue)
-print(f"Квадрат: Площа = {square.calculate_area()}, Периметр = {square.calculate_perimeter()}, Колір = {square.color.fill_color()}")
\ No newline at end of file
Index: MaksymPetukhov/fibonacciNumbers2/constants.py
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers2/constants.py b/MaksymPetukhov/fibonacciNumbers2/constants.py
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers2/constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,4 +0,0 @@
-INPUT_FILE = "read.txt"
-OUTPUT_FILE = "write.txt"
-PARAMETERS_FILE = "parameters.txt"
-SEPARATOR = ','
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/SecondMatrix.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/SecondMatrix.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/SecondMatrix.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/SecondMatrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-4 5 3
-2 3 1
\ No newline at end of file
Index: Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/output.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/output.txt b/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/output.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/MatrixOutput.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/MatrixOutput.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/MatrixOutput.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/MatrixOutput.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,16 +0,0 @@
-Matrix Sum:
-[[4 4 6]
- [9 6 7]
- [5 7 3]]
-Matrix Subtract:
-[[ 2  0  0]
- [ 1 -4  1]
- [ 1  1  1]]
-Matrix Multiplication:
-[[17 25 18]
- [17 27 22]
- [23 32 23]]
-Matrix Division:
-[[16 31 15]
- [19 37 17]
- [17 38 20]]
Index: FlysYurii/Task(Matrix and vectors)/other_vector1.txt
===================================================================
diff --git a/FlysYurii/Task(Matrix and vectors)/other_vector1.txt b/FlysYurii/Task(Matrix and vectors)/other_vector1.txt
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and vectors)/other_vector1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1,1,1,1
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/output_vector.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/output_vector.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/output_vector.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/output_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,4 +0,0 @@
-[6.0, 6.0, 6.0, 6.0, 6.0]
-[-4.0, -2.0, 0.0, 2.0, 4.0]
-[0.2, 0.5, 1.0, 2.0, 5.0]
-[5.0, 8.0, 9.0, 8.0, 5.0]
Index: MaksymPetukhov/fibonacciNumbers2/main.py
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers2/main.py b/MaksymPetukhov/fibonacciNumbers2/main.py
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers2/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,49 +0,0 @@
-# Practical - 15.09.2023
-import os
-
-import constants
-
-
-class FileIsEmpty(Exception):
-
-    def __init__(self, message="File is empty!"):
-        self.message = message
-        super().__init__(self.message)
-
-
-try:
-    with open(constants.INPUT_FILE, 'r') as rf:
-        if os.path.getsize(constants.INPUT_FILE) == 0:
-            raise FileIsEmpty
-        line = rf.readline()
-
-    with open(constants.PARAMETERS_FILE, 'r') as rf:
-        breakPoint = rf.readline()
-
-except FileNotFoundError as e:
-    print(e)
-
-breakPoint = float(breakPoint)
-
-array = line.split(constants.SEPARATOR)
-
-line = [float(i) for i in line if i.isdigit()]
-
-for i in range(len(array)):
-    array[i] = float(array[i])
-
-
-def addFibonacci(i):
-    num = array[i] + array[i + 1]
-    if num < breakPoint:
-        array.append(num)
-        addFibonacci(i + 1)
-
-
-addFibonacci(0)
-
-try:
-    with open(constants.OUTPUT_FILE, 'w') as wf:
-        wf.write(str(array))
-except FileNotFoundError as e:
-    print(e)
Index: Trachyk Yura-Maksym/Homework/Fibonacci/number.txt
===================================================================
diff --git a/Trachyk Yura-Maksym/Homework/Fibonacci/number.txt b/Trachyk Yura-Maksym/Homework/Fibonacci/number.txt
deleted file mode 100644
--- a/Trachyk Yura-Maksym/Homework/Fibonacci/number.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-2 3
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/Matrix.py
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/Matrix.py b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/Matrix.py
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/Matrix.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,40 +0,0 @@
-import numpy as np
-
-firstMatrix = []
-secondMatrix = []
-
-with open('FirstMatrix.txt', 'r') as firstFileMatrix:
-    for line in firstFileMatrix:
-        row = [int(x) for x in line.split()]
-        firstMatrix.append(row)
-
-with open('SecondMatrix.txt', 'r') as secondFileMatrix:
-    for line in secondFileMatrix:
-        row = [int(x) for x in line.split()]
-        secondMatrix.append(row)
-
-firstMatrix=np.array(firstMatrix)
-secondMatrix=np.array(secondMatrix)
-
-matrixSumm = firstMatrix+secondMatrix
-matrixSubtract = firstMatrix-secondMatrix
-matrixMultiplication = np.dot(firstMatrix,secondMatrix)
-matrixDivision=np.dot(firstMatrix,np.transpose(secondMatrix))
-
-with open('MatrixOutput.txt', 'w') as file:
-    file.write("Matrix Sum:\n")
-    file.write(str (matrixSumm)+'\n')
-
-    file.write("Matrix Subtract:\n")
-    file.write(str (matrixSubtract)+'\n')
-
-    file.write("Matrix Multiplication:\n")
-    file.write(str (matrixMultiplication)+'\n')
-
-    file.write("Matrix Division:\n")
-    file.write(str (matrixDivision)+'\n')
-
-
-
-
-
Index: BohdanFariyon/3.Marix/matrix2.txt
===================================================================
diff --git a/BohdanFariyon/3.Marix/matrix2.txt b/BohdanFariyon/3.Marix/matrix2.txt
deleted file mode 100644
--- a/BohdanFariyon/3.Marix/matrix2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-1 0
-0 1
\ No newline at end of file
Index: Oleh Kaliuzhnyi/MatrixClass/matrix_one.txt
===================================================================
diff --git a/Oleh Kaliuzhnyi/MatrixClass/matrix_one.txt b/Oleh Kaliuzhnyi/MatrixClass/matrix_one.txt
deleted file mode 100644
--- a/Oleh Kaliuzhnyi/MatrixClass/matrix_one.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-1 2 3
-1 2 3
\ No newline at end of file
Index: LevPredko/MatrixVectorWithClass_3/Matrix2read.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_3/Matrix2read.txt b/LevPredko/MatrixVectorWithClass_3/Matrix2read.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_3/Matrix2read.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-9 1 4
-5 6 5
Index: Trachyk Yura-Maksym/Homework/Vector/output.txt
===================================================================
diff --git a/Trachyk Yura-Maksym/Homework/Vector/output.txt b/Trachyk Yura-Maksym/Homework/Vector/output.txt
deleted file mode 100644
--- a/Trachyk Yura-Maksym/Homework/Vector/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,6 +0,0 @@
-First vector: [1.0, 2.0, 3.0]
-Second vector: [2.0, 3.0, 4.0]
-Addition vectors: [3.0, 5.0, 7.0]
-Subtraction vectors: [-1.0, -1.0, -1.0]
-Multiplication vectors: [2.0, 6.0, 12.0]
-Division vectors: [0.5, 0.6666666666666666, 0.75]
Index: LevPredko/fibonacciWithFinalNumber/output.txt
===================================================================
diff --git a/LevPredko/fibonacciWithFinalNumber/output.txt b/LevPredko/fibonacciWithFinalNumber/output.txt
deleted file mode 100644
--- a/LevPredko/fibonacciWithFinalNumber/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-Result:
-8 13 21 34 55 89 144 
\ No newline at end of file
Index: .idea/pma23.iml
===================================================================
diff --git a/.idea/pma23.iml b/.idea/pma23.iml
deleted file mode 100644
--- a/.idea/pma23.iml	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="PYTHON_MODULE" version="4">
-  <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-  <component name="PyDocumentationSettings">
-    <option name="format" value="PLAIN" />
-    <option name="myDocStringFormat" value="Plain" />
-  </component>
-</module>
\ No newline at end of file
Index: LevPredko/MatrixVectorWithClass_2/matrix_vector.py
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_2/matrix_vector.py b/LevPredko/MatrixVectorWithClass_2/matrix_vector.py
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_2/matrix_vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,188 +0,0 @@
-import Constants
-class Matrix:
-    def __init__(self, file_path1, file_path2):
-        self.matrix1 = self.read_matrix_from_file(file_path1)
-        self.matrix2 = self.read_matrix_from_file(file_path2)
-
-    @staticmethod
-    def read_matrix_from_file(file_path):
-
-        matrix = []
-        with open(file_path, 'r') as readFile:
-            for line in readFile:
-                line = line.strip()
-                row = [int(i) for i in line.split(Constants.SEPARATOR)]
-                matrix.append(row)
-        return matrix
-
-    def additionM(self):
-        addition = []
-        for i in range(len(self.matrix1)):
-            row = []
-            for j in range(len(self.matrix1[0])):
-                row.append(self.matrix1[i][j] + self.matrix2[i][j])
-            addition.append(row)
-        return addition
-
-    def subtractionM(self):
-        subtraction = []
-        for i in range(len(self.matrix1)):
-            row = []
-            for j in range(len(self.matrix1[0])):
-                row.append(self.matrix1[i][j] - self.matrix2[i][j])
-            subtraction.append(row)
-        return subtraction
-
-    def multiplicationM(self):
-        if len(self.matrix1[0]) != len(self.matrix2):
-            raise ValueError("The number of columns of the first matrix is not equal to the number of rows of the second matrix")
-        multiplication = []
-        for i in range(len(self.matrix1)):
-            row = []
-            for j in range(len(self.matrix2[0])):
-                product = 0
-                for k in range(len(self.matrix2)):
-                    product += self.matrix1[i][k] * self.matrix2[k][j]
-                row.append(product)
-            multiplication.append(row)
-        return multiplication
-
-    def matrix_1(self):
-        detB = ((self.matrix2[0][0] * ((self.matrix2[1][1] * self.matrix2[2][2]) - (self.matrix2[1][2] * self.matrix2[2][1]))) -
-                (self.matrix2[0][1] * ((self.matrix2[1][0] * self.matrix2[2][0]) - (self.matrix2[1][2] * self.matrix2[2][2]))) +
-                (self.matrix2[0][2] * ((self.matrix2[1][0] * self.matrix2[2][1]) - (self.matrix2[1][1] * self.matrix2[2][0]))))
-
-        c11 = "{:.2f}".format(((1 / detB) * ((self.matrix2[1][1] * self.matrix2[2][2]) - (self.matrix2[1][2] * self.matrix2[2][1]))))
-        c12 = "{:.2f}".format(-((1 / detB) * ((self.matrix2[1][0] * self.matrix2[2][2]) - (self.matrix2[1][2] * self.matrix2[2][0]))))
-        c13 = "{:.2f}".format(((1 / detB) * ((self.matrix2[1][0] * self.matrix2[2][1]) - (self.matrix2[1][1] * self.matrix2[2][0]))))
-
-        c21 = "{:.2f}".format(-((1 / detB) * ((self.matrix2[0][1] * self.matrix2[2][2]) - (self.matrix2[0][2] * self.matrix2[2][1]))))
-        c22 = "{:.2f}".format(((1 / detB) * ((self.matrix2[0][0] * self.matrix2[2][2]) - (self.matrix2[0][2] * self.matrix2[2][0]))))
-        c23 = "{:.2f}".format(-((1 / detB) * ((self.matrix2[0][0] * self.matrix2[2][1]) - (self.matrix2[0][1] * self.matrix2[2][0]))))
-
-        c31 = "{:.2f}".format(((1 / detB) * ((self.matrix2[0][1] * self.matrix2[1][2]) - (self.matrix2[0][2] * self.matrix2[1][1]))))
-        c32 = "{:.2f}".format(-((1 / detB) * ((self.matrix2[0][0] * self.matrix2[1][2]) - (self.matrix2[0][2] * self.matrix2[1][0]))))
-        c33 = "{:.2f}".format(((1 / detB) * ((self.matrix2[0][0] * self.matrix2[1][1]) - (self.matrix2[0][1] * self.matrix2[1][0]))))
-
-        matrix_1 = [
-            [c11, c12, c13],
-            [c21, c22, c23],
-            [c31, c32, c33]
-        ]
-        return matrix_1
-
-    def divideM(self, matrix2T):
-        if len(self.matrix1[0]) != len(matrix2T):
-            raise ValueError(
-                "The number of columns of the first matrix is not equal to the number of rows of the second matrix")
-        divide = []
-        for i in range(len(self.matrix1)):
-            row = []
-            for j in range(len(matrix2T[0])):
-                product = 0
-                for k in range(len(matrix2T)):
-                    product += float(self.matrix1[i][k]) * float(matrix2T[k][j])
-                row.append("{:.2f}".format(product))
-            divide.append(row)
-        return divide
-
-
-class Vector:
-    def __init__(self, file_path1, file_path2):
-        self.vector1 = self.read_vector_from_file(file_path1)
-        self.vector2 = self.read_vector_from_file(file_path2)
-
-    @staticmethod
-    def read_vector_from_file(file_path):
-        vector = []
-        with open(file_path, 'r') as readFile:
-            for line in readFile: # цикл прочитує кожну строку з файлу і опрацьовує її
-                line = line.strip() #видаляє всі лишні пробіли
-                row = [int(i) for i in line.split(Constants.SEPARATOR)] # розбиває рядок на окермі елементи які йдуть через SEPARATOR
-                vector.append(row) #кожен рядок файлу стає елементом списку vector
-        return vector
-
-    def additionV(self):
-        if len(self.vector1) != len(self.vector2):
-            raise ValueError("The vectors must have the same length")
-        add_vector = []
-        for i in range(len(self.vector1)):
-            result_row = []
-            for j in range(len(self.vector1[i])):
-                result_row.append(self.vector1[i][j] + self.vector2[i][j])
-            add_vector.append(result_row)
-        return add_vector
-
-    def subtractionV(self):
-        if len(self.vector1) != len(self.vector2):
-            raise ValueError("The vectors must have the same length")
-        sub_vector = []
-        for i in range(len(self.vector1)):
-            result_row = []
-            for j in range(len(self.vector1[i])):
-                result_row.append(self.vector1[i][j] - self.vector2[i][j])
-            sub_vector.append(result_row)
-        return sub_vector
-    def multiplicationV(self):
-        if len(self.vector1) != len(self.vector2):
-            raise ValueError("The vectors must have the same length")
-        mul_vector = []
-        for i in range(len(self.vector1)):
-            result_row = []
-            for j in range(len(self.vector1[i])):
-                result_row.append(self.vector1[i][j] * self.vector2[i][j])
-            mul_vector.append(result_row)
-        return mul_vector
-
-    def divideV(self):
-        if len(self.vector1) != len(self.vector2):
-            raise ValueError("The vectors must have the same length")
-        div_vector = []
-        for i in range(len(self.vector1)):
-            result_row = []
-            for j in range(len(self.vector1[i])):
-                if self.vector2[i][j] == 0:
-                    raise ValueError("Division by zero is not allowed")
-                result_row.append(self.vector1[i][j] / self.vector2[i][j])
-            div_vector.append(result_row)
-        return div_vector
-
-
-matrix = Matrix(Constants.Input_Matrix_1, Constants.Input_Matrix_2)
-vector = Vector(Constants.Input_Vector_1, Constants.Input_Vector_2)
-
-with open("output.txt", "w") as file:
-    choice = input("Matrix or Vector? (M or V): ")
-    operation = input("Enter the operation (+, -, *, /): ")
-
-    if choice == "M":
-        if operation == "+":
-            result = matrix.additionM()
-        elif operation == "-":
-            result = matrix.subtractionM()
-        elif operation == "*":
-            result = matrix.multiplicationM()
-        elif operation == "/":
-            matrix2T = matrix.matrix_1()
-            result = matrix.divideM(matrix2T)
-        else:
-            raise ValueError("There is no such operator for matrices")
-
-        for row in result:
-            file.write(' '.join(map(str, row)) + '\n')
-    elif choice == "V":
-        if operation == "+":
-             result = vector.additionV()
-        elif operation == "-":
-            result = vector.subtractionV()
-        elif operation == "*":
-            result = vector.multiplicationV()
-        elif operation == "/":
-            result = vector.divideV()
-        else:
-               raise ValueError("There is no such operator for vectors")
-
-        for item in result:
-            file.write(str(item) + '\n')
-    else:
-        raise ValueError("Invalid choice.")
Index: Oles Prokopiv/homework/matrix(add, subtract)/inputSecond.txt
===================================================================
diff --git a/Oles Prokopiv/homework/matrix(add, subtract)/inputSecond.txt b/Oles Prokopiv/homework/matrix(add, subtract)/inputSecond.txt
deleted file mode 100644
--- a/Oles Prokopiv/homework/matrix(add, subtract)/inputSecond.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3 5
-2 3 4
-3 4 5
\ No newline at end of file
Index: RostyslavPasternak/Practical/Practical_1/const.py
===================================================================
diff --git a/RostyslavPasternak/Practical/Practical_1/const.py b/RostyslavPasternak/Practical/Practical_1/const.py
deleted file mode 100644
--- a/RostyslavPasternak/Practical/Practical_1/const.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,4 +0,0 @@
-INPUT = 'input.txt'
-OUTPUT = 'output.txt'
-SEPARATOR = ","
-
Index: LevPredko/Stream/Stream.py
===================================================================
diff --git a/LevPredko/Stream/Stream.py b/LevPredko/Stream/Stream.py
deleted file mode 100644
--- a/LevPredko/Stream/Stream.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,22 +0,0 @@
-from pyxtension.streams import stream
-class Employee:
-    def __init__(self, name, surname):
-        self.name = name
-        self.surname = surname
-    def print(self):
-        return f"Name: {self.name} ; Surname: {self.surname}\n"
-
-employee1 = Employee('Oleh', 'Stepanyak')
-employee2 = Employee('Dima', 'Vasilision')
-employee3 = Employee('Lev', 'Predko')
-
-employee = []
-employee.append(employee1)
-employee.append(employee2)
-employee.append(employee3)
-
-change_employee = (stream(employee)
-                   .map(lambda l: l.print() + "Andriy Oliynik")
-                   .filter()
-                   .toList())
-print(change_employee[0], change_employee[1], change_employee[2])
\ No newline at end of file
Index: RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/main.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/main.py b/RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/main.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,70 +0,0 @@
-from RostyslavPasternak.Homework.Vector_Matrix.Exception import InvalidSize
-def add(first_vector, second_vector):
-    if len(first_vector) == len(second_vector):
-        size = len(first_vector)
-        result = [first_vector[i] + second_vector[i] for i in range(size)]
-        return result
-    raise InvalidSize()
-
-def sub(first_vector, second_vector):
-    if len(first_vector) == len(second_vector):
-        size = len(first_vector)
-        result = [first_vector[i] - second_vector[i] for i in range(size)]
-        return result
-    raise InvalidSize()
-
-def mul(first_vector, second_vector):
-    if len(first_vector) == len(second_vector):
-        size = len(first_vector)
-        result = [first_vector[i] * second_vector[i] for i in range(size)]
-        return result
-    raise InvalidSize()
-
-
-def div(first_vector, second_vector):
-    if len(first_vector) == len(second_vector):
-        size = len(first_vector)
-        result = [first_vector[i] / second_vector[i] for i in range(size)]
-        return result
-    raise InvalidSize()
-
-def str_to_file(vector,file_name="result.txt"):
-    with open(file_name, 'w') as writeFile:
-        writeFile.write(str(vector))
-
-with open("vector1.txt", 'r') as readFile:
-    line = readFile.readline()
-
-first_vector = line.split(" ")
-first_vector = [float(i) for i in first_vector if i.isdigit()]
-print("First vector: ")
-print(first_vector)
-with open("vector2.txt", 'r') as readFile:
-    line = readFile.readline()
-
-second_vector = line.split(" ")
-second_vector = [float(i) for i in second_vector if i.isdigit()]
-print("Second vector: ")
-print(second_vector)
-
-while True:
-    try:
-        result = None
-        operator = int(input("1. add\n2. subtraction\n3. multiplication\n4. division\n0. Cancel\n"))
-        if operator == 1:
-            result = add(first_vector, second_vector)
-        elif operator == 2:
-            result = sub(first_vector,second_vector)
-        elif operator == 3:
-            result = mul(first_vector,second_vector)
-        elif operator == 4:
-            result = div(first_vector,second_vector)
-        else:
-            break
-    except InvalidSize as e:
-        print(e)
-
-    print(result)
-    str_to_file(result)
-
-
Index: yuliamalynovska/homework/task1 fibonacci/output.txt
===================================================================
diff --git a/yuliamalynovska/homework/task1 fibonacci/output.txt b/yuliamalynovska/homework/task1 fibonacci/output.txt
deleted file mode 100644
--- a/yuliamalynovska/homework/task1 fibonacci/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[5.0, 7.0, 12.0, 19.0, 31.0, 50.0, 81.0, 131.0, 212.0, 343.0]
\ No newline at end of file
Index: yuliamalynovska/homework/classMatrix/output.txt
===================================================================
diff --git a/yuliamalynovska/homework/classMatrix/output.txt b/yuliamalynovska/homework/classMatrix/output.txt
deleted file mode 100644
--- a/yuliamalynovska/homework/classMatrix/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,12 +0,0 @@
-Addition: 
-[10.0, 8.0, 7.0]
-[5.0, 20.0, 14.0]
-Subtraction: 
-[10.0, 6.0, 3.0]
-[-1.0, 0.0, -4.0]
-Multiplication: 
-[21.0, 80.0, 83.0]
-[30.0, 102.0, 94.0]
-Division: 
-[-26.333333333333336, 3.333333333333333, 0]
-[3.333333333333333, 0.6666666666666666, 0]
Index: nastia_vasylyk/pythonMatrixVectors/matr.input.txt
===================================================================
diff --git a/nastia_vasylyk/pythonMatrixVectors/matr.input.txt b/nastia_vasylyk/pythonMatrixVectors/matr.input.txt
deleted file mode 100644
--- a/nastia_vasylyk/pythonMatrixVectors/matr.input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-3
-4 9 1
-7 3 2
-6 5 8
-3
-1 3 4
-6 7 8
-4 5 6
\ No newline at end of file
Index: LevPredko/MatrixVectorWithClass_3/Vector1read.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_3/Vector1read.txt b/LevPredko/MatrixVectorWithClass_3/Vector1read.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_3/Vector1read.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 3
\ No newline at end of file
Index: anastasiia_trushchak/Homework/Homework_01/Vector/output.txt
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_01/Vector/output.txt b/anastasiia_trushchak/Homework/Homework_01/Vector/output.txt
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_01/Vector/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-Sum Result:
-5 7 9
-Subtraction Result:
--3 -3 -3
-Multiplication Result:
-4 10 18
-Division Result:
-0.25 0.4 0.5
Index: FlysYurii/Task(Matrix and Vectors classes)/matrix_A.txt
===================================================================
diff --git a/FlysYurii/Task(Matrix and Vectors classes)/matrix_A.txt b/FlysYurii/Task(Matrix and Vectors classes)/matrix_A.txt
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and Vectors classes)/matrix_A.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-6 3
-1 2
Index: Oleh Kaliuzhnyi/MatrixProject/MatrixOne.txt
===================================================================
diff --git a/Oleh Kaliuzhnyi/MatrixProject/MatrixOne.txt b/Oleh Kaliuzhnyi/MatrixProject/MatrixOne.txt
deleted file mode 100644
--- a/Oleh Kaliuzhnyi/MatrixProject/MatrixOne.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-2 1 1
-3 2 1
-2 1 2
\ No newline at end of file
Index: BoikoStepan/Matrix/Matrix(mult).py
===================================================================
diff --git a/BoikoStepan/Matrix/Matrix(mult).py b/BoikoStepan/Matrix/Matrix(mult).py
deleted file mode 100644
--- a/BoikoStepan/Matrix/Matrix(mult).py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,113 +0,0 @@
-try:
-    f_Matrix = []
-    s_Matrix = []
-
-
-    with open('FMatrix.txt', 'r') as firstFileMatrix:
-        for line in firstFileMatrix:
-            row = [int(x) for x in line.split()]
-            f_Matrix.append(row)
-
-
-    with open('SMatrix.txt', 'r') as secondFileMatrix:
-        for line in secondFileMatrix:
-            row = [int(x) for x in line.split()]
-            s_Matrix.append(row)
-
-
-
-    for row in range(len(f_Matrix)):
-        print((str(f_Matrix[row])))
-    print()
-    for row in range(len(s_Matrix)):
-        print((str(s_Matrix[row])))
-    print()
-
-    matrix_Mult = []
-    for i in range(len(f_Matrix)):
-            row = []
-            for j in range(len(s_Matrix[0])):
-                mult = 0
-                for k in range(len(s_Matrix)):
-                    mult += f_Matrix[i][k] * s_Matrix[k][j]
-                row.append(mult)
-            matrix_Mult.append(row)
-
-    try:
-        def determinant(matrix):
-            size = len(matrix)
-            if size == 1:
-                return matrix[0][0]
-            elif size == 2:
-                return matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0]
-            else:
-                det = 0
-                for col in range(size):
-                    submatrix = []
-                    for i in range(1, len(matrix)):
-                        subrow = []
-                        for j in range(len(matrix[i])):
-                            if j != col:
-                                subrow.append(matrix[i][j])
-                        submatrix.append(subrow)
-                    cofactor = matrix[0][col] * determinant(submatrix)
-                    if col % 2 == 0:
-                        det += cofactor
-                    else:
-                        det -= cofactor
-                return det
-
-        def inverse_matrix(matrix):
-            size = len(matrix)
-            det = determinant(matrix)
-            inverse = [[0] * size for _ in range(size)]
-
-            for i in range(size):
-                for j in range(size):
-                    submatrix = []
-                    for row_idx in range(len(matrix)):
-                        if row_idx != i:
-                            subrow = []
-                            for col_idx in range(len(matrix[row_idx])):
-                                if col_idx != j:
-                                    subrow.append(matrix[row_idx][col_idx])
-                            submatrix.append(subrow)
-                    cofactor = determinant(submatrix)
-                    if (i + j) % 2 == 0:
-                        inverse[j][i] = cofactor / det
-                    else:
-                        inverse[j][i] = -cofactor / det
-
-            return inverse
-
-        inverse_matrix2 = inverse_matrix(s_Matrix)
-
-        matrix_Division = []
-        for i in range(len(f_Matrix)):
-                row = []
-                for j in range(len(inverse_matrix2[0])):
-                    dot_product = 0
-                    for k in range(len(inverse_matrix2)):
-                        dot_product += f_Matrix[i][k] * inverse_matrix2[k][j]
-                    row.append(dot_product)
-                matrix_Division.append(row)
-
-
-        print(inverse_matrix2)
-        print(matrix_Mult)
-        print(matrix_Division)
-
-
-        with open('OutputMatrix.txt', 'w') as file:
-
-            file.write("Matrix Multiplication:\n")
-            for row in range(len(matrix_Mult)):
-                file.write(str(matrix_Mult[row]) + '\n')
-
-            file.write("Matrix Division:\n")
-            for row in range(len(matrix_Division)):
-                file.write(str(matrix_Division[row]) + '\n')
-    except Exception as e:
-        print(e,"is unreal")
-except Exception as e:
-    print("error",e)
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/__init__.py
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/__init__.py b/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/__init__.py
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_matrix/__init__.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,47 +0,0 @@
-class Matrix:
-    def __init__(self, first_matrix, second_matrix):
-        self.first_matrix = first_matrix
-        self.second_matrix = second_matrix
-
-    def __add__(self,other):
-
-        result = [[0 for _ in range(len(self.first_matrix[0]))] for _ in range(len(self.first_matrix))]
-
-        for i in range(len(self.first_matrix)):
-            for j in range(len(self.first_matrix[0])):
-                result[i][j] = self.first_matrix[i][j] + other.second_matrix[i][j]
-
-        return result
-
-    def __sub__(self, other):
-        result = [[0 for _ in range(len(self.first_matrix[0]))] for _ in range(len(self.first_matrix))]
-
-        for i in range(len(self.first_matrix)):
-            for j in range(len(self.first_matrix[0])):
-                result[i][j] = self.first_matrix[i][j] - other.second_matrix[i][j]
-
-        return result
-
-    def __mul__(self, other):
-        result = [[0 for _ in range(len(self.second_matrix[0]))] for _ in range(len(self.first_matrix))]
-
-        for i in range(len(self.first_matrix)):
-            for j in range(len(self.second_matrix[0])):
-                for k in range(len(self.second_matrix)):
-                    result[i][j] += self.first_matrix[i][k] * other.second_matrix[k][j]
-
-        return result
-
-
-    def __truediv__(self, other):
-        result = [[0 for _ in range(len(other.second_matrix[0]))] for _ in range(len(self.first_matrix))]
-
-        for i in range(len(self.first_matrix)):
-            for j in range(len(self.first_matrix[0])):
-                for k in range(len(other.second_matrix)):
-                    result[i][j] += self.first_matrix[i][k] / other.second_matrix[k][j]
-
-        return result
-
-
-
Index: ZlatomyraSeverylova/classVector/input_vector_a.txt
===================================================================
diff --git a/ZlatomyraSeverylova/classVector/input_vector_a.txt b/ZlatomyraSeverylova/classVector/input_vector_a.txt
deleted file mode 100644
--- a/ZlatomyraSeverylova/classVector/input_vector_a.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 3
Index: yuliamalynovska/homework/classMatrix/const.py
===================================================================
diff --git a/yuliamalynovska/homework/classMatrix/const.py b/yuliamalynovska/homework/classMatrix/const.py
deleted file mode 100644
--- a/yuliamalynovska/homework/classMatrix/const.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,6 +0,0 @@
-INDEX_ERROR = 'list index out of range'
-ZERO_DIVISION = 'float division by zero'
-FILE_NOT_FOUND = 'file not found'
-INPUT_FILE1 = 'input1.txt'
-INPUT_FILE2 = 'input2.txt'
-OUTPUT_FILE = 'output.txt'
Index: LevPredko/fibonacci/input.txt
===================================================================
diff --git a/LevPredko/fibonacci/input.txt b/LevPredko/fibonacci/input.txt
deleted file mode 100644
--- a/LevPredko/fibonacci/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-3 5
\ No newline at end of file
Index: ZlatomyraSeverylova/vector/vector.py
===================================================================
diff --git a/ZlatomyraSeverylova/vector/vector.py b/ZlatomyraSeverylova/vector/vector.py
deleted file mode 100644
--- a/ZlatomyraSeverylova/vector/vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,61 +0,0 @@
-INPUT = 'input_vector.txt'
-OUT = 'out_vector.txt'
-ZERO_DIVISION_ERROR = 'division by zero'
-FILE_NOT_FOUND_ERROR = 'No such file or directory'
-try:
-    with open(INPUT, 'r') as f:
-        vector_a = [int(num) for num in f.readline().split()]
-        vector_b = [int(num) for num in f.readline().split()]
-except FileNotFoundError:
-    print(FILE_NOT_FOUND_ERROR)
-    exit(-1)
-
-
-def vector_sum(vector_a, vector_b):
-    result = []
-    for i in range(len(vector_a)):
-        result.append(vector_a[i] + vector_b[i])
-    return result
-
-
-def vector_difference(vector_a, vector_b):
-    result = []
-    for i in range(len(vector_a)):
-        result.append(vector_a[i] - vector_b[i])
-    return result
-
-
-def vector_mult(vector_a, vector_b):
-    result = []
-    for i in range(len(vector_a)):
-        result.append(vector_a[i] * vector_b[i])
-    return result
-
-
-def vector_div(vector_a, vector_b):
-    result = []
-    for i in range(len(vector_a)):
-        try:
-            result.append(vector_a[i] / vector_b[i])
-        except ZeroDivisionError:
-            print(ZERO_DIVISION_ERROR)
-            exit(-1)
-    return result
-
-
-try:
-    with open(OUT, 'w') as f:
-        f.write("Sum of vector: ")
-        f.write(str(vector_sum(vector_a, vector_b)))
-        f.write("\n")
-        f.write("Difference of vector: ")
-        f.write(str(vector_difference(vector_a, vector_b)))
-        f.write("\n")
-        f.write("Multiplication of vectors: ")
-        f.write(str(vector_mult(vector_a, vector_b)))
-        f.write("\n")
-        f.write("Division of vectors: ")
-        f.write(str(vector_div(vector_a, vector_b)))
-except FileNotFoundError:
-    print(FILE_NOT_FOUND_ERROR)
-    exit(-1)
Index: FlysYurii/Task(LinkedList)/LinkedList.py
===================================================================
diff --git a/FlysYurii/Task(LinkedList)/LinkedList.py b/FlysYurii/Task(LinkedList)/LinkedList.py
deleted file mode 100644
--- a/FlysYurii/Task(LinkedList)/LinkedList.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,104 +0,0 @@
-class Node:
-    def __init__(self, data=None):
-        self.data = data
-        self.next = None
-        self.prev = None
-
-class LinkedList:
-    def __init__(self):
-        self.head = None
-
-    def append(self, data):
-        if not self.head:
-            self.head = Node(data)
-        else:
-            node = self.head
-            while node.next:
-                node = node.next
-            new_node = Node(data)
-            node.next = new_node
-            new_node.prev = node
-
-    def remove(self, data):
-        node = self.head
-        while node:
-            if node.data == data:
-                if node.prev:
-                    node.prev.next = node.next
-                else:
-                    self.head = node.next
-                if node.next:
-                    node.next.prev = node.prev
-                return True
-            node = node.next
-        raise ValueError("Елемент не знайдено в списку")
-
-    def insert(self, index, data):
-        if index == 0:
-            new_node = Node(data)
-            new_node.next = self.head
-            self.head.prev = new_node
-            self.head = new_node
-        else:
-            node = self.head
-            for _ in range(index - 1):
-                if not node:
-                    return False
-                node = node.next
-            if not node:
-                return False
-            new_node = Node(data)
-            new_node.next = node.next
-            new_node.prev = node
-            if node.next:
-                node.next.prev = new_node
-            node.next = new_node
-
-    def clear(self):
-        self.head = None
-
-    def display(self):
-        elements = []
-        node = self.head
-        while node:
-            elements.append(node.data)
-            node = node.next
-        return elements
-
-llist = LinkedList()
-llist.append("A")
-llist.append("B")
-llist.append("C")
-while True:
-    try:
-        print("1. Додати елемент в кінець списку")
-        print("2. Видалити елемент зі списку")
-        print("3. Вставити елемент за індексом")
-        print("4. Очистити список")
-        print("5. Показати список")
-        print("6. Вийти")
-
-        choice = int(input("Введіть ваш вибір: "))
-
-        if choice == 1:
-            data = input("Введіть дані: ")
-            llist.append(data)
-        elif choice == 2:
-            data = input("Введіть дані для видалення: ")
-            llist.remove(data)
-        elif choice == 3:
-            index = int(input("Введіть індекс: "))
-            data = input("Введіть дані: ")
-            llist.insert(index, data)
-        elif choice == 4:
-            llist.clear()
-        elif choice == 5:
-            print(llist.display())
-        elif choice == 6:
-            break
-        else:
-            raise ValueError("Невірний вибір. Будь ласка, введіть число від 1 до 6.")
-    except ValueError as ve:
-        print(f"Помилка вводу або елемент не знайдено: {ve}")
-    except Exception as e:
-        print(f"Сталася помилка: {e}")
Index: LevPredko/MatrixVectorWithoutClass/Vector1read.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithoutClass/Vector1read.txt b/LevPredko/MatrixVectorWithoutClass/Vector1read.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithoutClass/Vector1read.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 3
\ No newline at end of file
Index: MaksymPetukhov/fibonacciNumbers2/write.txt
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers2/write.txt b/MaksymPetukhov/fibonacciNumbers2/write.txt
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers2/write.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[100.0, 200.0, 300.0, 500.0]
\ No newline at end of file
Index: LevPredko/MatrixVectorWithoutClass/Matrix2read.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithoutClass/Matrix2read.txt b/LevPredko/MatrixVectorWithoutClass/Matrix2read.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithoutClass/Matrix2read.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-9 1 4
-5 6 5
\ No newline at end of file
Index: MaksymPetukhov/vectorTask4/output.txt
===================================================================
diff --git a/MaksymPetukhov/vectorTask4/output.txt b/MaksymPetukhov/vectorTask4/output.txt
deleted file mode 100644
--- a/MaksymPetukhov/vectorTask4/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-Addition:
-[1.0, 2.0, 3.0]
-Subtraction:
-[1.0, 2.0, 3.0]
-Multiplication:
-[0.0, 0.0, 0.0]
-Division:
-[0, 0, 0]
Index: BohdanBubniak/02-Vector/vector.py
===================================================================
diff --git a/BohdanBubniak/02-Vector/vector.py b/BohdanBubniak/02-Vector/vector.py
deleted file mode 100644
--- a/BohdanBubniak/02-Vector/vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,39 +0,0 @@
-def read_vectors(filename):
-    with open(filename, 'r') as f:
-        vectors = [list(map(int, line.strip().split(','))) for line in f.readlines()]
-    return vectors
-
-def vector_addition(v1, v2):
-    return [x + y for x, y in zip(v1, v2)]
-
-def vector_subtraction(v1, v2):
-    return [x - y for x, y in zip(v1, v2)]
-
-def vector_multiplication(v1, v2):
-    return [x * y for x, y in zip(v1, v2)]
-
-def vector_division(v1, v2):
-    return [x / y if y != 0 else float('inf') for x, y in zip(v1, v2)]
-
-def start():
-    vectors = read_vectors('vectors.txt')
-
-    if len(vectors) % 2 != 0:
-        print("Error: Expecting pairs of vectors for operations!")
-        return
-
-    results = []
-    for i in range(0, len(vectors), 2):
-        v1 = vectors[i]
-        v2 = vectors[i+1]
-
-        results.append(f"{v1} + {v2} = {vector_addition(v1, v2)}")
-        results.append(f"{v1} - {v2} = {vector_subtraction(v1, v2)}")
-        results.append(f"{v1} * {v2} = {vector_multiplication(v1, v2)}")
-        results.append(f"{v1} / {v2} = {vector_division(v1, v2)}")
-
-    with open('output.txt', 'w') as f:
-        for result in results:
-            f.write(result + '\n')
-            
-start()
\ No newline at end of file
Index: FlysYurii/Task(Matrix and Vectors classes)/result_matrix.txt
===================================================================
diff --git a/FlysYurii/Task(Matrix and Vectors classes)/result_matrix.txt b/FlysYurii/Task(Matrix and Vectors classes)/result_matrix.txt
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and Vectors classes)/result_matrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-6 3
-1 2
Index: BoikoStepan/Fibonachi/main.py
===================================================================
diff --git a/BoikoStepan/Fibonachi/main.py b/BoikoStepan/Fibonachi/main.py
deleted file mode 100644
--- a/BoikoStepan/Fibonachi/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,30 +0,0 @@
-import const
-
-with open(const.INPUT, 'r') as readFile:
-    line = readFile.readline()
-
-numbers = line.split(const.SEPARATOR)
-for i in range(numbers.__len__()):
-   numbers[i] = int(numbers[i])
-for i in range(0, 8):
-    numbers.append(numbers[i] + numbers[i + 1])
-
-print(numbers)
-with open(const.OUTPUT, 'w') as writeFile:
-    writeFile.write(str(numbers))
-"""file = open('input.txt')
-line = file.read()
-file.close()
-numbers = line.split(",")
-
-
-for i in range(numbers.__len__()):
-   numbers[i] = int(numbers[i])
-file = open('output.txt', 'w')
-
-for i in range(0, 15):
-   numbers.append(numbers[i] + numbers[i+1])
-
-file.write(str(numbers))
-file.close()
-"""
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/SecondVector.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/SecondVector.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/SecondVector.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/SecondVector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-5 4 3 2 1
\ No newline at end of file
Index: AnastasiaPelyno/Matrix_Plus_Minus/matrix_2.txt
===================================================================
diff --git a/AnastasiaPelyno/Matrix_Plus_Minus/matrix_2.txt b/AnastasiaPelyno/Matrix_Plus_Minus/matrix_2.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Matrix_Plus_Minus/matrix_2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-9 8 7
-6 5 4
-3 2 1
\ No newline at end of file
Index: AnastasiaPelyno/MATRIX_CLASS/matrix_one.txt
===================================================================
diff --git a/AnastasiaPelyno/MATRIX_CLASS/matrix_one.txt b/AnastasiaPelyno/MATRIX_CLASS/matrix_one.txt
deleted file mode 100644
--- a/AnastasiaPelyno/MATRIX_CLASS/matrix_one.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-3 2 1
-2 1 3
\ No newline at end of file
Index: RostyslavPasternak/Homework/Abstract_class/Shape/Сircle.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Abstract_class/Shape/Сircle.py b/RostyslavPasternak/Homework/Abstract_class/Shape/Сircle.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Abstract_class/Shape/Сircle.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,15 +0,0 @@
-from Shape import Shape
-from math import pi
-from RostyslavPasternak.Homework.Abstract_class.Shape.Colors import *
-class Circle(Shape):
-    def __init__(self,radius: float, color: Color):
-        super().__init__(color)
-        self.radius = radius
-
-    def __str__(self):
-        return f"Radius: {self.radius}\nColor: {self.color}\nPerimeter: {self.get_perimeter()}\nArea: {self.get_area()}"
-    def get_perimeter(self) -> float:
-        return 2 * pi * self.radius
-    def get_area(self) -> float:
-        return pi * (self.radius ** 2)
-
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/OutputMatrix.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/OutputMatrix.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/OutputMatrix.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/OutputMatrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,16 +0,0 @@
-Matrix Sum:
-[4, 4, 6]
-[9, 6, 7]
-[5, 7, 3]
-Matrix Subtract:
-[2, 0, 0]
-[1, -4, 1]
-[1, 1, 1]
-Matrix Multiplication:
-[17, 25, 18]
-[17, 27, 22]
-[23, 32, 23]
-Matrix Division:
-[16, 31, 15]
-[19, 37, 17]
-[17, 38, 20]
Index: LevPredko/MatrixVectorWithoutClass/output2.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithoutClass/output2.txt b/LevPredko/MatrixVectorWithoutClass/output2.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithoutClass/output2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-
Index: RostyslavPasternak/Homework/Vector_Matrix/class/standart/vector.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/vector.txt b/RostyslavPasternak/Homework/Vector_Matrix/class/standart/vector.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-12 12 324 324 12 1
\ No newline at end of file
Index: anastasiia_trushchak/Homework/Homework_02/VectorClass/inputVector2.txt
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_02/VectorClass/inputVector2.txt b/anastasiia_trushchak/Homework/Homework_02/VectorClass/inputVector2.txt
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_02/VectorClass/inputVector2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 6 8
\ No newline at end of file
Index: RostyslavPasternak/Practical/Practical_1/output.txt
===================================================================
diff --git a/RostyslavPasternak/Practical/Practical_1/output.txt b/RostyslavPasternak/Practical/Practical_1/output.txt
deleted file mode 100644
--- a/RostyslavPasternak/Practical/Practical_1/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[1.0, 10.0, 11.0, 21.0, 32.0, 53.0, 85.0, 138.0, 223.0, 361.0]
\ No newline at end of file
Index: Oleh Kaliuzhnyi/VectorClass/vector_two.txt
===================================================================
diff --git a/Oleh Kaliuzhnyi/VectorClass/vector_two.txt b/Oleh Kaliuzhnyi/VectorClass/vector_two.txt
deleted file mode 100644
--- a/Oleh Kaliuzhnyi/VectorClass/vector_two.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 3 4
\ No newline at end of file
Index: BohdanBubniak/02-Vector/vectors.txt
===================================================================
diff --git a/BohdanBubniak/02-Vector/vectors.txt b/BohdanBubniak/02-Vector/vectors.txt
deleted file mode 100644
--- a/BohdanBubniak/02-Vector/vectors.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,4 +0,0 @@
-1,2,3
-4,5,6
-7,8,9
-10,11,12
Index: LevPredko/MatrixVectorWithClass_2/Vector1.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_2/Vector1.txt b/LevPredko/MatrixVectorWithClass_2/Vector1.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_2/Vector1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 3
\ No newline at end of file
Index: LevPredko/MatrixVectorWithClass_3/Matrix1read.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_3/Matrix1read.txt b/LevPredko/MatrixVectorWithClass_3/Matrix1read.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_3/Matrix1read.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-4 5 6
-7 8 9
Index: LevPredko/MatrixVectorWithClass_1/inputMatrix1.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_1/inputMatrix1.txt b/LevPredko/MatrixVectorWithClass_1/inputMatrix1.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_1/inputMatrix1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-4 5 6
-7 8 9
Index: ZlatomyraSeverylova/classMatrix/class_matrix.py
===================================================================
diff --git a/ZlatomyraSeverylova/classMatrix/class_matrix.py b/ZlatomyraSeverylova/classMatrix/class_matrix.py
deleted file mode 100644
--- a/ZlatomyraSeverylova/classMatrix/class_matrix.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,115 +0,0 @@
-FILE_NOT_FOUND_ERROR = 'File not found'
-INDEX_ERROR = 'list index ot of range'
-ZERO_DIVISION_ERROR = 'division by zero'
-TYPE_ERROR = 'NoneType object is not subscriptable'
-
-class Matrix:
-    def __init__(self, matrix):
-        self.matrix = matrix
-
-    def __add__(self, other):
-        try:
-            return [[self.matrix[i][j] + other.matrix[i][j] for j in range(len(self.matrix[0]))] for i in range(len(self.matrix))]
-        except IndexError:
-            print(INDEX_ERROR)
-            exit(-1)
-
-    def __sub__(self, other):
-        try:
-            return [[self.matrix[i][j] - other.matrix[i][j] for j in range(len(self.matrix[0]))] for i in range(len(self.matrix))]
-        except IndexError:
-            print(INDEX_ERROR)
-            exit(-1)
-
-    def __mul__(self, other):
-        try:
-            result = []
-            for i in range(len(self.matrix)):
-                row = []
-                for j in range(len(other.matrix[0])):
-                    product = 0
-                    for v in range(len(self.matrix[i])):
-                        product += self.matrix[i][v] * other.matrix[v][j]
-                    row.append(product)
-                result.append(row)
-            return result
-        except TypeError:
-            print(TYPE_ERROR)
-            exit(-1)
-
-    def transpose_matrix(matrix):
-        transpose = list(map(list, zip(*matrix)))
-        return transpose
-
-    def minor_matrix(matrix, i, j):
-        return [row[:j] + row[j+1:] for row in (matrix[:i] + matrix[i + 1:])]
-
-    def determinant_matrix(matrix):
-        if len(matrix) == 2:
-            return matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0]
-        determinant = 0
-        for c in range(len(matrix)):
-            try:
-                determinant += ((-1)**c) * matrix[0][c] * Matrix.determinant_matrix(Matrix.minor_matrix(matrix, 0, c))
-            except IndexError:
-                print(INDEX_ERROR)
-                exit(-1)
-        return determinant
-
-    def inverse_matrix(matrix):
-        determinant = Matrix.determinant_matrix(matrix)
-        if determinant == 0:
-            return
-
-        if len(matrix) == 2:
-            return [[matrix[1][1] / determinant, -1 * matrix[0][1] / determinant],
-                    [-1 * matrix[1][0] / determinant, matrix[0][0] / determinant]]
-        cofactors = []
-        for r in range(len(matrix)):
-            cofactor_row = []
-            for c in range(len(matrix)):
-                minor = Matrix.minor_matrix(matrix, r, c)
-                cofactor_row.append(((-1)**(r+c)) * Matrix.determinant_matrix(minor))
-            cofactors.append(cofactor_row)
-
-        result = Matrix.transpose_matrix(cofactors)
-
-        for r in range(len(result)):
-            for c in range(len(result)):
-                try:
-                    result[r][c] = result[r][c]/determinant
-                except ZeroDivisionError:
-                    print(ZERO_DIVISION_ERROR)
-                    exit(-1)
-        return result
-
-    def __truediv__(self, other):
-        result = []
-        for i in range(len(self.matrix)):
-            row = []
-            for j in range(len(Matrix.inverse_matrix(other.matrix)[0])):
-                product = 0
-                for v in range(len(self.matrix[i])):
-                    product += self.matrix[i][v] * Matrix.inverse_matrix(other.matrix)[v][j]
-                row.append(product)
-            result.append(row)
-        return result
-
-    def read(filename):
-        try:
-            with open(filename, 'r') as file:
-                matrix = [[float(num) for num in line.split()] for line in file]
-            return Matrix(matrix)
-        except FileNotFoundError:
-            print(FILE_NOT_FOUND_ERROR)
-            exit(-1)
-
-    def write(filename, text, matrix):
-        try:
-            with open(filename, 'a') as file:
-                file.write(text)
-                file.write(str(matrix))
-                file.write('\n')
-        except FileNotFoundError:
-            print(FILE_NOT_FOUND_ERROR)
-            exit(-1)
Index: RostyslavPasternak/Homework/Vector_Matrix/class/numpy/Vector.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/Vector.py b/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/Vector.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/Vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,44 +0,0 @@
-import numpy as np
-class Vector:
-    def __init__(self, vector):
-        self.vector = vector
-        self.size = vector.size
-    @classmethod
-    def random(cls,size):
-        vector = np.random.randint(1, 11, size = size)
-        return cls(vector)
-    @classmethod
-    def from_file(cls, file_name):
-        vector = np.loadtxt(file_name, dtype=int,delimiter=" ")
-        return cls(vector)
-    def __str__(self):
-        return self.vector.__str__();
-    def append(self, new_element):
-        self.vector = np.append(self.vector, new_element)
-    def __add__(self, other):
-        if isinstance(other, Vector):
-            if self.size == other.size:
-                return Vector(self.vector + other.vector)
-        elif isinstance(other, (int, float)):
-            return Vector(self.vector + other)
-    def __sub__(self, other):
-        if isinstance(other, Vector):
-            if self.size == other.size:
-                return Vector(self.vector - other.vector)
-        elif isinstance(other, (int, float)):
-            return Vector(self.vector - other)
-    def __mul__(self, other):
-        if isinstance(other, Vector):
-            if self.size == other.size:
-                return Vector(self.vector * other.vector)
-        elif isinstance(other, (int, float)):
-            return Vector(self.vector * other)
-    def __truediv__(self, other):
-        if isinstance(other, Vector):
-            if self.size == other.size:
-                return Vector(self.vector / other.vector)
-        elif isinstance(other, (int, float)):
-            return Vector(self.vector / other)
-    def str_to_file(self, file_name="result.txt"):
-        with open(file_name, 'w') as writeFile:
-            writeFile.write(str(self))
\ No newline at end of file
Index: BohdanBubniak/01-Fibonacci/input.txt
===================================================================
diff --git a/BohdanBubniak/01-Fibonacci/input.txt b/BohdanBubniak/01-Fibonacci/input.txt
deleted file mode 100644
--- a/BohdanBubniak/01-Fibonacci/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-4,7
\ No newline at end of file
Index: Oles Prokopiv/homework/fibonacci/main.py
===================================================================
diff --git a/Oles Prokopiv/homework/fibonacci/main.py b/Oles Prokopiv/homework/fibonacci/main.py
deleted file mode 100644
--- a/Oles Prokopiv/homework/fibonacci/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,15 +0,0 @@
-first = "input.txt"
-second = "output.txt"
-
-with open(first, "r") as file:
-    original_file = file.read()
-fibonacci = original_file.split()
-
-for i in range(0, 2):
-    fibonacci[i] = float(fibonacci[i])
-
-for i in range(2, 10):
-    fibonacci.append(fibonacci[i - 1] + fibonacci[i - 2])
-
-with open(second, "w") as new:
-    new.write(str(fibonacci))
\ No newline at end of file
Index: MaksymPetukhov/matrixTask5/input.txt
===================================================================
diff --git a/MaksymPetukhov/matrixTask5/input.txt b/MaksymPetukhov/matrixTask5/input.txt
deleted file mode 100644
--- a/MaksymPetukhov/matrixTask5/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,7 +0,0 @@
-1,0,0
-0,1,0
-0,0,1
-
-0,0,0
-0,0,0
-0,0,0
\ No newline at end of file
Index: MaksymPetukhov/fibonacciNumbers/constants.py
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers/constants.py b/MaksymPetukhov/fibonacciNumbers/constants.py
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers/constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-INPUT_FILE = "read.txt"
-OUTPUT_FILE = "write.txt"
-SEPARATOR = ','
\ No newline at end of file
Index: RostyslavPasternak/Practical/Practical_1/main.py
===================================================================
diff --git a/RostyslavPasternak/Practical/Practical_1/main.py b/RostyslavPasternak/Practical/Practical_1/main.py
deleted file mode 100644
--- a/RostyslavPasternak/Practical/Practical_1/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,17 +0,0 @@
-INPUT = 'input.txt'
-OUTPUT = 'output.txt'
-SEPARATOR = ","
-
-import const
-
-with open(const.INPUT, 'r') as readFile:
-    line = readFile.readline()
-
-array = line.split(const.SEPARATOR)
-array = [float(i) for i in array if i.isdigit()]
-for i in range(0, 8):
-    array.append(array[i] + array[i + 1])
-
-print(array)
-with open(const.OUTPUT, 'w') as writeFile:
-    writeFile.write(str(array))
\ No newline at end of file
Index: FlysYurii/Task(Structure)/students.txt
===================================================================
diff --git a/FlysYurii/Task(Structure)/students.txt b/FlysYurii/Task(Structure)/students.txt
deleted file mode 100644
--- a/FlysYurii/Task(Structure)/students.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-Sasha Mozil 2004-1-21 5,4,3,2,5
-Maksym Petukhov 2005-05-03 4,4,4,5,5
-Yurii Flys 1998-05-24 2,2,3,2,2
Index: ZlatomyraSeverylova/matrix/out_matrix.txt
===================================================================
diff --git a/ZlatomyraSeverylova/matrix/out_matrix.txt b/ZlatomyraSeverylova/matrix/out_matrix.txt
deleted file mode 100644
--- a/ZlatomyraSeverylova/matrix/out_matrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,4 +0,0 @@
-Sum of matrix: []
-Difference of matrix: []
-Multiply of matrix: []
-Division of matrix: []
\ No newline at end of file
Index: FlysYurii/Task(Matrix and Vectors classes)/Vector(Class).py
===================================================================
diff --git a/FlysYurii/Task(Matrix and Vectors classes)/Vector(Class).py b/FlysYurii/Task(Matrix and Vectors classes)/Vector(Class).py
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and Vectors classes)/Vector(Class).py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,71 +0,0 @@
-class Vector:
-    def __init__(self, vector):
-        self.vector = vector
-
-    @classmethod
-    def from_file(cls, filename):
-        try:
-            with open(filename, 'r') as f:
-                vector = [float(num) for num in f.readline().split(',')]
-            return cls(vector)
-        except Exception as e:
-            print(f"Error reading vector from file: {e}")
-            return None
-
-    def write_vector(self, filename):
-        try:
-            with open(filename, 'w') as f:
-                f.write(', '.join(['{:0.5g}'.format(x) for x in self.vector]) + '\n')
-        except Exception as e:
-            print(f"Error writing vector to file: {e}")
-
-    def vector_add(self, other_vector):
-        if len(self.vector) != len(other_vector):
-            print("Error: Vectors must have the same length for addition.")
-            return None
-        return [self.vector[i] + other_vector[i] for i in range(len(self.vector))]
-
-    def vector_subtract(self, other_vector):
-        if len(self.vector) != len(other_vector):
-            print("Error: Vectors must have the same length for subtraction.")
-            return None
-        return [self.vector[i] - other_vector[i] for i in range(len(self.vector))]
-
-    def vector_multiply(self, other_vector):
-        if len(self.vector) != len(other_vector):
-            print("Error: Vectors must have the same length for multiplication.")
-            return None
-        return [self.vector[i] * other_vector[i] for i in range(len(self.vector))]
-
-    def vector_divide(self, other_vector):
-        try:
-            if len(self.vector) != len(other_vector):
-                print("Error: Vectors must have the same length for division.")
-                return None
-            return [self.vector[i] / other_vector[i] for i in range(len(self.vector))]
-        except ZeroDivisionError:
-            print("Error: Division by zero is not allowed.")
-            return None
-
-
-vector = Vector.from_file('../Task(Matrix and vectors)/vectors.txt')
-other_vector = Vector.from_file('../Task(Matrix and vectors)/other_vector.txt')
-other_vector1= Vector.from_file('../Task(Matrix and vectors)/other_vector1.txt')
-if vector is not None:
-    operation = input("Enter operation (add, subtract, multiply, divide): ")
-
-
-    if operation == 'add':
-        result = vector.vector_add(other_vector.vector)
-    elif operation == 'subtract':
-        result = vector.vector_subtract(other_vector.vector)
-    elif operation == 'multiply':
-        result = vector.vector_multiply(other_vector.vector)
-    elif operation == 'divide':
-        result = vector.vector_divide(other_vector.vector)
-    else:
-        print("Invalid operation")
-
-    if result is not None:
-        print(', '.join('{:0.5g}'.format(x) for x in result))
-        vector.write_vector('result_vector.txt')
Index: Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/Fibonaci.py
===================================================================
diff --git a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/Fibonaci.py b/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/Fibonaci.py
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/Fibonaci.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,13 +0,0 @@
-import copy
-
-class Fibonacci:
-    def __init__(self, initial_numbers=None, limit=None):
-        self.initial_numbers = initial_numbers
-        self.limit = limit
-
-    def fibonacci(self):
-        sequence = copy.deepcopy(self.initial_numbers)
-        while sequence[-1] + sequence[-2] <= self.limit:
-            next_number = sequence[-1] + sequence[-2]
-            sequence.append(next_number)
-        return sequence
Index: MaksymPetukhov/fibonacciNumbers3/main.py
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers3/main.py b/MaksymPetukhov/fibonacciNumbers3/main.py
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers3/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,62 +0,0 @@
-# Practical - 15.09.2023
-import os
-
-import constants
-
-
-class FileIsEmpty(Exception):
-
-    def __init__(self, message="File is empty!"):
-        self.message = message
-        super().__init__(self.message)
-
-
-try:
-    with open(constants.INPUT_FILE, 'r') as rf:
-        if os.path.getsize(constants.INPUT_FILE) == 0:
-            raise FileIsEmpty
-        line = rf.readline()
-
-    with open(constants.PARAMETERS_FILE, 'r') as rf:
-        breakPoint = float(rf.readline())
-
-except FileNotFoundError as e:
-    print(e)
-
-array = line.split(constants.SEPARATOR)
-
-array = [float(i) for i in array if i.isdigit()]
-
-
-class Fibonacci:
-
-    def __init__(self, array, breakPoint):
-        self.numbers = array
-        self.breakPoint = breakPoint
-
-    def addFibonacci(self, arr, i):
-        result = arr
-        if i == 0:
-            result.append(self.numbers[i])
-            result.append(self.numbers[i + 1])
-            result.append(self.numbers[i] + self.numbers[i + 1])
-            self.addFibonacci(result, i + 1)
-        else:
-            number = lambda x: x[i] + x[i + 1]
-            num = number(result)
-            if num < breakPoint:
-                result.append(num)
-                self.addFibonacci(result, i + 1)
-
-        return result
-
-
-result = Fibonacci(array, breakPoint)
-breakP = result.addFibonacci([], 0)
-breakP.__len__()
-
-try:
-    with open(constants.OUTPUT_FILE, 'w') as wf:
-        wf.write(str(breakP))
-except FileNotFoundError as e:
-    print(e)
Index: Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/fileLimit.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/fileLimit.txt b/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/fileLimit.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/fileLimit.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-72000
\ No newline at end of file
Index: Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/Main.py
===================================================================
diff --git a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/Main.py b/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/Main.py
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/Main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,37 +0,0 @@
-from typing import Final
-
-from Vasylyshyn_Dmytro.TasksFromLessons.Lesson_2_15_09.Fibonaci import Fibonacci
-
-name_input_limit_file: Final[str] = 'fileLimit.txt'
-name_input_numbers_file: Final[str] = 'file.txt'
-name_output_file: Final[str] = 'output.txt'
-
-try:
-    with open(name_input_limit_file, 'r') as data:
-        limit = data.readline()
-
-    with open(name_input_numbers_file, 'r') as data:
-         fibonacci= data.readline().split()
-
-    fibonacci = [int(num) for num in fibonacci]
-    lambda limit:float(limit)
-
-
-except FileNotFoundError:
-    print(f"Error:File'{name_input_numbers_file}'or '{name_input_limit_file}'not found.")
-except ValueError:
-    print(f"Oops, sorry, but you must write a number not'{fibonacci, limit}'")
-
-try:
-    result = Fibonacci(fibonacci,limit)
-    with open(name_output_file, 'a') as file:
-        file.write(str(result.fibonacci()))
-        file.write('\n')
-
-except FileNotFoundError:
-    print(f"Error:File'{name_output_file}'not found")
-
-
-# if file is empty, how should I do except?
-# how to do constructors without parameters?
-
Index: RostyslavPasternak/Homework/Vector_Matrix/class/numpy/Matrix.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/Matrix.py b/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/Matrix.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/numpy/Matrix.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,59 +0,0 @@
-import numpy as np
-
-class Matrix:
-    def __init__(self, matrix):
-        self.matrix = matrix
-        self.row = matrix.shape[0]
-        self.column = matrix.shape[1]
-
-    @classmethod
-    def random(cls, row, column, a=1, b=11):
-        matrix = np.random.randint(a, b, size=(row, column))
-        return cls(matrix)
-    @classmethod
-    def from_file(cls, file_name):
-        matrix = np.loadtxt(file_name, dtype=int, delimiter=" ")
-        return cls(matrix)
-    def str_to_file(self, file_name="result.txt"):
-        with open(file_name, 'w') as writeFile:
-            writeFile.write(str(self))
-    def __str__(self):
-        matrix_str = ""
-        for row in self.matrix:
-            matrix_str += "\t".join(map(str, row)) + "\n"
-        return matrix_str
-    def __add__(self, other):
-        if isinstance(other, Matrix):
-            if self.row == other.row and self.column == other.column:
-                return Matrix(self.matrix + other.matrix)
-            return None
-        elif isinstance(other, (int,float)):
-            return Matrix(self.matrix + other)
-    def __sub__(self, other):
-        if isinstance(other, Matrix):
-            if self.row == other.row and self.column == other.column:
-                return Matrix(self.matrix - other.matrix)
-            return None
-        elif isinstance(other, (int,float)):
-            return Matrix(self.matrix - other)
-    def __truediv__(self, other):
-        if isinstance(other, Matrix):
-            if self.row == other.row and self.column == other.column:
-                return Matrix(np.divide(self.matrix, other.matrix))
-            return None
-        elif isinstance(other, (int, float)):
-            # return Matrix(np.divide(self.matrix, other))
-            return Matrix(self.matrix/other)
-
-    def __mul__(self, other):
-        if isinstance(other, Matrix):
-            if self.row == other.column:
-                return Matrix(self.matrix.dot(other.matrix))
-            return None
-        elif isinstance(other, (int, float)):
-            return Matrix(self.matrix.dot(other))
-    def inverse(self):
-        det = np.linalg.det(self.matrix)
-        if det != 0:
-            return Matrix(np.linalg.inv(self.matrix))
-        return None
\ No newline at end of file
Index: RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/result.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/result.txt b/RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/result.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/Functions/Vector/result.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[1.4137931034482758, 0.2222222222222222, 11.181818181818182, 20.5, 1.0, 0.0011560693641618498]
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/main.py
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/main.py b/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/main.py
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,42 +0,0 @@
-from Vasylyshyn_Dmytro.HomeWork.Lesson_2_Matrix_Clas.Task_Vector import Vector
-from typing import Final
-
-name_input_numbers_first_file: Final[str] = 'first_vector.txt'
-name_input_numbers_second_file: Final[str] = 'second_vector.txt'
-name_output_file: Final[str] = 'output_vector.txt'
-
-
-def write_data(file_name, results):
-    try:
-        with open(file_name, 'a') as file:
-            for result in results:
-                file.write(str(result))
-                file.write('\n')
-    except FileNotFoundError:
-        print(f"Error: File '{file_name}' not found.")
-
-
-def read_data(file_name):
-    try:
-        with open(file_name, 'r') as data:
-            vector = data.readline().split()
-
-        vector = [float(x) for x in vector]
-        return vector
-    except FileNotFoundError:
-        print(f"Error: File '{file_name}' not found.")
-    except ValueError as e:
-        print(f"Oops, sorry, but you must write a number: {e}")
-
-
-first_vector = read_data(name_input_numbers_first_file)
-second_vector = read_data(name_input_numbers_second_file)
-
-vector = Vector(first_vector, second_vector)
-
-result_sum = vector + vector
-result_subtraction = vector - vector
-result_division = vector / vector
-result_multiplication = vector * vector
-
-write_data(name_output_file, [result_sum, result_subtraction, result_division, result_multiplication])
Index: FlysYurii/Task(Fibonacci)/task_1.py
===================================================================
diff --git a/FlysYurii/Task(Fibonacci)/task_1.py b/FlysYurii/Task(Fibonacci)/task_1.py
deleted file mode 100644
--- a/FlysYurii/Task(Fibonacci)/task_1.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,36 +0,0 @@
-import constants
-
-def fibonacci_sum_recursive(sequence, limit):
-    try:
-        if sequence[-1] + sequence[-2] < limit:
-            sequence.append(sequence[-1] + sequence[-2])
-            return fibonacci_sum_recursive(sequence, limit)
-        else:
-            return sequence
-    except Exception as e:
-        print(f"Error occurred in recursive function: {e}")
-
-try:
-    with open(constants.INPUT, 'r') as file:
-        numbers = file.readline().split()
-        for i in range(len(numbers)):
-            numbers[i] = int(numbers[i])
-except Exception as e:
-    print(f"Error reading file {constants.INPUT}: {e}")
-
-try:
-    with open(constants.NUMBER, 'r') as file:
-        number = int(file.readline())
-except Exception as e:
-    print(f"Error reading file {constants.NUMBER}: {e}")
-
-for num in fibonacci_sum_recursive(numbers, number):
-    print(num, end=' ')
-
-try:
-    with open(constants.OUTPUT, 'w') as f:
-        f.write("Result:\n ")
-        for num in fibonacci_sum_recursive(numbers, number):
-            f.write(str(num) + ' ')
-except Exception as e:
-    print(f"Error writing to file {constants.OUTPUT}: {e}")
Index: FlysYurii/Task(Matrix and vectors)/Vector.py
===================================================================
diff --git a/FlysYurii/Task(Matrix and vectors)/Vector.py b/FlysYurii/Task(Matrix and vectors)/Vector.py
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and vectors)/Vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,61 +0,0 @@
-
-def read_vectors(filename):
-    try:
-        with open(filename, 'r') as f:
-            vectorA = [float(num) for num in f.readline().split(',')]
-            vectorB = [float(num) for num in f.readline().split(',')]
-        return vectorA, vectorB
-    except Exception as e:
-        print(f"Error reading vectors from file: {e}")
-        return None, None
-
-
-def write_vector(filename, vector):
-    try:
-        with open(filename, 'w') as f:
-            f.write(', '.join(['{:0.5g}'.format(x) for x in vector]) + '\n')
-    except Exception as e:
-        print(f"Error writing vector to file: {e}")
-
-
-def vector_add(A, B):
-    return [A[i] + B[i] for i in range(len(A))]
-
-
-def vector_subtract(A, B):
-    return [A[i] - B[i] for i in range(len(A))]
-
-
-def vector_multiply(A, B):
-    return [A[i] * B[i] for i in range(len(A))]
-
-
-def vector_divide(A, B):
-    try:
-        return [A[i] / B[i] for i in range(len(A))]
-    except ZeroDivisionError:
-        print("Error: Division by zero is not allowed.")
-        return None
-
-
-VectorA, VectorB = read_vectors('vectors.txt')
-if VectorA is None or VectorB is None:
-    print("Exiting due to error.")
-else:
-    operation = input("Enter operation (add, subtract, multiply, divide): ")
-    if operation == 'add':
-        result = vector_add(VectorA, VectorB)
-    elif operation == 'subtract':
-        result = vector_subtract(VectorA, VectorB)
-    elif operation == 'multiply':
-        result = vector_multiply(VectorA, VectorB)
-    elif operation == 'divide':
-        result = vector_divide(VectorA, VectorB)
-        if result is None:
-            print("Exiting due to error.")
-    else:
-        print("Invalid operation")
-
-    if result is not None:
-        print(', '.join('{:0.5g}'.format(x) for x in result))
-        write_vector('result_vector.txt', result)
Index: MaksymPetukhov/vectorTask2/constants.py
===================================================================
diff --git a/MaksymPetukhov/vectorTask2/constants.py b/MaksymPetukhov/vectorTask2/constants.py
deleted file mode 100644
--- a/MaksymPetukhov/vectorTask2/constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-INPUT_FILE = "input.txt"
-OUTPUT_FILE = "output.txt"
-SEPARATOR = ','
Index: yuliamalynovska/homework/vector/outputVector.txt
===================================================================
diff --git a/yuliamalynovska/homework/vector/outputVector.txt b/yuliamalynovska/homework/vector/outputVector.txt
deleted file mode 100644
--- a/yuliamalynovska/homework/vector/outputVector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,7 +0,0 @@
-Addition:
-[3.0, 5.0, 4.0]
-Subtraction:
-[-1.0, -1.0, 4.0]
-Multiplication:
-[2.0, 6.0, 0.0]
-Division:
Index: AnastasiaPelyno/Vector_Operations/vectors.txt
===================================================================
diff --git a/AnastasiaPelyno/Vector_Operations/vectors.txt b/AnastasiaPelyno/Vector_Operations/vectors.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Vector_Operations/vectors.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-1 2 3
-3 2 1
\ No newline at end of file
Index: LevPredko/MatrixVectorWithClass_1/matrix_vector.py
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_1/matrix_vector.py b/LevPredko/MatrixVectorWithClass_1/matrix_vector.py
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_1/matrix_vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,73 +0,0 @@
-import numpy as np
-
-class Matrix:
-    def __init__(self):
-
-        self.matrix1 = np.loadtxt("inputMatrix1.txt", dtype='i', delimiter=' ')
-        self.matrix2 = np.loadtxt("inputMatrix2.txt", dtype='i', delimiter=' ')
-
-    def perform_operation(self, operation):
-        if operation == '+':
-            return self.matrix1 + self.matrix2
-        elif operation == '-':
-            return self.matrix1 - self.matrix2
-        elif operation == '*':
-            return np.dot(self.matrix1, self.matrix2)
-        elif operation == '/':
-            return np.divide(self.matrix1, self.matrix2)
-        elif operation == "*'":
-            if np.linalg.det(self.matrix2) != 0:
-                matrix2T = np.linalg.inv(self.matrix2)
-                return np.dot(self.matrix1, matrix2T)
-            else:
-                print("In the matrix you entered, the determinant is 0, so choose another operation")
-                return None
-        else:
-            print("Invalid operation")
-            return None
-
-    def save_result(self, result_filename, result):
-        if result is not None:
-            np.savetxt(result_filename, result, fmt='%d')
-
-
-class Vector:
-    def __init__(self):
-        self.vector1 = np.loadtxt("inputVector1.txt", dtype='i', delimiter=' ')
-        self.vector2 = np.loadtxt("inputVector2.txt", dtype='i', delimiter=' ')
-
-    def perform_operation(self, operation):
-        if operation == '+':
-            return self.vector1 + self.vector2
-        elif operation == '-':
-            return self.vector1 - self.vector2
-        elif operation == '*':
-            return self.vector1 * self.vector2
-        elif operation == '/':
-            return self.vector1 / self.vector2
-        else:
-            print("Invalid operation")
-            return None
-
-    def save_result(self, result_filename, result):
-        if result is not None:
-            np.savetxt(result_filename, result.reshape(1, -1), fmt='%d', delimiter=' ')
-
-
-if __name__ == "__main__":  #відбувається перевірка, чи код виконується  як головний програмний модуль
-    choice = input("Matrix or Vector? (M or V):")
-    result_filename = "output.txt"
-
-    if choice == 'M':
-        matrix = Matrix()
-        operation = input("Enter the operation (+, -, *, /, *'): ")
-        result = matrix.perform_operation(operation)
-        matrix.save_result(result_filename, result)
-
-    elif choice == 'V':
-        vector = Vector()
-        operation = input("Enter the operation (+, -, *, /): ")
-        result = vector.perform_operation(operation)
-        vector.save_result(result_filename, result)
-    else:
-        print("Invalid choice")
\ No newline at end of file
Index: FlysYurii/Task(Matrix and vectors)/matrix_A.txt
===================================================================
diff --git a/FlysYurii/Task(Matrix and vectors)/matrix_A.txt b/FlysYurii/Task(Matrix and vectors)/matrix_A.txt
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and vectors)/matrix_A.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-6 3
-1 2
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/ьфшшт.py
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/ьфшшт.py b/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/ьфшшт.py
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/Task_Vector/ьфшшт.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,46 +0,0 @@
-class Vector:
-    def __init__(self, first_vector, second_vector):
-        self.first_vector = first_vector
-        self.second_vector = second_vector
-
-    def perform_operations(self):
-        sum_result = [a + b for a, b in zip(self.first_vector, self.second_vector)]
-        subtraction_result = [a - b for a, b in zip(self.first_vector, self.second_vector)]
-        division_result = [a / b for a, b in zip(self.first_vector, self.second_vector)]
-        multiplication_result = [a * b for a, b in zip(self.first_vector, self.second_vector)]
-
-        return sum_result, subtraction_result, division_result, multiplication_result
-
-def write_data(file_name, results):
-    try:
-        with open(file_name, 'a') as file:
-            for result in results:
-                file.write(str(result))
-                file.write('\n')
-    except FileNotFoundError:
-        print(f"Error: File '{file_name}' not found.")
-def read_data(file_name):
-    try:
-        with open(file_name, 'r') as data:
-            vector = data.readline().split()
-
-        vector = [float(x) for x in vector]
-        return vector
-    except FileNotFoundError:
-        print(f"Error: File '{file_name}' not found.")
-    except ValueError as e:
-        print(f"Oops, sorry, but you must write a number: {e}")
-
-
-from typing import Final
-
-name_input_numbers_first_file: Final[str] = 'first_vector.txt'
-name_input_numbers_second_file: Final[str] = 'second_vector.txt'
-name_output_file: Final[str] = 'output_vector.txt'
-
-first_vector = read_data(name_input_numbers_first_file)
-second_vector = read_data(name_input_numbers_second_file)
-vector_calculator = Vector(first_vector, second_vector)
-results = vector_calculator.perform_operations()
-print(results)
-write_data(name_output_file, results)
\ No newline at end of file
Index: anastasiia_trushchak/Homework/Homework_01/Vector/vector2.txt
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_01/Vector/vector2.txt b/anastasiia_trushchak/Homework/Homework_01/Vector/vector2.txt
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_01/Vector/vector2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-4 5 6
\ No newline at end of file
Index: yuliamalynovska/homework/classMatrix/input2.txt
===================================================================
diff --git a/yuliamalynovska/homework/classMatrix/input2.txt b/yuliamalynovska/homework/classMatrix/input2.txt
deleted file mode 100644
--- a/yuliamalynovska/homework/classMatrix/input2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-0 1 2
-3 10 9
Index: BoikoStepan/Matrix/SMatrix.txt
===================================================================
diff --git a/BoikoStepan/Matrix/SMatrix.txt b/BoikoStepan/Matrix/SMatrix.txt
deleted file mode 100644
--- a/BoikoStepan/Matrix/SMatrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-0 0 0
-0 0 0
-0 0 0
\ No newline at end of file
Index: MariaKravchuk/Vector/main.py
===================================================================
diff --git a/MariaKravchuk/Vector/main.py b/MariaKravchuk/Vector/main.py
deleted file mode 100644
--- a/MariaKravchuk/Vector/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,103 +0,0 @@
-def input_vector_file(name_file):
-    vector = []
-    try:
-        with open(name_file, 'r') as file:
-            for line in file:
-                row = [int(x) for x in line.strip().split()]
-                vector.append(row)
-        return vector
-    except FileNotFoundError:
-        print(f"Error: File '{name_file}' not found.")
-        return None
-
-def result_in_file(matrix, file_name, label):
-    with open(file_name, 'a') as file:
-        file.write(label + ":\n")
-        for row in matrix:
-            file.write(' '.join(map(str, row)) + '\n')
-        file.write('\n')
-
-def multiply_vectors(first_vector, second_vector):
-    if len(first_vector) != len(second_vector) or len(first_vector[0]) != len(second_vector[0]):
-        return None
-    result = []
-    for i in range(len(first_vector)):
-        row = []
-        for j in range(len(first_vector[0])):
-            row.append(first_vector[i][j] * second_vector[i][j])
-        result.append(row)
-    return result
-
-def add_vectors(first_vector, second_vector):
-    if len(first_vector) != len(second_vector) or len(first_vector[0]) != len(second_vector[0]):
-        return None
-    result = []
-    for i in range(len(first_vector)):
-        row = []
-        for j in range(len(first_vector[0])):
-            row.append(first_vector[i][j] + second_vector[i][j])
-        result.append(row)
-    return result
-
-def sub_vectors(first_vector, second_vector):
-    if len(first_vector) != len(second_vector) or len(first_vector[0]) != len(second_vector[0]):
-        return None
-    result = []
-    for i in range(len(first_vector)):
-        row = []
-        for j in range(len(first_vector[0])):
-            row.append(first_vector[i][j] - second_vector[i][j])
-        result.append(row)
-    return result
-
-def divide_vectors(first_vector, second_vector):
-    if len(first_vector) != len(second_vector) or len(first_vector[0]) != len(second_vector[0]):
-        return None
-    result = []
-    for i in range(len(first_vector)):
-        row = []
-        for j in range(len(first_vector[0])):
-            try:
-                result_value = first_vector[i][j] / second_vector[i][j]
-            except ZeroDivisionError:
-                print("Error: Division by zero encountered.")
-                return None  
-            row.append(result_value)
-        result.append(row)
-    return result
-
-
-first_vector = input_vector_file('first_vector.txt')
-second_vector = input_vector_file('second_vector.txt')
-
-with open("output.txt", 'w') as file:
-    file.write("")
-
-result_in_file(first_vector, "output.txt", "Vector 1")
-result_in_file(second_vector, "output.txt", "Vector 2")
-
-result_vector = multiply_vectors(first_vector, second_vector)
-if result_vector is not None:
-    result_in_file(result_vector, "output.txt", "Multiplication")
-else:
-    print("Multiplication is not possible.")
-
-add_vector = add_vectors(first_vector, second_vector)
-if add_vector is not None:
-    result_in_file(add_vector, "output.txt", "Addition")
-else:
-    print("Addition is not possible.")
-
-
-sub_vector = sub_vectors(first_vector, second_vector)
-if sub_vector is not None:
-    result_in_file(sub_vector, "output.txt", "Subtraction")
-else:
-    print("Subtraction is not possible.")
-
-
-div_vector = divide_vectors(first_vector, second_vector)
-if div_vector is not None:
-    result_in_file(div_vector, "output.txt", "Division")
-else:
-    print("Division is not possible.")
Index: Oleh Kaliuzhnyi/MatrixClass/main.py
===================================================================
diff --git a/Oleh Kaliuzhnyi/MatrixClass/main.py b/Oleh Kaliuzhnyi/MatrixClass/main.py
deleted file mode 100644
--- a/Oleh Kaliuzhnyi/MatrixClass/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,95 +0,0 @@
-import os
-
-MATRIX_ONE_FILE = "matrix_one.txt"
-MATRIX_TWO_FILE = "matrix_two.txt"
-RESULT_FILE = "result.txt"
-
-
-def read_file(filename):
-    try:
-        matrix = []
-        if not os.path.exists(filename):
-            raise Exception("Error!", filename, " is not found!")
-        with open(filename) as file:
-            for i in range(3):
-                line = file.readline()
-                matrix.append(line.split())
-                matrix[i] = [float(j) for j in matrix[i] if j.isdigit]
-        return matrix
-    except Exception as err:
-        print(err)
-
-
-def push_to_file(matrix):
-    with open(RESULT_FILE, "w") as file:
-        for i in matrix:
-            file.write(str(i))
-            file.write('\n')
-
-
-class Matrix:
-
-    def __init__(self, matrix=[[], [], []]):
-        self.matrix = matrix
-
-    def __get_det(self, mtrx):
-        det = 0
-        size = len(mtrx)
-        if size == 2:
-            return mtrx[0][0] * mtrx[1][1] - mtrx[0][1] * mtrx[1][0]
-        elif size == 3:
-            for i in range(3):
-                det += mtrx[0][i] * (
-                        mtrx[1][(i + 1) % 3] * mtrx[2][(i + 2) % 3] - mtrx[1][(i + 2) % 3] * mtrx[2][
-                        (i + 1) % 3])
-            return det
-        elif size > 3:
-            raise Exception("Error! Matrix size is >3")
-
-    def __add__(self, other):
-        matrix = []
-        for i in range(3):
-            matrix.append([self.matrix[i][j] + other.matrix[i][j] for j in range(3)])
-        return matrix
-
-    def __sub__(self, other):
-        matrix = []
-        for i in range(3):
-            matrix.append([self.matrix[i][j] - other.matrix[i][j] for j in range(3)])
-        return matrix
-
-    def __mul__(self, other):
-        matrix = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
-        for i in range(3):
-            for j in range(3):
-                for k in range(3):
-                    matrix[i][j] += self.matrix[i][k] * other.matrix[k][j]
-        return matrix
-
-    def __truediv__(self, other):
-        try:
-            matrix = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
-            n = 3
-            det = self.__get_det(other.matrix)
-            if det == 0:
-                raise Exception("Error! Det == 0! Dividing is impossible")
-            adj_matrix = []
-            for j in range(n):
-                adj_row = []
-                for i in range(n):
-                    submatrix = [row[:j] + row[j + 1:] for row in (other.matrix[:i] + other.matrix[i + 1:])]
-                    cofactor = self.__get_det(submatrix) * (-1) ** (i + j)
-                    adj_row.append(cofactor)
-                adj_matrix.append(adj_row)
-            for i in range(3):
-                for j in range(3):
-                    for k in range(3):
-                        matrix[i][j] += self.matrix[i][k] * adj_matrix[k][j]
-            return matrix
-        except Exception as err:
-            print(err)
-
-
-a = Matrix(read_file(MATRIX_ONE_FILE))
-b = Matrix(read_file(MATRIX_TWO_FILE))
-push_to_file(a+b)
Index: LevPredko/fibonacciWithFinalNumber/fibonacci_numbers.txt
===================================================================
diff --git a/LevPredko/fibonacciWithFinalNumber/fibonacci_numbers.txt b/LevPredko/fibonacciWithFinalNumber/fibonacci_numbers.txt
deleted file mode 100644
--- a/LevPredko/fibonacciWithFinalNumber/fibonacci_numbers.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-3 5
\ No newline at end of file
Index: yuliamalynovska/homework/matrix/outputMatrix.txt
===================================================================
diff --git a/yuliamalynovska/homework/matrix/outputMatrix.txt b/yuliamalynovska/homework/matrix/outputMatrix.txt
deleted file mode 100644
--- a/yuliamalynovska/homework/matrix/outputMatrix.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,12 +0,0 @@
-Addition: 
-[2.0, 0.0]
-[0.0, 2.0]
-Subtraction: 
-[0.0, 0.0]
-[0.0, 0.0]
-Multiplication: 
-[1.0, 0.0]
-[0.0, 1.0]
-Division: 
-[1.0, 0.0]
-[0.0, 1.0]
Index: LevPredko/MatrixVectorWithClass_2/output.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_2/output.txt b/LevPredko/MatrixVectorWithClass_2/output.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_2/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-0.14 0.29 0.07
--0.10 -0.19 1.45
--0.34 -0.67 2.83
Index: Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/file.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/file.txt b/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/file.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/file.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2
\ No newline at end of file
Index: FlysYurii/Task(Matrix and Vectors classes)/Matrix(Class).py
===================================================================
diff --git a/FlysYurii/Task(Matrix and Vectors classes)/Matrix(Class).py b/FlysYurii/Task(Matrix and Vectors classes)/Matrix(Class).py
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and Vectors classes)/Matrix(Class).py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,155 +0,0 @@
-import sys
-
-
-class Matrix:
-    def __init__(self, matrix):
-        self.matrix = matrix
-
-    def from_file(file_path):
-        matrix = []
-        try:
-            with open(file_path, 'r') as file:
-                for line in file:
-                    row = [int(x) for x in line.strip().split()]
-                    matrix.append(row)
-        except FileNotFoundError:
-            print("Error reading file", file_path)
-            sys.exit(0)  # Зупиняємо програму з кодом помилки 1
-        return Matrix(matrix)
-
-    def to_file(self, filename):
-        try:
-            with open(filename, 'w') as f:
-                for row in self.matrix:
-                    f.write(' '.join(['{:0.5g}'.format(x) for x in row]) + '\n')
-        except Exception as e:
-            return f"Error writing matrix to '{filename}': {e}"
-
-    def __add__(self, other_matrix):
-        if len(self.matrix) != len(other_matrix.matrix) or len(self.matrix[0]) != len(other_matrix.matrix[0]):
-            raise ValueError("Matrix dimensions do not match")
-
-        result = []
-        for i in range(len(self.matrix)):
-            row = []
-            for j in range(len(self.matrix[0])):
-                row.append(self.matrix[i][j] + other_matrix.matrix[i][j])
-            result.append(row)
-        return Matrix(result)
-
-    def __sub__(self, other_matrix):
-        if len(self.matrix) != len(other_matrix.matrix) or len(self.matrix[0]) != len(other_matrix.matrix[0]):
-            raise ValueError("Matrix dimensions do not match")
-
-        result = []
-        for i in range(len(self.matrix)):
-            row = []
-            for j in range(len(self.matrix[0])):
-                row.append(self.matrix[i][j] - other_matrix.matrix[i][j])
-            result.append(row)
-        return Matrix(result)
-
-    def __mul__(self, other_matrix):
-        if len(self.matrix[0]) != len(other_matrix.matrix):
-            raise ValueError("Invalid matrix dimensions for multiplication")
-
-        result = []
-        for i in range(len(self.matrix)):
-            row = []
-            for j in range(len(other_matrix.matrix[0])):
-                sum_product = 0
-                for k in range(len(other_matrix.matrix)):
-                    sum_product += self.matrix[i][k] * other_matrix.matrix[k][j]
-                row.append(sum_product)
-            result.append(row)
-        return Matrix(result)
-
-    def det2(self):
-        return self.matrix[0][0] * self.matrix[1][1] - self.matrix[0][1] * self.matrix[1][0]
-
-    def inv2(self):
-        d = self.det2()
-        return Matrix(
-            [[self.matrix[1][1] / d, -self.matrix[0][1] / d], [-self.matrix[1][0] / d, self.matrix[0][0] / d]])
-
-    def det3(self):
-        ret = 0
-        for i in range(3):
-            pos = 1
-            neg = 1
-            for j in range(3):
-                pos *= self.matrix[j][(i + j) % 3]
-                neg *= self.matrix[j][(i - j) % 3]
-            ret += (pos - neg)
-        return ret
-
-    def inv3(self):
-        ret = [3 * [0] for _ in range(3)]
-        det = self.det3()
-        for i in range(3):
-            for j in range(3):
-                adj = [[n for ii, n in enumerate(row) if ii != i]
-                       for jj, row in enumerate(self.matrix) if jj != j]
-                d = adj[0][0] * adj[1][1] - adj[0][1] * adj[1][0]
-                sgn = (-1) ** (i + j)
-                ret[i][j] = sgn * d / det
-        return Matrix(ret)
-
-    def __truediv__(self, other_matrix):
-        result = None
-        try:
-            if len(other_matrix.matrix) != len(other_matrix.matrix[0]):
-                raise ValueError("matrix_b must be a square matrix for inversion")
-
-            if len(self.matrix[0]) != len(other_matrix.matrix):
-                raise ValueError("Invalid matrix dimensions for division")
-
-            if len(other_matrix.matrix) == 2:
-                det = other_matrix.det2()
-                if det == 0:
-                    raise ValueError("matrix_b is singular; cannot be inverted")
-                inv = other_matrix.inv2()
-            elif len(other_matrix.matrix) == 3:
-                det = other_matrix.det3()
-                if det == 0:
-                    raise ValueError("matrix_b is singular; cannot be inverted")
-                inv = other_matrix.inv3()
-            else:
-                raise ValueError("Unsupported matrix dimensions")
-
-            result = self.__mul__(inv)
-        except Exception as e:
-            print(f"Error performing division: {e}")
-        return result
-
-result = None
-MatrixA = Matrix.from_file('../Task(Matrix and vectors)/matrix_A.txt')
-MatrixB = Matrix.from_file('../Task(Matrix and vectors)/matrix_B.txt')
-try:
-    operation = input("Enter operation (add, subtract, multiply, divide): ")
-    if operation == 'add':
-        result = MatrixA + MatrixB
-    elif operation == 'subtract':
-        result = MatrixA - MatrixB
-    elif operation == 'multiply':
-        result = MatrixA * MatrixB
-    elif operation == 'divide':
-        result = MatrixA / MatrixB
-    else:
-        raise ValueError("Invalid operation")
-
-except ValueError as e:
-    print(f"Error performing operation: {e}")
-
-try:
-    if result is not None:
-        for row in result.matrix:
-            print(' '.join(['{:0.5g}'.format(x) for x in row]))
-except TypeError:
-    pass
-
-try:
-    if result is not None:
-        result.to_file('result_matrix.txt')
-except Exception as e:
-    print(f"Error writing matrix to file: {e}")
Index: anastasiia_trushchak/Practical/Practical_01/main.py
===================================================================
diff --git a/anastasiia_trushchak/Practical/Practical_01/main.py b/anastasiia_trushchak/Practical/Practical_01/main.py
deleted file mode 100644
--- a/anastasiia_trushchak/Practical/Practical_01/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-input_file = 'input.txt'
-output_file = "output.txt"
-with open(input_file, "r") as file:
-    fibonacci = list(file.read().split())
-for i in range(2, 10):
-    fibonacci.append(float(fibonacci[i-1]) + float(fibonacci[i-2]))
-with open(output_file, "w") as record:
-    record.write(str(fibonacci))
\ No newline at end of file
Index: RostyslavPasternak/Homework/ArrayList_LinkedList/array.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/ArrayList_LinkedList/array.txt b/RostyslavPasternak/Homework/ArrayList_LinkedList/array.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/ArrayList_LinkedList/array.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-12 12 32 21 332 32
\ No newline at end of file
Index: RostyslavPasternak/Homework/Vector_Matrix/class/standart/main.py
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/main.py b/RostyslavPasternak/Homework/Vector_Matrix/class/standart/main.py
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,127 +0,0 @@
-from Matrix import Matrix
-from Vector import Vector
-from RostyslavPasternak.Homework.Vector_Matrix.Exception import InvalidSize, InvalidMatrixInverse, InvalidType
-
-def fill_matrix():
-    while True:
-        choice = int(input("Fill in the matrix\n\t1. Random\n\t2. From file\n\t3. From the keyboard\n "))
-        if choice == 1:
-            row = int(input("Input row: "))
-            column = int(input("Input column: "))
-            return Matrix.random(row, column)
-        elif choice == 2:
-            file_name = input("File name: ")
-            return Matrix.from_file(file_name)
-        elif choice == 3:
-            row = int(input("Input row: "))
-            column = int(input("Input column: "))
-
-            matrix = [[0 for _ in range(column)] for _ in range(row)]
-
-            for i in range(row):
-                for j in range(column):
-                    matrix[i][j] = int(input(f"Element [{i + 1}][{j + 1}]: "))
-            return Matrix(matrix)
-        else:
-            print("Invalid choice. Please select 1, 2, or 3.")
-
-def task_matrix():
-    matrix = fill_matrix()
-    print(matrix)
-    while True:
-        choice = int(input("Second element\n\t1. Matrix\n\t2. Number\n"))
-        if choice == 1:
-            other = fill_matrix()
-            break
-        if choice == 2:
-            other = int(input("Number: "))
-            break
-    print(other)
-    while True:
-        try:
-            operator = int(input("1. Add\n2. Subtraction\n3. Multiplication\n4. Division\n5. Inverse\n0. Cancel\n"))
-            if operator == 1:
-                result = matrix + other
-            elif operator == 2:
-                result = matrix - other
-            elif operator == 3:
-                result = matrix * other
-            elif operator == 4:
-                result = matrix / other
-            elif operator == 5:
-                result = matrix.inverse()
-            else:
-                break
-        except InvalidSize as e:
-            print(e)
-        except InvalidType as e:
-            print(e)
-        except InvalidMatrixInverse as e:
-            print(e)
-        else:
-            print(result)
-            result.str_to_file()
-def fill_vector():
-    while True:
-        choice = int(input("How to fill a vector\n\t1. From file\n\t2. From random\n\t3. From the keyboard\n\t0. Cancel\n"))
-        if choice == 1:
-            fileName = input("File name: ")
-            return Vector.from_file(fileName)
-        elif choice == 2:
-            size = int(input("Size: "))
-            return Vector.random(size)
-        elif choice == 3:
-            size = int(input("Input size: "))
-
-            vector = []
-            for i in range(size):
-                vector[i] = int(input(f"Element [{i + 1}]: "))
-            return Vector(vector)
-        else:
-            break
-
-def task_vector():
-    vector = fill_vector()
-    print(vector)
-    while True:
-        choice = int(input("Second element\n\t1. Vector\n\t2. Number\n"))
-        if choice == 1:
-            other = fill_vector()
-            break
-        if choice == 2:
-            other = int(input("Number: "))
-            break
-    print(other)
-
-    while True:
-        try:
-            result = None
-            operator = int(input("1. add\n2. subtraction\n3. multiplication\n4. division\n0. Cancel\n"))
-            if operator == 1:
-                result = vector + other
-            elif operator == 2:
-                result = vector - other
-            elif operator == 3:
-                result = vector * other
-            elif operator == 4:
-                result = vector / other
-            else:
-                break
-        except InvalidSize as e:
-            print(e)
-        except InvalidSize as e:
-            print(e)
-        except InvalidSize as e:
-            print(e)
-        else:
-            print(result)
-            result.str_to_file()
-
-while True:
-    choice = int(input("1. Matrix\n2. Vector\n0. Cancel \n"))
-    if choice == 1:
-        task_matrix()
-    elif choice == 2:
-        task_vector()
-    else:
-        break
Index: BoikoStepan/Matrix_Classes/Classes.py
===================================================================
diff --git a/BoikoStepan/Matrix_Classes/Classes.py b/BoikoStepan/Matrix_Classes/Classes.py
deleted file mode 100644
--- a/BoikoStepan/Matrix_Classes/Classes.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,144 +0,0 @@
-class Matrix:
-    def __init__(self, filename):
-        self.matrix = []
-        self.filename = filename
-
-    def load_matrix(self):
-        try:
-            with open(self.filename, 'r') as matrix_file:
-                for line in matrix_file:
-                    row = [int(x) for x in line.strip().split()]
-                    self.matrix.append(row)
-        except Exception as e:
-            print("Error:", e)
-
-    def __len__(self):
-        return len(self.matrix)
-
-    def __add__(self, other):
-        result_matrix = []
-        for i in range((len(self))):
-            row = []
-            for j in range(len(self.matrix[0])):
-                row.append(self.matrix[i][j] + other[i][j])
-            result_matrix.append(row)
-        return result_matrix
-
-    def __sub__(self, other):
-        result_matrix = []
-        for i in range(len(self)):
-            row = []
-            for j in range(len(self.matrix[0])):
-                row.append(self.matrix[i][j] - other[i][j])
-            result_matrix.append(row)
-        return result_matrix
-
-    def __mul__(self, other):
-        result_matrix = []
-        for i in range(len(self)):
-            row = []
-            for j in range(len(other[0])):
-                mult = 0
-                for k in range(len(other)):
-                    mult += self.matrix[i][k] * other[k][j]
-                row.append(mult)
-            result_matrix.append(row)
-        return result_matrix
-
-    def determinant(self, matrix):
-        size = len(matrix)
-        if size == 1:
-            return matrix[0][0]
-        elif size == 2:
-            return matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0]
-        else:
-            det = 0
-            for col in range(size):
-                submatrix = []
-                for i in range(1, len(matrix)):
-                    subrow = []
-                    for j in range(len(matrix[i])):
-                        if j != col:
-                            subrow.append(matrix[i][j])
-                    submatrix.append(subrow)
-                cofactor = matrix[0][col] * self.determinant(submatrix)
-                if col % 2 == 0:
-                    det += cofactor
-                else:
-                    det -= cofactor
-            return det
-
-    def inverse_matrix(self, matrix):
-        size = len(matrix)
-        det = self.determinant(matrix)
-        inverse = [[0] * size for _ in range(size)]
-
-        for i in range(size):
-            for j in range(size):
-                submatrix = []
-                for row_idx in range(len(matrix)):
-                    if row_idx != i:
-                        subrow = []
-                        for col_idx in range(len(matrix[row_idx])):
-                            if col_idx != j:
-                                subrow.append(matrix[row_idx][col_idx])
-                        submatrix.append(subrow)
-                cofactor = self.determinant(submatrix)
-                try:
-                    if (i + j) % 2 == 0:
-                        inverse[j][i] = cofactor / det
-                    else:
-                        inverse[j][i] = -cofactor / det
-                except ZeroDivisionError:
-                    print("ZERO DIVISION")
-                    exit()
-        print(inverse)
-        return inverse
-
-    def __truediv__(self, other):
-        matrix_Division = []
-        other_inverse = self.inverse_matrix(other)
-        for i in range(len(self.matrix)):
-            row = []
-            for j in range(len(other_inverse[0])):
-                dot_product = 0
-                for k in range(len(other_inverse)):
-                    dot_product += self.matrix[i][k] * other_inverse[k][j]
-                row.append(dot_product)
-            matrix_Division.append(row)
-        return matrix_Division
-
-    def save_result(self, output_filename, other_matrix):
-        matrix_sum = self + other_matrix
-        matrix_sub = self - other_matrix
-        matrix_mult = self * other_matrix
-        matrix_div = self / other_matrix
-
-        with open(output_filename, 'w') as file:
-            file.write("Matrix Sum:\n")
-            for row in range(len(matrix_sum)):
-                file.write(str(matrix_sum[row]) + '\n')
-
-            file.write("Matrix Sub:\n")
-            for row in range(len(matrix_sub)):
-                file.write(str(matrix_sub[row]) + '\n')
-
-            file.write("Matrix Mult:\n")
-            for row in range(len(matrix_mult)):
-                file.write(str(matrix_sum[row]) + '\n')
-
-            file.write("Matrix Div:\n")
-            for row in range(len(matrix_div)):
-                file.write(str(matrix_div[row]) + '\n')
-
-
-# Your existing code
-filename1 = 'FMatrix.txt'
-filename2 = 'SMatrix.txt'
-output_filename = '../Matrix/OutputMatrix.txt'
-
-matrix_ops1 = Matrix(filename1)
-matrix_ops1.load_matrix()
-matrix_ops2 = Matrix(filename2)
-matrix_ops2.load_matrix()
-matrix_ops1.save_result(output_filename, matrix_ops2.matrix)
Index: RostyslavPasternak/Practical/Practical_1/input.txt
===================================================================
diff --git a/RostyslavPasternak/Practical/Practical_1/input.txt b/RostyslavPasternak/Practical/Practical_1/input.txt
deleted file mode 100644
--- a/RostyslavPasternak/Practical/Practical_1/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1,10
\ No newline at end of file
Index: Oleh Kaliuzhnyi/VectorClass/new_vector.txt
===================================================================
diff --git a/Oleh Kaliuzhnyi/VectorClass/new_vector.txt b/Oleh Kaliuzhnyi/VectorClass/new_vector.txt
deleted file mode 100644
--- a/Oleh Kaliuzhnyi/VectorClass/new_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 3 4
\ No newline at end of file
Index: Trachyk Yura-Maksym/Homework/Vector/main.py
===================================================================
diff --git a/Trachyk Yura-Maksym/Homework/Vector/main.py b/Trachyk Yura-Maksym/Homework/Vector/main.py
deleted file mode 100644
--- a/Trachyk Yura-Maksym/Homework/Vector/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,25 +0,0 @@
-INPUT_FILE = "first_vector.txt"
-INPUT_FILE_SECOND = "second_vector.txt"
-OUTPUT_FILE = "output.txt"
-
-A_vector = [float]
-B_vector = [float]
-
-try:
-    with open(INPUT_FILE, "r") as file:
-        A = list(map(float, file.readline().split()))
-    with open(INPUT_FILE_SECOND, "r") as file:
-        B = list(map(float, file.readline().split()))
-    with open(OUTPUT_FILE, 'w') as output_file:
-        output_file.write("First vector: {}\n".format(A))
-        output_file.write("Second vector: {}\n".format(B))
-        addition = [A_vector + B_vector for A_vector, B_vector in zip(A, B)]
-        subtraction = [A_vector - B_vector for A_vector, B_vector in zip(A, B)]
-        multiplication = [A_vector * B_vector for A_vector, B_vector in zip(A, B)]
-        division = [A_vector / B_vector for A_vector, B_vector in zip(A, B)]
-        output_file.write("Addition vectors: {}\n".format(addition))
-        output_file.write("Subtraction vectors: {}\n".format(subtraction))
-        output_file.write("Multiplication vectors: {}\n".format(multiplication))
-        output_file.write("Division vectors: {}\n".format(division))
-except FileNotFoundError:
-    print('File not found.')
\ No newline at end of file
Index: Oleh Kaliuzhnyi/MatrixClass/matrix_two.txt
===================================================================
diff --git a/Oleh Kaliuzhnyi/MatrixClass/matrix_two.txt b/Oleh Kaliuzhnyi/MatrixClass/matrix_two.txt
deleted file mode 100644
--- a/Oleh Kaliuzhnyi/MatrixClass/matrix_two.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-9 8 7
-4 2 3
-3 2 3
\ No newline at end of file
Index: MaksymPetukhov/vectorTask4/input.txt
===================================================================
diff --git a/MaksymPetukhov/vectorTask4/input.txt b/MaksymPetukhov/vectorTask4/input.txt
deleted file mode 100644
--- a/MaksymPetukhov/vectorTask4/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-1,2,3
-0,0,0
\ No newline at end of file
Index: LevPredko/fibonacci/Constants.py
===================================================================
diff --git a/LevPredko/fibonacci/Constants.py b/LevPredko/fibonacci/Constants.py
deleted file mode 100644
--- a/LevPredko/fibonacci/Constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-input = 'input.txt'
-output = 'output2.txt'
-space = " "
\ No newline at end of file
Index: FlysYurii/Task(Matrix and vectors)/other_vector.txt
===================================================================
diff --git a/FlysYurii/Task(Matrix and vectors)/other_vector.txt b/FlysYurii/Task(Matrix and vectors)/other_vector.txt
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and vectors)/other_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-0,0,0,0
\ No newline at end of file
Index: MaksymPetukhov/fibonacciNumbers3/constants.py
===================================================================
diff --git a/MaksymPetukhov/fibonacciNumbers3/constants.py b/MaksymPetukhov/fibonacciNumbers3/constants.py
deleted file mode 100644
--- a/MaksymPetukhov/fibonacciNumbers3/constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,4 +0,0 @@
-INPUT_FILE = "read.txt"
-OUTPUT_FILE = "write.txt"
-PARAMETERS_FILE = "parameters.txt"
-SEPARATOR = ','
\ No newline at end of file
Index: MaksymPetukhov/steams/main.py
===================================================================
diff --git a/MaksymPetukhov/steams/main.py b/MaksymPetukhov/steams/main.py
deleted file mode 100644
--- a/MaksymPetukhov/steams/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,23 +0,0 @@
-from pyxtension.streams import stream
-# from collections import UserList
-
-class Student:
-
-    def __init__(self, name):
-        self.name = name
-
-    def get_name(self):
-        return self.name
-
-students = [
-    Student("Maksym"),
-    Student("Oleg"),
-    Student("Nasty"),
-    Student("Roger")
-]
-
-students_list = (stream(students)
-                 .map(lambda student: student.get_name())
-                 .filter()
-                 .toList())
-print(students_list)
\ No newline at end of file
Index: BohdanFariyon/4.ClassVector/VectorSecond.txt
===================================================================
diff --git a/BohdanFariyon/4.ClassVector/VectorSecond.txt b/BohdanFariyon/4.ClassVector/VectorSecond.txt
deleted file mode 100644
--- a/BohdanFariyon/4.ClassVector/VectorSecond.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1, 2, 3, 4
\ No newline at end of file
Index: MariaKravchuk/Vector/second_vector.txt
===================================================================
diff --git a/MariaKravchuk/Vector/second_vector.txt b/MariaKravchuk/Vector/second_vector.txt
deleted file mode 100644
--- a/MariaKravchuk/Vector/second_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-0 0 0
\ No newline at end of file
Index: anastasiia_trushchak/Homework/Homework_02/VectorClass/inputVector1.txt
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_02/VectorClass/inputVector1.txt b/anastasiia_trushchak/Homework/Homework_02/VectorClass/inputVector1.txt
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_02/VectorClass/inputVector1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 5
\ No newline at end of file
Index: BohdanFariyon/2.Vector/VectorSecond.txt
===================================================================
diff --git a/BohdanFariyon/2.Vector/VectorSecond.txt b/BohdanFariyon/2.Vector/VectorSecond.txt
deleted file mode 100644
--- a/BohdanFariyon/2.Vector/VectorSecond.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1, 2, 0
\ No newline at end of file
Index: anastasiia_trushchak/Practical/Practical_01/input.txt
===================================================================
diff --git a/anastasiia_trushchak/Practical/Practical_01/input.txt b/anastasiia_trushchak/Practical/Practical_01/input.txt
deleted file mode 100644
--- a/anastasiia_trushchak/Practical/Practical_01/input.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-2 4
\ No newline at end of file
Index: Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/file.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/file.txt b/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/file.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/file.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-2 3
\ No newline at end of file
Index: LevPredko/MatrixVectorWithClass_1/output.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_1/output.txt b/LevPredko/MatrixVectorWithClass_1/output.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_1/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-тут при запусканні програми буде появлятись або мартиця або вектор.
Index: ZlatomyraSeverylova/vector/input_vector.txt
===================================================================
diff --git a/ZlatomyraSeverylova/vector/input_vector.txt b/ZlatomyraSeverylova/vector/input_vector.txt
deleted file mode 100644
--- a/ZlatomyraSeverylova/vector/input_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,2 +0,0 @@
-1 2 3
-
Index: yuliamalynovska/homework/matrix/matrix.py
===================================================================
diff --git a/yuliamalynovska/homework/matrix/matrix.py b/yuliamalynovska/homework/matrix/matrix.py
deleted file mode 100644
--- a/yuliamalynovska/homework/matrix/matrix.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,139 +0,0 @@
-import const_matrix
-ZERO_DIVISION = 'float division by zero'
-INDEX_ERROR = 'list index out of range'
-FILE_NOT_FOUND_ERROR = 'the name of file is incorrect'
-ATTRIBUTE_ERROR = 'module const_matrix has no such attribute'
-
-
-def addition(matrix_a, matrix_b):
-    result = [[0 for i in range(len(matrix_a[0]))] for j in range(len(matrix_a))]
-    for i in range(len(matrix_a)):
-        for j in range(len(matrix_a[0])):
-            try:
-                result[i][j] = matrix_a[i][j] + matrix_b[i][j]
-            except IndexError:
-                print(INDEX_ERROR)
-                exit(-1)
-    return result
-
-
-def subtraction(matrix_a, matrix_b):
-    result = [[0 for i in range(len(matrix_a[0]))] for j in range(len(matrix_a))]
-    for i in range(len(matrix_a)):
-        for j in range(len(matrix_a[0])):
-            result[i][j] = matrix_a[i][j] - matrix_b[i][j]
-    return result
-
-
-def multiplication(matrix_a, matrix_b):
-    result = [[0 for i in range(len(matrix_b[0]))] for j in range(len(matrix_a))]
-    for i in range(len(matrix_a)):
-        for j in range(len(matrix_b[0])):
-            for k in range(len(matrix_b)):
-                result[i][j] += matrix_a[i][k] * matrix_b[k][j]
-    return result
-
-
-def transposeMatrix(matrix):
-    # return list(map(list, zip(*matrix)))
-    transpose = [[matrix[j][i] for j in range(len(matrix))] for i in range(len(matrix[0]))]
-    print("\n")
-    for row in transpose:
-        return transpose
-
-
-def getMatrixMinor(m, i, j):
-    return [row[:j] + row[j+1:] for row in (m[:i]+m[i+1:])]
-
-
-def getMatrixDeternminant(matrix):
-    if len(matrix) == 2:
-        return matrix[0][0]*matrix[1][1]-matrix[0][1]*matrix[1][0]
-
-    determinant = 0
-    for c in range(len(matrix)):
-        try:
-            determinant += ((-1)**c)*matrix[0][c]*getMatrixDeternminant(getMatrixMinor(matrix, 0, c))
-        except IndexError:
-            print(INDEX_ERROR)
-            exit(-1)
-    return determinant
-
-
-def getMatrixInverse(matrix):
-    determinant = getMatrixDeternminant(matrix)
-    try:
-        if len(matrix) == 2:
-            return [[matrix[1][1]/determinant, -1*matrix[0][1]/determinant],
-                    [-1*matrix[1][0]/determinant, matrix[0][0]/determinant]]
-    except ZeroDivisionError:
-        print(ZERO_DIVISION)
-        exit(-1)
-
-    cofactors = []
-    for r in range(len(matrix)):
-        cofactorRow = []
-        for c in range(len(matrix)):
-            minor = getMatrixMinor(matrix, r, c)
-            cofactorRow.append(((-1)**(r + c)) * getMatrixDeternminant(minor))
-        cofactors.append(cofactorRow)
-    cofactors = transposeMatrix(cofactors)
-    for r in range(len(cofactors)):
-        for c in range(len(cofactors)):
-            try:
-                cofactors[r][c] = cofactors[r][c]/determinant
-            except ZeroDivisionError:
-                print(ZERO_DIVISION)
-                exit(-1)
-    return cofactors
-
-
-def division(matrix_a, matrix_b):
-    result = [[0 for i in range(len(matrix_b[0]))] for j in range(len(matrix_a))]
-    for i in range(len(matrix_a)):
-        for j in range(len(getMatrixInverse(matrix_b)[0])):
-            for k in range(len(getMatrixInverse(matrix_b))):
-                result[i][j] += matrix_a[i][k] * getMatrixInverse(matrix_b)[k][j]
-    return result
-
-
-a = []
-b = []
-currentA = True
-
-try:
-    try:
-        with open(const_matrix.INPUT, 'r') as input_file:
-            for i in range(2):
-                k = input_file.readline()
-                while k != '\n':
-                    temp = k.replace('\n', '').split(" ")
-                    if currentA:
-                        a.append([float(i) for i in temp if i.isdigit()])
-                    else:
-                        b.append([float(i) for i in temp if i.isdigit()])
-                    k = input_file.readline()
-                currentA = False
-    except FileNotFoundError:
-        print(FILE_NOT_FOUND_ERROR)
-
-    with open(const_matrix.OUTPUT, 'w') as output_file:
-        output_file.write("Addition: \n")
-        for i in addition(a, b):
-            output_file.write(str(i) + '\n')
-
-        output_file.write("Subtraction: \n")
-        for i in subtraction(a, b):
-            output_file.write(str(i) + '\n')
-
-        output_file.write("Multiplication: \n")
-        for i in multiplication(a, b):
-            output_file.write(str(i) + '\n')
-
-        output_file.write("Division: \n")
-        for i in division(a, b):
-            output_file.write(str(i) + '\n')
-except AttributeError:
-    print(ATTRIBUTE_ERROR)
-
-
Index: BohdanBubniak/01-Fibonacci/steps.txt
===================================================================
diff --git a/BohdanBubniak/01-Fibonacci/steps.txt b/BohdanBubniak/01-Fibonacci/steps.txt
deleted file mode 100644
--- a/BohdanBubniak/01-Fibonacci/steps.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-5
\ No newline at end of file
Index: RostyslavPasternak/Homework/Vector_Matrix/class/standart/result.txt
===================================================================
diff --git a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/result.txt b/RostyslavPasternak/Homework/Vector_Matrix/class/standart/result.txt
deleted file mode 100644
--- a/RostyslavPasternak/Homework/Vector_Matrix/class/standart/result.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[135.0, 14.0, 447.0, 447.0, 14.0, 2.0]
\ No newline at end of file
Index: BohdanFariyon/4.ClassVector/VectorFirst.txt
===================================================================
diff --git a/BohdanFariyon/4.ClassVector/VectorFirst.txt b/BohdanFariyon/4.ClassVector/VectorFirst.txt
deleted file mode 100644
--- a/BohdanFariyon/4.ClassVector/VectorFirst.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1, 2, 3
\ No newline at end of file
Index: ZlatomyraSeverylova/classVector/main.py
===================================================================
diff --git a/ZlatomyraSeverylova/classVector/main.py b/ZlatomyraSeverylova/classVector/main.py
deleted file mode 100644
--- a/ZlatomyraSeverylova/classVector/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,10 +0,0 @@
-INPUT_VECTOR_A = 'input_vector_a.txt'
-INPUT_VECTOR_B = 'input_vector_b.txt'
-OUT_VECTOR = 'out_vector.txt'
-from class_vector import Vector
-vector_a = Vector.read(INPUT_VECTOR_A)
-vector_b = Vector.read(INPUT_VECTOR_B)
-Vector.write(OUT_VECTOR, 'Sum of vectors: ', vector_a.__add__(vector_b))
-Vector.write(OUT_VECTOR, 'Difference of vectors: ', vector_a.__sub__(vector_b))
-Vector.write(OUT_VECTOR, 'Multiplication of vectors: ', vector_a.__mul__(vector_b))
-Vector.write(OUT_VECTOR, 'Division of vectors: ', vector_a.__truediv__(vector_b))
Index: AnastasiaPelyno/Vector_Operations/result.txt
===================================================================
diff --git a/AnastasiaPelyno/Vector_Operations/result.txt b/AnastasiaPelyno/Vector_Operations/result.txt
deleted file mode 100644
--- a/AnastasiaPelyno/Vector_Operations/result.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,8 +0,0 @@
-Addition:
-4 4 4 
-Substraction:
--2 0 2 
-Multiplication:
-3 4 3 
-Division:
-0.3333333333333333 1.0 3.0 
Index: BohdanFariyon/5.ClassMatrix/matrix1.txt
===================================================================
diff --git a/BohdanFariyon/5.ClassMatrix/matrix1.txt b/BohdanFariyon/5.ClassMatrix/matrix1.txt
deleted file mode 100644
--- a/BohdanFariyon/5.ClassMatrix/matrix1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-1 2 3
-4 5 6
-7 8 9
\ No newline at end of file
Index: Trachyk Yura-Maksym/Homework/Vector/second_vector.txt
===================================================================
diff --git a/Trachyk Yura-Maksym/Homework/Vector/second_vector.txt b/Trachyk Yura-Maksym/Homework/Vector/second_vector.txt
deleted file mode 100644
--- a/Trachyk Yura-Maksym/Homework/Vector/second_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-2 3 4
\ No newline at end of file
Index: MariaKravchuk/Matrix/matrix2.txt
===================================================================
diff --git a/MariaKravchuk/Matrix/matrix2.txt b/MariaKravchuk/Matrix/matrix2.txt
deleted file mode 100644
--- a/MariaKravchuk/Matrix/matrix2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-0 0 0
-0 0 0
-0 0 0
\ No newline at end of file
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/Vector.py
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/Vector.py b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/Vector.py
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/Vector.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,34 +0,0 @@
-import numpy as np
-
-with open('FirstVector.txt', 'r') as data:
-    firstVector = data.readline().split()
-
-with open('SecondVector.txt', 'r') as data:
-    secondVector = (data.readline().split())
-
-firstVector = np.array(firstVector,int)
-secondVector = np.array(secondVector,int)
-
-vectorSumm = firstVector + secondVector
-vectorSubtract = firstVector - secondVector
-vectorMultiplication = firstVector * secondVector
-vectorDivision = firstVector / secondVector
-
-with open('VectorOutput.txt', 'w') as file:
-    file.write("Vector Summ:\n")
-    file.write(str(vectorMultiplication))
-
-    file.write("\n")
-
-    file.write("Vector Subtract:\n")
-    file.write(str(vectorSubtract))
-
-    file.write('\n')
-
-    file.write("Vector Multiplication:\n")
-    file.write(str(vectorMultiplication))
-
-    file.write("\n")
-
-    file.write("Vector Division:\n")
-    file.write(str(vectorDivision))
\ No newline at end of file
Index: BoikoStepan/Fibonachi/const.py
===================================================================
diff --git a/BoikoStepan/Fibonachi/const.py b/BoikoStepan/Fibonachi/const.py
deleted file mode 100644
--- a/BoikoStepan/Fibonachi/const.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-INPUT = "input.txt"
-OUTPUT = "output.txt"
-SEPARATOR = ','
Index: BoikoStepan/List/List.py
===================================================================
diff --git a/BoikoStepan/List/List.py b/BoikoStepan/List/List.py
deleted file mode 100644
--- a/BoikoStepan/List/List.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,95 +0,0 @@
-def set_nodes(linked_list):
-    length = len(linked_list)
-    i = 0
-
-    for node in linked_list:
-        node.previous_item = linked_list[i - 1] if i > 0 else None
-        node.next_item = linked_list[i + 1] if i < length - 1 else None
-        i += 1
-
-class Linked_List:
-    def __init__(self):
-        self.__list = []
-
-    def __len__(self):
-        return len(self.__list)
-
-    def __str__(self):
-        result = 'Linked list: '
-        for i in self.__list:
-            result += str(i) + ", "
-        if len(self) != 0:
-            result = result[:-2]
-        else:
-            result = 'Empty Linked list'
-        return result
-
-    def __getitem__(self, index):
-        return self.__list[index]
-
-    def delete(self, index):
-        try:
-            del self.__list[index]
-            set_nodes(self.__list)
-        except IndexError:
-            print("Index out of range. Cannot delete element.")
-
-    def add(self, value):
-        node = Node(value)
-        self.__list.append(node)
-        set_nodes(self.__list)
-
-    def insert(self, index, value):
-        try:
-            if index < 0 or index > len(self):
-                raise IndexError
-            else:
-                node = Node(value)
-                self.__list.insert(index, node)
-        except IndexError:
-            print("Wrong insert index!")
-        set_nodes(self.__list)
-
-    def clear_element(self, index):
-        try:
-            self[index].this_item = None
-            set_nodes(self.__list)
-        except IndexError:
-            print("Index out of range. Cannot clear element.")
-
-    def clear(self):
-        self.__list = []
-
-
-class Node:
-    def __init__(self, value):
-        self.this_item = value
-        self.next_item = None
-        self.previous_item = None
-
-    def previous(self):
-        return self.previous_item
-
-    def next(self):
-        return self.next_item
-
-    def __str__(self):
-        return str(self.this_item)
-
-
-my_list = Linked_List()
-my_list.add(17)
-my_list.add(39)
-my_list.add(198)
-my_list.add(103)
-my_list.add(14)
-my_list.add(10)
-my_list.add(666)
-print(my_list)
-my_list.clear_element(3)
-print(my_list)
-my_list.delete(1)
-print(my_list)
-my_list.insert(5, 2007)
-print(my_list)
-
Index: LevPredko/MatrixVectorWithClass_3/Constants.py
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_3/Constants.py b/LevPredko/MatrixVectorWithClass_3/Constants.py
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_3/Constants.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,5 +0,0 @@
-Input_Matrix_1 = "Matrix1read.txt"
-Input_Matrix_2 = "Matrix2read.txt"
-Input_Vector_1 = "Vector1read.txt"
-Input_Vector_2 = "Vector2read.txt"
-SEPARATOR = " "
\ No newline at end of file
Index: BoikoStepan/Vector_Classes/FVector.txt
===================================================================
diff --git a/BoikoStepan/Vector_Classes/FVector.txt b/BoikoStepan/Vector_Classes/FVector.txt
deleted file mode 100644
--- a/BoikoStepan/Vector_Classes/FVector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-2 2 2 2 2
\ No newline at end of file
Index: Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/output.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/output.txt b/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/output.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/output.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-[2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368]
Index: Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/FirstVector.txt
===================================================================
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/FirstVector.txt b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/FirstVector.txt
deleted file mode 100644
--- a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/FirstVector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 3 4 5
\ No newline at end of file
Index: AnastasiaPelyno/MATRIX_CLASS/matrix_two.txt
===================================================================
diff --git a/AnastasiaPelyno/MATRIX_CLASS/matrix_two.txt b/AnastasiaPelyno/MATRIX_CLASS/matrix_two.txt
deleted file mode 100644
--- a/AnastasiaPelyno/MATRIX_CLASS/matrix_two.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-4 5 6
-6 5 4
-4 6 5
\ No newline at end of file
Index: AnastasiaPelyno/Matrix_multiply_divide/main.py
===================================================================
diff --git a/AnastasiaPelyno/Matrix_multiply_divide/main.py b/AnastasiaPelyno/Matrix_multiply_divide/main.py
deleted file mode 100644
--- a/AnastasiaPelyno/Matrix_multiply_divide/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,91 +0,0 @@
-MATRIX_ONE='matrix_1.txt'
-MATRIX_TWO='matrix_2.txt'
-RESULT_FILE='result.txt'
-MODE_READ='r'
-MODE_WRITE='w'
-FILE_ERROR='File Not Found'
-def actions(str1,str2):
-    file.write(str1)
-    for i in matrix_one:
-        file.write(str(i) + '\n')
-    file.write(str2 + '\n')
-    for i in matrix_two:
-        file.write(str(i) + '\n')
-    file.write('=' + '\n')
-def reading(matrix_file,mode,matrix):
-    with open(matrix_file, mode) as file:
-        for line in file:
-            row=[int(i) for i in line.split()]
-            matrix.append(row)
-def mult(matr_one,matr_two):
-    res = []
-    for i in range(len(matr_one)):
-        row = []
-        for j in range(len(matr_two[0])):
-            sum = 0
-            for k in range(len(matr_two)):
-                sum += matr_one[i][k] * matr_two[k][j]
-            row.append(sum)
-        res.append(row)
-    return res
-def det(matrix):
-    n = len(matrix)
-    if n == 1:
-        return matrix[0][0]
-    elif n == 2:
-        return matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0]
-    else:
-        determinant = 0
-        for j in range(n):
-            submatrix = [[matrix[i][k] for k in range(n) if k != j] for i in range(1, n)]
-            sign = (-1) ** j
-            determinant += sign * matrix[0][j] * det(submatrix)
-        return determinant
-def algebraic_dopovnenia(matrix):
-    n = len(matrix)
-    alg_dopov = [[0] * n for _ in range(n)]
-    for i in range(n):
-        for j in range(n):
-            submatrix = [[matrix[k][l] for l in range(n) if l != j] for k in range(n) if k != i]
-            sign = (-1) ** (i + j)
-            alg_dopov[j][i] = sign * det(submatrix)
-    return alg_dopov
-def inverse(matrix):
-    determinant = det(matrix)
-    alg_dopov = algebraic_dopovnenia(matrix)
-    inverse_matrix=[]
-    n=len(alg_dopov)
-    for i in range(n):
-        row=[]
-        for j in range(n):
-            row.append(alg_dopov[i][j]/determinant)
-        inverse_matrix.append(row)
-    return inverse_matrix
-matrix_one=[]
-try:
-    reading(MATRIX_ONE,MODE_READ,matrix_one)
-except FileNotFoundError:
-    print(FILE_ERROR)
-matrix_two=[]
-try:
-    reading(MATRIX_TWO,MODE_READ,matrix_two)
-except FileNotFoundError:
-    print(FILE_ERROR)
-mult_res=mult(matrix_one,matrix_two)
-try:
-    deter=det(matrix_two)
-    inverse_matrix = inverse(matrix_two)
-    div_res = mult(matrix_one, inverse_matrix)
-except ZeroDivisionError:
-    print('Matrixes can not be divided')
-    exit(-1)
-try:
-    with open(RESULT_FILE,MODE_WRITE) as file:
-        actions('Multiplying:\n','*')
-        for i in mult_res:
-            file.write(str(i)+'\n')
-        actions('Dividing:\n', '/')
-        for i in div_res:
-            file.write(str(i) + '\n')
-except FileNotFoundError:
-    print(FILE_ERROR)
\ No newline at end of file
Index: anastasiia_trushchak/Homework/Homework_01/Matrix/inputMatrix2.txt
===================================================================
diff --git a/anastasiia_trushchak/Homework/Homework_01/Matrix/inputMatrix2.txt b/anastasiia_trushchak/Homework/Homework_01/Matrix/inputMatrix2.txt
deleted file mode 100644
--- a/anastasiia_trushchak/Homework/Homework_01/Matrix/inputMatrix2.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-0 3 7
-1 2 5
-3 8 9
\ No newline at end of file
Index: MaksymPetukhov/vectorTask2/main.py
===================================================================
diff --git a/MaksymPetukhov/vectorTask2/main.py b/MaksymPetukhov/vectorTask2/main.py
deleted file mode 100644
--- a/MaksymPetukhov/vectorTask2/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,59 +0,0 @@
-import constants
-
-with open(constants.INPUT_FILE, 'r') as file:
-    line = file.readline()
-    vector_a = line.strip().split(constants.SEPARATOR)
-    line = file.readline()
-    vector_b = line.strip().split(constants.SEPARATOR)
-
-for num in range(0, len(vector_a)):
-    vector_a[num] = float(vector_a[num])
-
-for num in range(0, len(vector_b)):
-    vector_b[num] = float(vector_b[num])
-
-print("Vector A:", vector_a)
-print("Vector B:", vector_b)
-
-#print("Choose operation (+,-,/,*):", end=' ')
-
-def add(vector_a, vector_b):
-    vector_c = []
-    for i in range(len(vector_a)):
-        vector_c.append(vector_a[i] + vector_b[i])
-    return vector_c
-
-def subtract(vector_a, vector_b):
-    vector_c = []
-    for i in range(len(vector_a)):
-        vector_c.append(vector_a[i] - vector_b[i])
-    return vector_c
-
-def multiply(vector_a,  vector_b):
-    vector_c = []
-    for i in range(len(vector_a)):
-        vector_c.append(vector_a[i] * vector_b[i])
-    return vector_c
-
-def divide(vector_a, vector_b):
-    vector_c = []
-    for i in range(len(vector_a)):
-        vector_c.append(vector_a[i] / vector_b[i])
-    return vector_c
-
-'''match input():
-    case '+':
-        add(vector_a, vector_b)
-    case '-':
-        subtract(vector_a, vector_b)
-    case '*':
-        print(multiply(vector_a, vector_b))
-    case '/':
-        print(multiply(vector_a, vector_b))
-'''
-
-with open(constants.OUTPUT_FILE, 'w') as file:
-    file.writelines("Addition:\n" + str(add(vector_a, vector_b)) + '\n')
-    file.writelines("Subtraction:\n" + str(subtract(vector_a, vector_b)) + '\n')
-    file.writelines("Multiplication:\n" + str(multiply(vector_a, vector_b)) + '\n')
-    file.writelines("Division:\n" + str(divide(vector_a, vector_b)) + '\n')
\ No newline at end of file
Index: Trachyk Yura-Maksym/Homework/Vector/first_vector.txt
===================================================================
diff --git a/Trachyk Yura-Maksym/Homework/Vector/first_vector.txt b/Trachyk Yura-Maksym/Homework/Vector/first_vector.txt
deleted file mode 100644
--- a/Trachyk Yura-Maksym/Homework/Vector/first_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 2 3
\ No newline at end of file
Index: BoikoStepan/Vector/Fvector.txt
===================================================================
diff --git a/BoikoStepan/Vector/Fvector.txt b/BoikoStepan/Vector/Fvector.txt
deleted file mode 100644
--- a/BoikoStepan/Vector/Fvector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-2 2 2 2 2
\ No newline at end of file
Index: FlysYurii/Task(Matrix and vectors)/result_vector.txt
===================================================================
diff --git a/FlysYurii/Task(Matrix and vectors)/result_vector.txt b/FlysYurii/Task(Matrix and vectors)/result_vector.txt
deleted file mode 100644
--- a/FlysYurii/Task(Matrix and vectors)/result_vector.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-92, 13, 42, 50
Index: RostyslavPasternak/Practical/Practical_2/User.py
===================================================================
diff --git a/RostyslavPasternak/Practical/Practical_2/User.py b/RostyslavPasternak/Practical/Practical_2/User.py
deleted file mode 100644
--- a/RostyslavPasternak/Practical/Practical_2/User.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,21 +0,0 @@
-from pyxtension.streams import stream
-from functools import reduce
-
-class User:
-    def __init__(self, name, age):
-        self.name = name
-        self.age = age
-    def print(self):
-        return "Name: " + self.name.__str__() + " Age: "+ self.age.__str__()
-
-
-list = []
-list.append(User("Yura", 98))
-list.append(User("Lev", 12))
-list.append(User("Stepan",32))
-
-second_list = (stream(list)
-               .map(lambda x: x.print())
-               .toList())
-
-print(second_list)
\ No newline at end of file
Index: BohdanFariyon/5.ClassMatrix/matrix_rez.txt
===================================================================
diff --git a/BohdanFariyon/5.ClassMatrix/matrix_rez.txt b/BohdanFariyon/5.ClassMatrix/matrix_rez.txt
deleted file mode 100644
--- a/BohdanFariyon/5.ClassMatrix/matrix_rez.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,9 +0,0 @@
-Addition:
-None
-Subtraction:
-0.0 0.0
-1.0 1.0
-Multiplication:
-None
-Division:
-None
Index: ZlatomyraSeverylova/classMatrix/input_matrix_a.txt
===================================================================
diff --git a/ZlatomyraSeverylova/classMatrix/input_matrix_a.txt b/ZlatomyraSeverylova/classMatrix/input_matrix_a.txt
deleted file mode 100644
--- a/ZlatomyraSeverylova/classMatrix/input_matrix_a.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,3 +0,0 @@
-3 4 5
-2 3 1
-7 4 5
Index: Oleh Kaliuzhnyi/VectorClass/vector_one.txt
===================================================================
diff --git a/Oleh Kaliuzhnyi/VectorClass/vector_one.txt b/Oleh Kaliuzhnyi/VectorClass/vector_one.txt
deleted file mode 100644
--- a/Oleh Kaliuzhnyi/VectorClass/vector_one.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-4 3 2 1
\ No newline at end of file
Index: DarynaKovalchuk/Fibonacci/Fibonacci.py
===================================================================
diff --git a/DarynaKovalchuk/Fibonacci/Fibonacci.py b/DarynaKovalchuk/Fibonacci/Fibonacci.py
deleted file mode 100644
--- a/DarynaKovalchuk/Fibonacci/Fibonacci.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,12 +0,0 @@
-with open('input.txt', 'r') as file:
-    line = file.readline().split()
-    a, b = int(line[0]), int(line[1])
-N = 100
-fibonacci = [a, b]
-for i in range(2, N):
-    next_number = a + b 
-    fibonacci.append(next_number)
-    a, b = b, next_number
-with open('output.txt', 'w') as output_file:
-    output_file.write(f"{fibonacci}")
-print(f"{fibonacci}")
Index: LevPredko/MatrixVectorWithClass_1/inputVector1.txt
===================================================================
diff --git a/LevPredko/MatrixVectorWithClass_1/inputVector1.txt b/LevPredko/MatrixVectorWithClass_1/inputVector1.txt
deleted file mode 100644
--- a/LevPredko/MatrixVectorWithClass_1/inputVector1.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,1 +0,0 @@
-1 3 4
\ No newline at end of file
Index: MaksymPetukhov/vectorTask4/main.py
===================================================================
diff --git a/MaksymPetukhov/vectorTask4/main.py b/MaksymPetukhov/vectorTask4/main.py
deleted file mode 100644
--- a/MaksymPetukhov/vectorTask4/main.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ /dev/null	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
@@ -1,68 +0,0 @@
-import constants
-
-with open(constants.INPUT_FILE, 'r') as file:
-    line = file.readline()
-    vector_a = line.strip().split(constants.SEPARATOR)
-    line = file.readline()
-    vector_b = line.strip().split(constants.SEPARATOR)
-
-vector_a = [float(i) for i in vector_a]
-vector_b = [float(i) for i in vector_b]
-
-print("Vector A:", vector_a)
-print("Vector B:", vector_b)
-
-
-class Vector:
-
-    def __init__(self, vector):
-        self.vector = vector
-
-    def __add__(self, vector_b):
-        return self.add(vector_b)
-
-    def __sub__(self, vector_b):
-        return self.sub(vector_b)
-
-    def __mul__(self, vector_b):
-        return self.multiply(vector_b)
-
-    def __truediv__(self, vector_b):
-        return self.divide(vector_b)
-
-    def add(self, vector_b):
-        vector_c = []
-        for i in range(len(vector_b)):
-            vector_c.append(self.vector[i] + vector_b[i])
-        return vector_c
-
-    def sub(self, vector_b):
-        vector_c = []
-        for i in range(len(vector_b)):
-            vector_c.append(self.vector[i] - vector_b[i])
-        return vector_c
-
-    def multiply(self, vector_b):
-        vector_c = []
-        for i in range(len(vector_b)):
-            vector_c.append(self.vector[i] * vector_b[i])
-        return vector_c
-
-    def divide(self, vector_b):
-        vector_c = []
-        for i in range(len(vector_b)):
-            try:
-                vector_c.append(self.vector[i] / vector_b[i])
-            except ZeroDivisionError as e:
-                print("Can't divide by zero!")
-                vector_c.append(0)
-        return vector_c
-
-
-vector_a = Vector(vector_a)
-
-with open(constants.OUTPUT_FILE, 'w') as file:
-    file.writelines("Addition:\n" + str(vector_a + vector_b) + '\n')
-    file.writelines("Subtraction:\n" + str(vector_a - vector_b) + '\n')
-    file.writelines("Multiplication:\n" + str(vector_a * vector_b) + '\n')
-    file.writelines("Division:\n" + str(vector_a / vector_b) + '\n')
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.9 (Vector)\" project-jdk-type=\"Python SDK\" />\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ b/.idea/misc.xml	(date 1695999707801)
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9 (Vector)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.11 (CodesUniver)" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: LevPredko/ArrayList/ArrayList.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Constants\n\n\nclass ArrayList:\n\n    def __init__(self):\n        self.array = []\n\n    def read_from_file(self, filename, use_comma=True):\n        with open(filename, 'r') as file:\n            line = file.readline()\n            if use_comma:\n                self.array = line.strip().split(',')\n            else:\n                self.array = line.strip().split()\n\n    def add(self, item):\n        self.array.append(item)\n\n    def remove(self, item):\n        if item in self.array:\n            self.array.remove(item)\n\n    def insert(self, index, item):\n        self.array.insert(index, item)\n\n    def clear(self):\n        self.array = []\n\n    def __str__(self):\n        return ', '.join(map(str, self.array))\n\n\nmy_list = ArrayList()\n\nmy_list.read_from_file(Constants.ARRAYLISTFILE)\n\nmy_list.add(1)\nmy_list.add(2)\nmy_list.add(3)\nprint(my_list)\n\nmy_list.remove(2)\nprint(my_list)\n\nmy_list.insert(1, 10)\nprint(my_list)\n\nmy_list.clear()\nprint(my_list)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LevPredko/ArrayList/ArrayList.py b/LevPredko/ArrayList/ArrayList.py
--- a/LevPredko/ArrayList/ArrayList.py	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ b/LevPredko/ArrayList/ArrayList.py	(date 1695999707802)
@@ -1,6 +1,5 @@
 import Constants
 
-
 class ArrayList:
 
     def __init__(self):
@@ -35,9 +34,7 @@
 
 my_list.read_from_file(Constants.ARRAYLISTFILE)
 
-my_list.add(1)
-my_list.add(2)
-my_list.add(3)
+my_list.add(100)
 print(my_list)
 
 my_list.remove(2)
Index: LevPredko/ArrayList/ArrayList.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>4 7 3 4 5 6 7 8 2 5 4 3
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LevPredko/ArrayList/ArrayList.txt b/LevPredko/ArrayList/ArrayList.txt
--- a/LevPredko/ArrayList/ArrayList.txt	(revision bb4730a395f860e04279f57fac782d2549e9ff07)
+++ b/LevPredko/ArrayList/ArrayList.txt	(date 1695999707802)
@@ -1,1 +1,1 @@
-4 7 3 4 5 6 7 8 2 5 4 3
\ No newline at end of file
+4, 7, 3, 4, 5, 6, 7, 8, 2, 5, 4, 3
\ No newline at end of file
diff --git a/BoikoStepan/Vector_Classes/OutputVector.txt b/BoikoStepan/Vector_Classes/OutputVector.txt
deleted file mode 100644
diff --git a/Vasylyshyn_Dmytro/__init__.py b/Vasylyshyn_Dmytro/__init__.py
deleted file mode 100644
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/__init__.py b/Vasylyshyn_Dmytro/HomeWork/Lesson_2_Matrix_Clas/__init__.py
deleted file mode 100644
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/__init__.py b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/With pumpy/__init__.py
deleted file mode 100644
diff --git a/Vasylyshyn_Dmytro/TasksFromLessons/__init__.py b/Vasylyshyn_Dmytro/TasksFromLessons/__init__.py
deleted file mode 100644
diff --git a/anastasiia_trushchak/Homework/Homework_02/MatrixClass/inputMatrix1.txt b/anastasiia_trushchak/Homework/Homework_02/MatrixClass/inputMatrix1.txt
deleted file mode 100644
diff --git a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/__init__.py b/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_01_09/__init__.py
deleted file mode 100644
diff --git a/BoikoStepan/Matrix_Classes/OutputMatrix.txt b/BoikoStepan/Matrix_Classes/OutputMatrix.txt
deleted file mode 100644
diff --git a/anastasiia_trushchak/Practical/Practical_01/bambam.py b/anastasiia_trushchak/Practical/Practical_01/bambam.py
deleted file mode 100644
diff --git a/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/__init__.py b/Vasylyshyn_Dmytro/TasksFromLessons/Lesson_2_15_09/__init__.py
deleted file mode 100644
diff --git a/anastasiia_trushchak/Homework/Homework_02/MatrixClass/inputMatrix2.txt b/anastasiia_trushchak/Homework/Homework_02/MatrixClass/inputMatrix2.txt
deleted file mode 100644
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/__init__.py b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/__init__.py
deleted file mode 100644
diff --git a/Oles Prokopiv/homework/vector/output.txt b/Oles Prokopiv/homework/vector/output.txt
deleted file mode 100644
diff --git a/anastasiia_trushchak/Homework/Homework_02/MatrixClass/output.txt b/anastasiia_trushchak/Homework/Homework_02/MatrixClass/output.txt
deleted file mode 100644
diff --git a/Vasylyshyn_Dmytro/HomeWork/__init__.py b/Vasylyshyn_Dmytro/HomeWork/__init__.py
deleted file mode 100644
diff --git a/Vasylyshyn_Dmytro/fiool.py b/Vasylyshyn_Dmytro/fiool.py
deleted file mode 100644
diff --git a/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/__init__.py b/Vasylyshyn_Dmytro/HomeWork/Lesson_01_09/Without numpy/__init__.py
deleted file mode 100644
